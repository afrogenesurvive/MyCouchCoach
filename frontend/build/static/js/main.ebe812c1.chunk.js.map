{"version":3,"sources":["context/auth-context.js","components/AlertBox.js","components/LoadingOverlay.js","components/Forms/user/VerifyUserForm.js","pages/auth/Auth.js","components/Forms/user/CreateUserForm.js","pages/auth/Signup.js","components/Spinner/Spinner.js","pages/Sidebar.js","components/SidebarControl.js","components/Users/UserList/UserItem/UserAddressItem.js","components/Users/UserList/UserAddressList.js","components/Users/UserList/UserItem/UserProfileImageItem.js","components/Users/UserList/UserProfileImageList.js","components/Users/UserList/UserItem/UserSocialMediaItem.js","components/Users/UserList/UserSocialMediaList.js","components/Users/UserList/UserItem/UserPerkItem.js","components/Users/UserList/UserPerkList.js","components/Users/UserList/UserItem/UserPromoItem.js","components/Users/UserList/UserPromoList.js","components/Users/UserList/UserItem/UserInterestItem.js","components/Users/UserList/UserInterestList.js","components/Users/UserList/UserItem/UserTagItem.js","components/Users/UserList/UserTagList.js","components/Users/UserList/UserItem/UserFriendItem.js","components/Users/UserList/UserFriendList.js","components/Users/UserList/UserItem/UserFriendRequestItem.js","components/Users/UserList/UserFriendRequestList.js","components/Users/UserList/UserItem/UserCartItemItem.js","components/Users/UserList/UserCartItemList.js","components/Users/UserList/UserItem/UserBookedLessonItem.js","components/Users/UserList/UserBookedLessonList.js","components/Users/UserList/UserItem/UserLikedLessonItem.js","components/Users/UserList/UserLikedLessonList.js","components/Users/UserList/UserItem/UserAttendedLessonItem.js","components/Users/UserList/UserAttendedLessonList.js","components/Users/UserList/UserItem/UserTaughtLessonItem.js","components/Users/UserList/UserTaughtLessonList.js","components/Users/UserList/UserItem/UserPaymentInfoItem.js","components/Users/UserList/UserPaymentInfoList.js","components/Users/UserList/UserItem/UserOrderItem.js","components/Users/UserList/UserOrderList.js","components/Users/UserList/UserItem/UserReviewItem.js","components/Users/UserList/UserReviewList.js","components/Users/UserList/UserItem/UserMessageItem.js","components/Users/UserList/UserMessageList.js","components/Users/UserList/UserItem/UserActivityItem.js","components/Users/UserList/UserActivityList.js","components/Forms/user/UpdateUserBasicForm.js","components/Forms/user/UpdateUserFieldForm.js","components/Forms/user/AddUserAddressForm.js","components/Forms/user/AddUserProfileImageForm.js","components/Forms/user/AddUserSocialMediaForm.js","components/Forms/user/AddUserInterestsForm.js","components/Forms/user/AddUserTagsForm.js","components/Forms/user/AddUserPaymentInfoForm.js","components/Forms/user/AddUserPointsForm.js","components/Forms/user/AddUserPerkForm.js","components/Forms/user/AddUserPromoForm.js","components/Forms/user/AddUserFriendForm.js","components/Forms/message/CreateMessageForm.js","components/Forms/order/CreateOrderForm.js","components/Forms/review/CreateReviewForm.js","components/Lessons/LessonList/LessonItem/MeetingSessionItem.js","components/Lessons/LessonList/MeetingSessionList.js","components/Lessons/LessonList/LessonItem/SessionBookedItem.js","components/Lessons/LessonList/SessionBookedList.js","components/Lessons/LessonList/LessonItem/SessionAttendedItem.js","components/Lessons/LessonList/SessionAttendedList.js","components/Forms/lesson/UpdateSessionFieldForm.js","components/SessionDetailViewer.js","components/Users/thisUserProfile.js","components/Lessons/LessonList/LessonItem/LessonSessionItem.js","components/Lessons/LessonList/LessonSessionList.js","components/Lessons/LessonList/LessonItem/LessonScheduleItem.js","components/Lessons/LessonList/LessonScheduleList.js","components/Lessons/LessonList/LessonItem/LessonInstructorItem.js","components/Lessons/LessonList/LessonInstructorList.js","components/Lessons/LessonList/LessonItem/LessonRequirementItem.js","components/Lessons/LessonList/LessonRequirementList.js","components/Lessons/LessonList/LessonItem/LessonMaterialItem.js","components/Lessons/LessonList/LessonMaterialList.js","components/Lessons/LessonList/LessonItem/LessonTagItem.js","components/Lessons/LessonList/LessonTagList.js","components/Lessons/LessonList/LessonItem/LessonImageItem.js","components/Lessons/LessonList/LessonImageList.js","components/Lessons/LessonList/LessonItem/LessonFileItem.js","components/Lessons/LessonList/LessonFileList.js","components/Lessons/LessonList/LessonItem/LessonReviewItem.js","components/Lessons/LessonList/LessonReviewList.js","components/Forms/lesson/CreateLessonSessionForm.js","components/Forms/lesson/UpdateLessonBasicForm.js","components/Forms/lesson/UpdateLessonFieldForm.js","components/Forms/lesson/AddLessonRequirementsForm.js","components/Forms/lesson/AddLessonMaterialsForm.js","components/Forms/lesson/AddLessonTagsForm.js","components/Forms/lesson/AddLessonImageForm.js","components/Forms/lesson/AddLessonFileForm.js","components/Forms/lesson/AddLessonInstructorForm.js","components/ProfileLessonViewer.js","pages/user/UserProfile.js","components/Users/UserList/UserItem/UserItem.js","components/Users/UserList/UserList.js","components/Users/UserList/SearchUserList.js","components/AttachmentViewer.js","components/Forms/user/MessageUserListForm.js","components/Users/UserDetail.js","components/UserDetailViewer.js","components/Forms/user/SearchUserFieldBasicForm.js","components/Forms/user/SearchUserFieldRegexForm.js","pages/user/Users.js","components/Lessons/LessonList/LessonItem/LessonItem.js","components/Lessons/LessonList/LessonList.js","components/Lessons/LessonList/LessonItem/SearchLessonItem.js","components/Lessons/LessonList/SearchLessonList.js","components/Lessons/LessonList/LessonItem/SearchSession.js","components/Lessons/LessonDetail.js","components/LessonDetailViewer.js","components/Forms/lesson/CreateLessonForm.js","components/Forms/lesson/SearchLessonFieldRegexForm.js","components/Forms/lesson/SearchLessonFieldBasicForm.js","components/Forms/lesson/SearchLessonSessionForm.js","pages/lesson/Lessons.js","components/Lessons/PublicLessonDetail.js","components/PublicLessonDetailViewer.js","components/Forms/lesson/SearchPublicLessonForm.js","pages/lesson/PublicLessons.js","components/Forms/user/ResetPasswordForm.js","pages/auth/PasswordReset.js","pages/Landing.js","components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","token","activityId","activityA","activityB","activityC","role","userId","user","users","selectedUser","lesson","lessons","selectedLesson","selectedPerk","selectedPromo","selectedReview","sender","receiver","userAlert","file","fancyDate","login","tokenExpiration","logout","AlertBox","props","alert","className","Alert","variant","LoadingOveray","status","verifyUserForm","Form","onSubmit","onConfirm","Row","Group","as","Col","controlId","Label","Control","type","placeholder","Text","canCancel","Button","onClick","onCancel","canConfirm","AuthPage","state","verifying","overlay","overlayStatus","activeTab","userSeshStore","model","retrieveLogin","console","log","context","sessionStorage","getItem","submitHandler","event","preventDefault","setState","email","target","formBasicEmail","value","password","formBasicPassword","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","Error","json","resData","responseAlert","data","slice","error","setItem","catch","err","isActive","showSidebar","sidebarShow","mCol2Size","hideSidebar","verifyUser","contactEmail","formGridEmail","verificationType","formGridType","verificationCode","formGridCode","startVerification","closeVerification","this","getThisUser","Authorization","thisUser","_id","request","Container","authId","LoadingOverlay","size","to","VerifyUserForm","Component","contextType","AuthContext","CreateUserForm","title","onChange","e","checked","rows","successText","SignupPage","success","creating","modalConfirmUserHandler","formGridPassword","name","formGridName","username","formGridUsername","formGridRole","publicProfile","formGridPublicCheckbox","dob","formGridDob","contactPhone","formGridPhone","contactPhone2","formGridPhone2","addressType","formGridAddressType","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressCity","formGridAddressCity","addressCountry","formGridAddressCountry","addressPostalCode","formGridAddressPostalCode","bio","formGridBio","newUser","createUser","errors","verification","code","cancelSignup","Fragment","authUserId","confirmText","spinner","SidebarPage","authContext","_currentValue","md","Card","border","Body","Title","Subtitle","SidebarControl","onShowSidebar","onHideSidebar","userAddressItem","key","number","street","town","city","country","postalCode","primary","toString","canDelete","onDelete","bind","address","makeAddressPrimary","orderForm","addToOrder","userAddressList","filter","userAddresses","propsUserAddresses","field","x","map","UserAddressItem","userProfileImageItem","Image","src","path","fluid","profileImage","userProfileImageList","userProfileImages","UserProfileImageItem","userSocialMediaItem","platform","handle","link","socialMediaAccount","userSocialMediaList","userSocialMedia","UserSocialMediaItem","userPerkItem","imageLink","date","description","perk","userPerkList","userPerks","perkDate","Date","substr","toLocaleDateString","UserPerkItem","startDate","endDate","promo","userPromoList","userPromos","promoStartDate","promoEndDate","UserPromoItem","valid","userInterestItem","interest","userInterestList","userInterests","UserInterestItem","userTagItem","tag","userTagList","userTags","UserTagItem","userFriendItem","style","width","profileImages","Img","phone","loggedIn","online","socialMedia","onSelect","friend","userFriendList","userFriends","UserFriendItem","contact","clientConnected","userFriendRequestItem","received","onAccept","friendRequest","onReject","userFriendRequestList","userFriendRequests","requestDate","UserFriendRequestItem","userCartItemItem","dateAdded","sessionDate","sessionTitle","cartItem","UserCartItemList","cart","userCartItems","cartItemDateAdded","toISOString","cartItemSessionDate","UserCartItemItem","userBookedLessonItem","dateBooked","sessionTime","viewLessonDetails","bookedLesson","userBookedLessonList","bookedLessons","userBookedLessons","session","UserBookedLessonItem","ref","time","userLikedLessonItem","likedLesson","userLikedLessonList","likedLessons","userLikedLessons","UserLikedLessonItem","userAttendedLessonItem","attendedLesson","hasReviewed","startCreateReview","userAttendedLessonList","attendedLessons","userAttendedLessons","reviewedLessonIds","includes","attendedLessonDate","userTaughtLessonItem","taughtLesson","userTaughtLessonList","taughtLessons","userTaughtLessons","taughtLessonDate","UserTaughtLessonItem","userPaymentInfoItem","paymentInfoItem","paymentInfoList","paymentInfo","userPaymentInfo","paymentInfoItemDate","UserPaymentInfoItem","userOrderItem","totals","c","order","userOrderList","userOrders","orderDate","UserOrderItem","buyer","tax","notes","payment","shipping","billingAddress","shippingAddress","feedback","userReviewItem","rating","userReviewList","userReviews","review","reviewDate","UserReviewItem","userMessgeItem","subject","messageMessage","read","onStartReply","message","userMessageList","userMessages","messageDate","UserMessageItem","userActivityItem","activityDate","userActivityList","activity","userActivity","UserActivityItem","UpdateUserBasicForm","prevDob","phone2","canCancelProfile","UpdateUserFieldForm","AddUserAddressForm","AddUserProfileImageForm","AddUserSocialMediForm","AddUserInterestsForm","AddUserTagsForm","AddUserPaymentInfoForm","useState","payInfoDate","setPayInfoDate","id","selected","AddUserPointsForm","AddUserPerkForm","AddUserPromoForm","AddUserFriendForm","requestingFriendId","CreateMessageForm","replyTo","CreateOrderForm","billingAddresses","addresses","primaryShippingAddresses","primaryBillingAddresses","primaryShippingAddress","primaryBillingAddress","step","subtotal","CreateReviewForm","max","meetingSessionItem","full","limit","amount","url","bookedAmount","attendedAmount","viewSessionDetails","meetingSessionList","sessions","lessonSessions","sessionBookedItem","addSessionAttendance","isInstructor","userAttended","attendance","sessionBookedList","booked","userAttended2","attended","SessionBookedItem","sessionAttendedItem","sessionAttendedList","SessionAttendedItem","UpdateSessionFieldForm","SessionDetailViewer","lessonInstructors","hideSessionDetails","lessonTitle","showSessionBooked","hideSessionBooked","showSessionAttended","hideSessionAttended","sessionBookedState","SessionBookedList","sessionAttendedState","SessionAttendedList","editSessionField","startEditSessionField","editingSessionField","cancelEditSessionField","thisUserProfile","userDob","sentRequests","receivedRequests","friendRequests","messagesSent","messagesReceived","messages","reviews","hasShippingAddress","orderSubtotal3","price","reduce","a","b","toFixed","Tabs","defaultActiveKey","Tab","eventKey","disabled","age","points","public","verified","onStartUpdate","onStartUpdateField","onStartAdd","updating","userAddField","userEditBasic","updatingField","userEditField","userAddPoints","setFilter","userAddAddress","UserAddressList","userDeleteAddress","userAddProfileImage","UserProfileImageList","userDeleteProfileImage","AddUserSocialMediaForm","userAddSocialMedia","UserSocialMediaList","userDeleteSocialMedia","userAddPerk","perks","UserPerkList","userDeletePerk","userAddPromo","promos","UserPromoList","userDeletePromo","userAddInterests","interests","UserInterestList","userDeleteInterest","userAddTags","tags","UserTagList","userDeleteTag","userAddFriend","requestingFriend","friends","UserFriendList","userDeleteFriend","userSelectFriend","UserFriendRequestList","userRejectFriendRequest","userAcceptFriendRequest","startCartCheckout","creatingOrder","cancelCartCheckout","createOrder","addAddressToOrder","orderBillingAddress","orderShippingAddress","userDeleteCartItem","UserLikedLessonList","userDeleteLikedLesson","UserBookedLessonList","userDeleteBookedLesson","creatingReview","reviewLesson","author","cancelCreateReview","createReview","UserAttendedLessonList","userDeleteAttendedLesson","UserTaughtLessonList","userDeleteTaughtLesson","userAddPaymentInfo","UserPaymentInfoList","userDeletePaymentInfo","onStartCreateMessage","messageReceiver","userCreateMessage","messageReplying","onCancelReply","onReply","UserMessageList","userDeleteMessage","orders","UserOrderList","userDeleteOrder","UserReviewList","userDeleteReview","loadMeetings","hideMeetings","sessionDetailViewer","meetingsLoaded","MeetingSessionList","meetingSessions","UserActivityList","userDeleteActivity","lessonSessionItem","meetings","onBookSession","onAddCartLesson","lessonSessionList","lessonScheduleItem","lessonScheduleList","dates","lessonSchedule","scheduleDate","LessonScheduleItem","lessonInstructorItem","instructor","lessonInstructorList","instructors","LessonInstructorItem","lessonRequirementItem","requirement","lessonRequirementList","requirements","lessonRequirements","LessonRequirementItem","lessonMaterialItem","material","lessonMaterialList","materials","lessonMaterials","LessonMaterialItem","lessonTagItem","lessonTagList","lessonTags","LessonTagItem","lessonImageItem","image","lessonImageList","images","lessonImages","LessonImageItem","lessonFileItem","lessonFileList","files","lessonFiles","LessonFileItem","lessonReviewItem","isAuthor","lessonReviewList","lessonReviews","CreateLessonSessionForm","setDate","UpdateLessonBasicForm","subtitle","duration","category","sku","UpdateLessonFieldForm","AddLessonRequirementsForm","AddLessonMaterialsForm","AddLessonTagsForm","AddLessonImageForm","AddLessonInstructorForm","selectedInstructor","ProfileLessonViewer","lessonType","profileLesson","toggleSchedule","showScheduleState","LessonScheduleList","schedule","closeProfileLessonView","toggleSessions","showSessionState","LessonSessionList","startCreateSession","creatingSession","cancelCreateSession","createLessonSession","toggleReviews","showReviewsState","LessonReviewList","toggleRequirements","startLessonAdd","lessonAddField","cancelLessonAdd","addLessonRequirements","showRequirementsState","LessonRequirementList","deleteLessonRequirement","toggleMaterials","addLessonMaterials","showMaterialsState","LessonMaterialList","deleteLessonMaterial","toggleImages","addLessonImage","showImagesState","LessonImageList","gallery","deleteLessonImage","toggleFiles","AddLessonFileForm","addLessonFile","showFilesState","LessonFileList","deleteLessonFile","toggleInstructors","addLessonInstructor","showInstructorsState","LessonInstructorList","deleteLessonInstructor","toggleTags","addLessonTags","showTagsState","LessonTagList","deleteLessonTag","onStartEditLessonBasic","editingLesson","cancelEditBasic","editLessonBasic","onStartEditLessonField","editingLessonField","cancelEditField","editLessonField","UserProfile","userCopy","adding","deleting","isLoading","userUpdateField","showAttachment","showThisAttachmentFile","showThisAttachmentType","mCol1Size","messagesLoaded","finalConfirmation","socketMsg","selectedFriendRequest","userSelectedFriend","profileLessonViewer","profileLessonViewerData","profileLessonType","args","addUserField","startCreateMessage","updatedUser","updateUserBasic","formGridQuery","formGridFieldSelect","updateUserByField","formGridPoints","addUserPoints","addUserAddress","addressPrimary","deleteUserAddress","setUserAddressPrimary","profileImageName","formGridFilename","profileImageType","formGridFiletype","profileImagePath","formGridFilepath","addUserProfileImage","deleteUserProfileImage","socialMediaPlatform","formGridPlatform","socialMediaHandle","formGridHandle","socialMediaLink","formGridLink","addUserSocialMedia","deleteUserSocialMedia","paymentInfoDate","paymentInfoType","formGridPaymentInfoType","paymentInfoDescription","formGridDescription","paymentInfoBody","formGridBody","paymentInfoPrimary","formGridPaymentInfoPrimaryCheckbox","addUserPaymentInfo","paymentInfoValid","deleteUserPaymentInfo","formGridInterests","addUserInterests","deleteUserInterest","formGridTags","addUserTags","deleteUserTag","friendId","addUserFriend","senderId","receiverId","deleteFriendRequest","deleteUserFriend","lessonId","deleteUserCartLesson","deleteUserBookedLesson","deleteUserLikedLesson","orderStripePayment","userCartLessonSkus","addMultipleBookings","buyerId","totalA","formGridTotalA","totalB","formGridTotalB","taxDescription","formGridTaxDescription","taxAmount","formGridTaxAmount","formGridNotes","formGridPayment","formGridShipping","billingAddressNumber","formGridBillingAddressNumber","billingAddressStreet","formGridBillingAddressStreet","billingAddressTown","formGridBillingAddressTown","billingAddressCity","formGridBillingAddressCity","billingAddressCountry","formGridBillingAddressCountry","billingAddressPostalCode","formGridBillingAddressPostalCode","shippingAddressNumber","formGridShippingAddressNumber","shippingAddressStreet","formGridShippingAddressStreet","shippingAddressTown","formGridShippingAddressTown","shippingAddressCity","formGridShippingAddressCity","shippingAddressCountry","formGridShippingAddressCountry","shippingAddressPostalCode","formGridShippingAddressPostalCode","orderId","deleteUserOrder","reviewId","deleteUserReview","senderName","timeString2","formGridTypeSelect","formGridSubject","formGridMessage","msgObject","sendSocketMessage","createMessage","messageId","deleteMessage","activityRequest","deleteUserActivity","modalCancelHandler","useAlert","getLessonById","formGridTitle","CalendarDate","formGridTime","sessionLimit","formGridLimit","addLessonBooking","formGridSubtitle","formGridDuration","formGridCategory","formGridSku","formGridPrice","updateLessonBasic","updateLessonByField","sessionField","sessionQuery","updateSessionField","session2","newSession","inProgress","addLessonAttendance","getUserBookedSessionsToday","getLessonSession","formGridRating","formGridMaterials","formGridRequirements","imageName","formGridImagename","imageType","formGridImagetype","imagePath","formGridImagepath","fileName","fileType","formGridFilesize","fileSize","filePath","instructorId","clearAddressFilters","socket","io","emit","room","on","addMessage","userOnline","getPocketVars","pocketVariables","addUserActivity","conversationId","undefined","msg","you","userItem","onDetail","onSelectNoDetail","children","Child","useParams","userList","onViewDetail","canReport","onReport","onSelectMessageReceiver","onFriendRequest","searchUserList","AttachmentViewer","onCloseAttachmentView","href","attachmentFile","MessageUserListForm","UserDetail","isFriend","myFriends","onStartSendMessage","onHideUserDetail","creatingMessage","cancelMessage","sendMessage","UserDetailViewer","SearchUserFieldBasicForm","SearchUserFieldRegexForm","UsersPage","searching","searchUsers","isSorting","detailsLoaded","userSearchField","userSearchQuery","showDetail","modalConfirmSearchBasicHandler","formBasicQuery","formBasicFieldSelect","formBasicField","getUsersByField","modalConfirmSearchRegexHandler","getUsersByFieldRegex","deleteListUser","reportUser","startSendMessage","formBasicTypeSelect","showDetailHandler","getUserById","selectUserNoDetail","hideDetailHandler","sendFriendRequest","onViewAttachment","attachment","format","closeAttachmentView","fetchUsersBasic","getAllUsers","attachmentType","Accordion","sm","Nav","Item","Link","Content","Pane","SearchUserList","lesssonItem","lessonList","puplic","searchLessonItem","searchLessonList","searchLessons","SearchLessonItem","searchSession","LessonDetail","hasLiked","onHideLessonDetail","onLikeLesson","onSessionLoad","onHideSessions","sessionsLoaded","LessonDetailViewer","CreateLessonForm","SearchLessonFieldRegexForm","SearchLessonFieldBasicForm","SearchLessonSessionForm","LessonsPage","lessonUpdateField","lessonSearchField","lessonSearchQuery","getLessonsByFieldRegex","getLessonsByField","modalConfirmSearchSessionHandler","formGridSessionDate","formGridSessionTitle","startCreateLesson","createLessonHandler","creatorId","createLesson","loadSessions","hideSessions","addCartLesson","addUserCartLesson","bookSession","addLessonSession","deleteListLesson","reportLesson","prevState","find","selectLessonNoDetail","likeLesson","addUserLikedLesson","fetchLessonsBasic","getAllLessons","LessonList","SearchLessonList","creator","PublicLessonDetail","showSchedule","hideSchedule","PublicLessonDetailViewer","SearchPublicLessonForm","PublicLessonsPage","guestId","modalConfirmPublicSearchHandler","getPublicLessonsByField","fetchLessonsPublic","getAllPublicLessons","ResetPasswordForm","PasswordReset","resetState","passwordReset","LandingPage","isGuest","mainNavigation","Consumer","App","sessionCookiePresent","passwordResetState","logout2","formGridUserId","sessionStorageAuth","seshStore","clear","Provider","component","render","from","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebe812c1.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: {},\n    lesson: {},\n    lessons: [],\n    selectedLesson: null,\n    selectedPerk: null,\n    selectedPromo: null,\n    selectedReview: null,\n    sender: null,\n    receiver: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {}\n});\n","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nimport \"./AttachmentViewer.css\"\n\nconst LoadingOveray = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n      <h5 className=\"attachmentViewerTitle\">status : {props.status} ...</h5>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LoadingOveray;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"email\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>email</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridCode\">\n    <Form.Label>Code</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"verification code\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n// import Tabs from 'react-bootstrap/Tabs';\n// import Tab from 'react-bootstrap/Tab';\n\nimport Col from 'react-bootstrap/Col';\n// import Nav from 'react-bootstrap/Nav';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\n// import SidebarControl from '../../components/SidebarControl';\nimport VerifyUserForm from '../../components/Forms/user/VerifyUserForm';\n\n// import UserProfile from '../user/UserProfile';\n\nclass AuthPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    model: {},\n    activityA: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');\n    if (sessionStorage.getItem('token')) {\n      this.setState({userAlert: \"sessionStorage found...\",userSeshStore: true });\n      this.getThisUser();\n    }\n  }\n\n  retrieveLogin = () => {\n    // this.logUserActivity();\n    // const activityId = sessionStorage.getItem('activityId');\n    // const token = sessionStorage.getItem('token');\n    //\n    // let requestBody = null;\n    //   requestBody = {\n    //     query: `\n    //       mutation {userOnline(\n    //         activityId:\"${activityId}\",\n    //         userId:\"${activityId}\"\n    //       )\n    //       {_id,password,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n    //     `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //     console.log(resData.data);\n    //     this.context.user = resData.data.userOnline\n    //     console.log(\"retrieving login\");\n    //     this.context.login(\n    //       sessionStorage.getItem('token'),\n    //       sessionStorage.getItem('activityId'),\n    //       sessionStorage.getItem('role'),\n    //       sessionStorage.getItem('tokenExpiration'),\n    //     );\n    //   })\n    //   .catch(err => {\n    //     if (this.isActive) {\n    //       this.setState({userAlert: err});\n    //     }\n    //   });\n\n      console.log(\"retrieving login\");\n      this.context.login(\n        sessionStorage.getItem('token'),\n        sessionStorage.getItem('activityId'),\n        sessionStorage.getItem('role'),\n        sessionStorage.getItem('tokenExpiration'),\n      );\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    console.log('...User Login...');\n    this.setState({ userAlert: \"Logging you in...\"})\n    const email = event.target.formBasicEmail.value;\n    const password = event.target.formBasicPassword.value;\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n    let requestBody = null;\n      requestBody = {\n        query: `\n          query {login(email:\"${email}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // let foo = res.json();\n          // console.log(res,res.body,foo);\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        // this.setState({ activityA: JSON.stringify(requestBody)})\n        // this.logUserActivity();\n        // this.logUserActivity();\n        // let errors = null;\n        // if (\n        //   resData.errors ||\n        //   JSON.stringify(resData).slice(2,7) === 'error'\n        // ) {\n        //   errors = JSON.stringify({...resData.errors});\n        //   this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        // }\n        // console.log('*',resData);\n        // console.log('*',resData.data.login.error);\n        let responseAlert = JSON.stringify(resData.data).slice(2,25);\n        let error = null;\n        if (resData.data.login.error) {\n          error = resData.data.login.error;\n          responseAlert = error;\n        }\n\n        this.setState({userAlert: responseAlert})\n        // let sessionStorageLoginInfo = null;\n\n        if (resData.data.login.token !== \"\") {\n\n\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.activityId,\n            resData.data.login.role,\n            resData.data.login.tokenExpiration\n          );\n         sessionStorage.setItem('token', resData.data.login.token);\n         sessionStorage.setItem('activityId', resData.data.login.activityId);\n         sessionStorage.setItem('role', resData.data.login.role);\n         sessionStorage.setItem('tokenExpiration', resData.data.login.tokenExpiration);\n         // this.setState({ activityA: JSON.stringify(requestBody)})\n         // this.logUserActivity();\n        }\n      })\n      .catch(err => {\n        if (this.isActive) {\n          this.setState({userAlert: err});\n        }\n        // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n  };\n\n  showSidebar = () => {\n        this.setState({\n          sidebarShow: true,\n          mCol2Size: 9\n        })\n    }\n\n  hideSidebar = () => {\n        this.setState({\n          sidebarShow: false,\n          mCol2Size: 11\n        })\n    }\n\n  getThisUser() {\n    console.log(\"get this user...\");\n    const activityId = sessionStorage.getItem('activityId');\n    const token = sessionStorage.getItem('token');\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,lesson{_id},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const thisUser = resData.data.getThisUser;\n        this.context.user = thisUser;\n        this.setState({ activityA: '...autoLogin by '+thisUser._id+''})\n        // this.logUserActivity();\n        this.retrieveLogin();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  logUserActivity() {\n    console.log('logUserActivity...',sessionStorage.getItem('activityId'),this.state.activityA);\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = sessionStorage.getItem('activityId');\n    const token = sessionStorage.getItem('token');\n    const userId = activityId;\n    // const today = new Date().toLocaleDateString();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,lesson{_id},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        // this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        // this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const contactEmail = event.target.formGridEmail.value;\n    const verificationType = event.target.formGridType.value;\n    const verificationCode = event.target.formGridCode.value;\n\n    const requestBody = {\n      query: `\n      mutation {verifyUser(\n        userInput:{\n          contactEmail:\"${contactEmail}\",\n          verificationType:\"${verificationType}\",\n          verificationCode:\"${verificationCode}\"\n        })\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      console.log(JSON.stringify(requestBody));\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.verifyUser);\n        this.setState({userAlert: 'Verified...Please try loggin in again..'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startVerification = () => {\n    this.setState({verifying: true})\n  };\n  closeVerification = () => {\n    this.setState({verifying: false})\n  };\n\n\n  render() {\n    return (\n      <Container className=\"loginPageContainer\">\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n        <Row className=\"loginPageContainerRow2\">\n        <Col className=\"loginPageContainerCol2\">\n          <Form className=\"auth-form\" onSubmit={this.submitHandler}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n              <Form.Text className=\"text-muted\">\n                User Login\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Button variant=\"outline-success\" type=\"submit\" className=\"loginButton\" size=\"lg\">\n              Login\n            </Button>\n\n            <Button variant=\"outline-warning\" className=\"loginButton\" size=\"lg\">\n              <NavLink to=\"/signup\">Signup</NavLink>\n            </Button>\n          </Form>\n        </Col>\n        </Row>\n        <Row className=\"loginPageContainerRow2\">\n          <Col className=\"loginPageContainerCol2\">\n            <Button variant=\"outline-primary\" onClick={this.startVerification}>Verify</Button>\n            {this.state.verifying === true && (\n              <VerifyUserForm\n                canCancel\n                canConfirm\n                onCancel={this.closeVerification}\n                onConfirm={this.verifyUser}\n              />\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateUserForm = (props) => {\n\n  // const [dob, setDob] = useState(new Date());\n  //\n  // const handleChangeDob = date => {\n  //   setDob(date);\n  //   console.log(`Dob ${dob}`);\n  //  }\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridRole\">\n  <Form.Label>Role</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Instructor</option>\n  <option>User</option>\n\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone2\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"Date of Birth\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPublicCheckbox\">\n  <Form.Label>Public ?</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n</Form.Row>\n\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control as=\"select\">\n  //   <option>guest</option>\n  //   <option>nurse</option>\n  //   <option>doctor</option>\n  //   <option>staff</option>\n  //\n  //   </Form.Control>\n  // </Form.Group>\n  // </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"\">\n//   <Form.Label>Fancy D.O.B</Form.Label>\n//   <DatePicker className=\"\" id=\"staffCalendarDob\"\n//     selected={dob}\n//     onChange={handleChangeDob}\n//   />\n// </Form.Group>\n// </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridEmploymentDateTodayCheckbox\">\n//   <Form.Label>Today ?</Form.Label>\n//   <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n// </Form.Group>\n// </Form.Row>\n}\n\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Bio\"/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport AlertBox from '../../components/AlertBox';\nimport CreateUserForm from '../../components/Forms/user/CreateUserForm';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport './Auth.css';\n\nclass SignupPage extends Component {\n  state = {\n    role: null,\n    success: \"Signup!!\",\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    creating: false,\n  };\n\n  modalConfirmUserHandler = (event) => {\n    event.preventDefault();\n\n    this.setState({ creating: false, userAlert: \"Signing you up....\" });\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    let role = event.target.formGridRole.value;\n    let publicProfile = false;\n    if (event.target.formGridPublicCheckbox.checked === true) {\n      publicProfile = true;\n    }\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let addressType = event.target.formGridAddressType.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressCity = event.target.formGridAddressCity.value;\n    let addressCountry = event.target.formGridAddressCountry.value;\n    let addressPostalCode = event.target.formGridAddressPostalCode.value;\n    let bio = event.target.formGridBio.value;\n\n    if (\n      contactEmail.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      contactPhone.trim().length === 0 ||\n      contactPhone2.trim().length === 0 ||\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0 ||\n      bio.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return;\n    }\n\n    const token = this.context.token;\n    const requestBody = {\n      query: `\n            mutation {createUser(\n              userInput:{\n                role:\"${role}\",\n                name:\"${name}\",\n                password:\"${password}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                public:${publicProfile},\n                contactEmail:\"${contactEmail}\",\n                contactPhone:\"${contactPhone}\",\n                contactPhone2:\"${contactPhone2}\",\n                addressType:\"${addressType}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\",\n                bio:\"${bio}\"\n              })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const newUser = resData.data.createUser;\n        const errors = JSON.stringify({...resData.errors});\n        if (JSON.stringify(resData).slice(2,7) === 'error') {\n          this.setState({success: \"Something went wrong!!!\", userAlert: \"Something went wrong!!!\"+errors+\"\"  });\n        } else {\n          this.setState({success: \"Signup success...Proceed to login\", userAlert: \"Signup success...Proceed to login... your verification code is..\"+newUser.verification.code+\"\" });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  cancelSignup = () => {\n    this.setState({creating: false, role: null})\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"loginPageContainer\">\n\n      <Row className=\"loginPageContainerRow2\">\n      <Col className=\"loginPageContainerCol2\">\n\n        <CreateUserForm\n          canCancel\n          canConfirm\n          onConfirm={this.modalConfirmUserHandler}\n          onSubmit={this.modalConfirmUserHandler}\n          confirmText=\"Confirm\"\n          successText={this.state.success}\n          onCancel={this.cancelSignup}\n        />\n\n      </Col>\n      </Row>\n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../context/auth-context';\n// import LoadingOverlay from '../components/LoadingOverlay';\n\nimport './Sidebar.css';\n\nclass SidebarPage extends Component {\n  state = {\n    authContext: AuthContext._currentValue,\n    overlay: false,\n    overlayStatus: \"test\",\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <Container className=\"sidebarContainer\">\n      <Row className=\"sidebarRow1\">\n      <Col md={12} className=\"\">\n\n      <Card border=\"primary\" className=\"sidebarCard\">\n      <Card.Body>\n\n        <NavLink to=\"/userProfile\">My Profile (User)</NavLink>\n\n        <Card.Title className=\"cardTitle\">You</Card.Title>\n        <Card.Subtitle className=\"mb-2\">ID:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user._id}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Name:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.name}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Role:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.role}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n      <Card border=\"secondary\" className=\"sidebarCard\">\n      <Card.Body>\n        <Card.Title className=\"cardTitle\">Selection</Card.Title>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedUser._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedUser.username}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedLesson._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedLesson.title}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n      </Col>\n      </Row>\n      </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SidebarPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./SidebarControl.css\"\n\nconst SidebarControl = (props) =>{\n  return (\n    <div className=\"SidebarControl\">\n      <Button className=\"sidebarButton\" variant=\"success\" onClick={props.onShowSidebar}>+</Button>\n      <Button className=\"sidebarButton\" variant=\"danger\" onClick={props.onHideSidebar}>-</Button>\n    </div>\n  )\n}\n\nexport default SidebarControl;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userAddressItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        number: {props.number}\n      </Card.Text>\n      <Card.Text>\n        street: {props.street}\n      </Card.Text>\n      <Card.Text>\n        town: {props.town}\n      </Card.Text>\n      <Card.Text>\n        city: {props.city}\n      </Card.Text>\n      <Card.Text>\n        country: {props.country}\n      </Card.Text>\n      <Card.Text>\n        postalCode: {props.postalCode}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.address)}>\n            Delete\n          </Button>\n        )}\n\n\n          <Button variant=\"danger\" onClick={props.makeAddressPrimary.bind(this, props.address)}>\n            Make Primary\n          </Button>\n\n\n        { props.orderForm === true && (\n          <Button variant=\"danger\" value={JSON.stringify(props.address)} onClick={props.addToOrder.bind('x')}>\n            Add to order\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userAddressItem;\n","import React from 'react';\n\nimport UserAddressItem from './UserItem/UserAddressItem';\nimport './UserList.css';\n\nconst userAddressList = props => {\n\n  const {...filter} = props.filter;\n  // let userAddresses = [];\n  let userAddresses = props.userAddresses;\n  let propsUserAddresses = [];\n\n  if (filter.field === 'addresses' && filter.key === 'primary') {\n    propsUserAddresses = userAddresses.filter(x => x.primary === filter.value);\n    // userAddresses = propsUserAddresses;\n    console.log('...filter addresses...by...'+filter.key+'...'+filter.value);\n    console.log('...propsUserAddresses...'+propsUserAddresses.length,JSON.stringify(propsUserAddresses));\n    // console.log('...propsUserAddresses.filter stringify...',JSON.stringify(propsUserAddresses.filter(x => x.primary === filter.value)));\n    // console.log('...filter addresses...by...'+filter.key+'...'+filter.value+'...result length...'+propsUserAddresses.filter(x => x.primary === filter.value).length,'...result...',JSON.stringify(propsUserAddresses.filter(x => x.primary === filter.value)));\n    // console.log('...props.userAddresses filter ...',props.userAddresses.filter(x => x.primary === filter.value));\n    console.log('...props.userAddresses length...',props.userAddresses.length);\n    console.log('props.userAddresses',props.userAddresses);\n    console.log('let userAddresses',userAddresses);\n\n  }\n  if (filter.field === 'addresses' && filter.key === 'type') {\n    propsUserAddresses = props.userAddresses.filter(x => x.type === filter.value);\n  }\n  if (filter.field !== 'addresses') {\n    console.log('...no address filter...'+filter.key+'...'+filter.value);\n    console.log('let userAddresses',userAddresses);\n    console.log('propsUserAddresses',propsUserAddresses);\n    console.log('props.userAddresses',props.userAddresses);\n    // userAddresses = props.userAddresses;\n    // propsUserAddresses = userAddresses;\n    // propsUserAddresses = props.userAddresses;\n  }\n\n  userAddresses =  propsUserAddresses.map(address => {\n    return (\n      <UserAddressItem\n        key={address.postalCode}\n        authId={props.authId}\n        type={address.type}\n        number={address.number}\n        street={address.street}\n        town={address.town}\n        city={address.city}\n        country={address.country}\n        postalCode={address.postalCode}\n        primary={address.primary}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        orderForm={props.orderForm}\n        addToOrder={props.addToOrder}\n        makeAddressPrimary={props.makeAddressPrimary}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userAddresses}</ul>;\n};\n\nexport default userAddressList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userProfileImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li>\n          <Image src={props.path} className=\"profileImageImg\" fluid />\n\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n        </ul>\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.profileImage)}>\n            Delete\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userProfileImageItem;\n","import React from 'react';\n\nimport UserProfileImageItem from './UserItem/UserProfileImageItem';\nimport './UserList.css';\n\nconst userProfileImageList = props => {\n  const userProfileImages = props.userProfileImages.map(profileImage => {\n\n    return (\n      <UserProfileImageItem\n        key={profileImage.path}\n        authId={props.authId}\n        name={profileImage.name}\n        type={profileImage.type}\n        path={profileImage.path}\n        profileImage={profileImage}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userProfileImages}</ul>;\n};\n\nexport default userProfileImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userSocialMediaItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.platform}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.handle}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.link}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.socialMediaAccount)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userSocialMediaItem;\n","import React from 'react';\n\nimport UserSocialMediaItem from './UserItem/UserSocialMediaItem';\nimport './UserList.css';\n\nconst userSocialMediaList = props => {\n  const userSocialMedia = props.userSocialMedia.map(socialMediaAccount => {\n\n    return (\n      <UserSocialMediaItem\n        key={socialMediaAccount.path}\n        authId={props.authId}\n        platform={socialMediaAccount.platform}\n        handle={socialMediaAccount.handle}\n        link={socialMediaAccount.link}\n        socialMediaAccount={socialMediaAccount}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userSocialMedia}</ul>;\n};\n\nexport default userSocialMediaList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> createOrder:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.perk)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPerkItem from './UserItem/UserPerkItem';\nimport './UserList.css';\n\nconst userPerkList = props => {\n  const userPerks = props.userPerks.map(perk => {\n\n    let perkDate = 0;\n    if (perk.date !== null && perk.date !== \"\") {\n      perkDate = new Date (perk.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n\n    return (\n      <UserPerkItem\n        key={perk.description}\n        authId={props.authId}\n        name={perk.name}\n        date={perkDate}\n        description={perk.description}\n        code={perk.code}\n        imageLink={perk.imageLink}\n        perk={perk}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPerks}</ul>;\n};\n\nexport default userPerkList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> start/end Dates:</p>\n          <p className=\"userItemText\">\n          {props.startDate}\n          </p>\n          <p className=\"userItemText\">\n          {props.endDate}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> code:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.promo)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPromoItem from './UserItem/UserPromoItem';\nimport './UserList.css';\n\nconst userPromoList = props => {\n  const userPromos = props.userPromos.map(promo => {\n    let promoStartDate = 0;\n    if (promo.startDate !== null && promo.startDate !== \"\") {\n      promoStartDate = new Date (promo.startDate.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n    let promoEndDate = 0;\n    if (promo.endDate !== null && promo.endDate !== \"\") {\n      promoEndDate = new Date (promo.endDate.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n\n    return (\n      <UserPromoItem\n        key={promo._id}\n        authId={props.authId}\n        _id={promo._id}\n        name={promo.name}\n        type={promo.type}\n        valid={promo.valid}\n        startDate={promoStartDate}\n        endDate={promoEndDate}\n        description={promo.description}\n        code={promo.code}\n        imageLink={promo.imageLink}\n        promo={promo}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPromos}</ul>;\n};\n\nexport default userPromoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userInterestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail2 users__list-item_detail\">\n    <div className=\"tag_card_body\">\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.interest}\n        </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.interest)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userInterestItem;\n","import React from 'react';\n\nimport UserInterestItem from './UserItem/UserInterestItem';\nimport './UserList.css';\n\nconst userInterestList = props => {\n  const userInterests = props.userInterests.map(interest => {\n\n    return (\n      <UserInterestItem\n        key={interest}\n        authId={props.authId}\n        interest={interest}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userInterests}</ul>;\n};\n\nexport default userInterestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.tag}\n        </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userTagItem;\n","import React from 'react';\n\nimport UserTagItem from './UserItem/UserTagItem';\nimport './UserList.css';\n\nconst userTagList = props => {\n  const userTags = props.userTags.map(tag => {\n\n    return (\n      <UserTagItem\n        key={tag}\n        authId={props.authId}\n        tag={tag}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userTags}</ul>;\n};\n\nexport default userTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.username}</Card.Title>\n      {props.profileImages.length !== 0 && (\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      )}\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      <Card.Text>\n        phone: {props.phone}\n      </Card.Text>\n      <Card.Text>\n        email: {props.email}\n      </Card.Text>\n      <Card.Text>\n        loggedIn: {props.loggedIn.toString()}\n      </Card.Text>\n      <Card.Text>\n        online: {props.online.toString()}\n      </Card.Text>\n      {props.socialMedia.length !== 0 && (\n      <Card.Text>\n        SocialMedia: {props.socialMedia[0].platform} - {props.socialMedia[0].handle}\n      </Card.Text>\n      )}\n\n        <Button variant=\"primary\" onClick={props.onSelect.bind(this, props.friend)}>\n          Select\n        </Button>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.friend)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendItem;\n","import React from 'react';\n\nimport UserFriendItem from './UserItem/UserFriendItem';\nimport './UserList.css';\n\nconst userFriendList = props => {\n\n  const userFriends = props.userFriends.map(friend=> {\n    return (\n      <UserFriendItem\n        key={friend._id}\n        friend={friend}\n        _id={friend._id}\n        name={friend.name}\n        username={friend.username}\n        phone={friend.contact.phone}\n        email={friend.contact.email}\n        loggedIn={friend.loggedIn}\n        online={friend.clientConnected}\n        profileImages={friend.profileImages}\n        socialMedia={friend.socialMedia}\n        onSelect={props.onSelect}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriends}</ul>;\n};\n\nexport default userFriendList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendRequestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Sender: {props.sender.username}\n      </Card.Text>\n      <Card.Text>\n        Receiver: {props.receiver.username}\n      </Card.Text>\n\n        {props.received && (\n          <Button variant=\"primary\" onClick={props.onAccept.bind(this, props.friendRequest)}>\n          Accept\n          </Button>\n        )}\n        {props.received && (\n          <Button variant=\"danger\" onClick={props.onReject.bind(this, props.friendRequest)}>\n            Reject\n          </Button>\n        )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendRequestItem;\n","import React from 'react';\n\nimport UserFriendRequestItem from './UserItem/UserFriendRequestItem';\nimport './UserList.css';\n\nconst userFriendRequestList = props => {\n\n  const userFriendRequests = props.userFriendRequests.map(friendRequest=> {\n    const requestDate = new Date (friendRequest.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    // console.log(friendRequest.date,friendRequest.sender,friendRequest.receiver);\n    return (\n      <UserFriendRequestItem\n        key={friendRequest.sender._id}\n        friendRequest={friendRequest}\n        date={requestDate}\n        sender={friendRequest.sender}\n        receiver={friendRequest.receiver}\n        onAccept={props.onAccept}\n        onReject={props.onReject}\n        received={props.received}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriendRequests}</ul>;\n};\n\nexport default userFriendRequestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userCartItemItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateAdded: {props.dateAdded}\n      </Card.Text>\n      <Card.Text>\n        sessionDate: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        sessionTitle: {props.sessionTitle}\n      </Card.Text>\n      <Card.Text>\n        Lesson ID: {props.lesson._id}\n      </Card.Text>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.cartItem)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userCartItemItem;\n","import React from 'react';\n\nimport UserCartItemItem from './UserItem/UserCartItemItem';\nimport './UserList.css';\n\nconst UserCartItemList = props => {\n\n  const cart = props.userCartItems.map(cartItem => {\n    // console.log(cartItem);\n    const cartItemDateAdded = new Date (cartItem.dateAdded.substr(0,10)*1000).toISOString().slice(0,10);;\n    const cartItemSessionDate = new Date (cartItem.sessionDate.substr(0,10)*1000).toISOString().slice(0,10);;\n\n    return (\n      <UserCartItemItem\n        key={cartItem.lesson}\n        cartItem={cartItem}\n        authId={props.authId}\n        lesson={cartItem.lesson}\n        dateAdded={cartItemDateAdded}\n        sessionDate={cartItemSessionDate}\n        sessionTitle={cartItem.sessionTitle}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{cart}</ul>;\n};\n\nexport default UserCartItemList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userBookedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateBooked: {props.dateBooked}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n      <Card.Text>\n        Session:\n      </Card.Text>\n      <Card.Text>\n        Title: {props.sessionTitle}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        Time: {props.sessionTime}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'booked', lesson: props.bookedLesson})}>\n        View Details\n      </Button>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.bookedLesson)}>\n          Delete\n        </Button>\n\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userBookedLessonItem;\n","import React from 'react';\n\nimport UserBookedLessonItem from './UserItem/UserBookedLessonItem';\nimport './UserList.css';\n\nconst userBookedLessonList = props => {\n\n  const bookedLessons = props.userBookedLessons.map(bookedLesson => {\n\n    const dateBooked = new Date (bookedLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    const sessionDate = new Date (bookedLesson.session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <UserBookedLessonItem\n        key={bookedLesson.ref}\n        bookedLesson={bookedLesson}\n        dateBooked={dateBooked}\n        sessionDate={sessionDate}\n        sessionTime={bookedLesson.session.time}\n        sessionTitle={bookedLesson.session.title}\n        lesson={bookedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{bookedLessons}</ul>;\n};\n\nexport default userBookedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userLikedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'liked', lesson: props.likedLesson})}>\n        View Details\n      </Button>\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.likedLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userLikedLessonItem;\n","import React from 'react';\n\nimport UserLikedLessonItem from './UserItem/UserLikedLessonItem';\nimport './UserList.css';\n\nconst userLikedLessonList = props => {\n  // console.log(props.userLikedLessons)\n  const likedLessons = props.userLikedLessons.map(likedLesson => {\n    return (\n      <UserLikedLessonItem\n        key={likedLesson}\n        likedLesson={likedLesson}\n        _id={likedLesson._id}\n        title={likedLesson.title}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{likedLessons}</ul>;\n};\n\nexport default userLikedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function userAttendedLessonItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'attended', lesson: props.attendedLesson})}>\n        View Details\n      </Button>\n      {props.hasReviewed !== true && (<Button variant=\"primary\" onClick={props.startCreateReview.bind(this, props.attendedLesson)}>\n        Review\n      </Button>)}\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.attendedLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\n}\n","import React from 'react';\n\nimport UserAttendedLessonItem from './UserItem/UserAttendedLessonItem';\nimport './UserList.css';\n\nconst userAttendedLessonList = props => {\n\n  const attendedLessons = props.userAttendedLessons.map(attendedLesson => {\n    // console.log(attendedLesson.ref._id);\n    // console.log(props.reviewedLessonIds);\n    // console.log(props.reviewedLessonIds.includes(attendedLesson.ref._id.toString()));\n    const hasReviewed = props.reviewedLessonIds.includes(attendedLesson.ref._id.toString());\n    const attendedLessonDate = new Date (attendedLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <UserAttendedLessonItem\n        key={attendedLesson.ref}\n        attendedLesson={attendedLesson}\n        date={attendedLessonDate}\n        lesson={attendedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        hasReviewed={hasReviewed}\n        viewLessonDetails={props.viewLessonDetails}\n        startCreateReview={props.startCreateReview}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attendedLessons}</ul>;\n};\n\nexport default userAttendedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userTaughtLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'taught', lesson: props.taughtLesson})}>\n        View Details\n      </Button>\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.taughtLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userTaughtLessonItem;\n","import React from 'react';\n\nimport UserTaughtLessonItem from './UserItem/UserTaughtLessonItem';\nimport './UserList.css';\n\nconst userTaughtLessonList = props => {\n\n  const taughtLessons = props.userTaughtLessons.map(taughtLesson => {\n    const taughtLessonDate = new Date (taughtLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    // console.log(taughtLesson.ref);\n    return (\n      <UserTaughtLessonItem\n        key={taughtLesson.ref}\n        taughtLesson={taughtLesson}\n        date={taughtLessonDate}\n        lesson={taughtLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{taughtLessons}</ul>;\n};\n\nexport default userTaughtLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPaymentInfoItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        description: {props.description}\n      </Card.Text>\n      <Card.Text>\n        body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n      <Card.Text>\n        valid: {props.valid.toString()}\n      </Card.Text>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.paymentInfoItem)}>\n          Delete\n        </Button>\n      )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPaymentInfoItem;\n","import React from 'react';\n\nimport UserPaymentInfoItem from './UserItem/UserPaymentInfoItem';\nimport './UserList.css';\n\nconst paymentInfoList = props => {\n\n  const paymentInfo = props.userPaymentInfo.map(paymentInfoItem => {\n    const paymentInfoItemDate = new Date (paymentInfoItem.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    // console.log(paymentInfoItemDate);\n    return (\n      <UserPaymentInfoItem\n        key={paymentInfoItem.description}\n        paymentInfoItem={paymentInfoItem}\n        date={paymentInfoItemDate}\n        type={paymentInfoItem.type}\n        description={paymentInfoItem.description}\n        body={paymentInfoItem.body}\n        valid={paymentInfoItem.valid}\n        primary={paymentInfoItem.primary}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{paymentInfo}</ul>;\n};\n\nexport default paymentInfoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userOrderItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        total: {props.totals.c}\n      </Card.Text>\n      \n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.order)}>\n          Delete\n        </Button>\n      )}\n      \n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userOrderItem;\n","import React from 'react';\n\nimport UserOrderItem from './UserItem/UserOrderItem';\nimport './UserList.css';\n\nconst userOrderList = props => {\n\n  const userOrders = props.userOrders.map(order => {\n    // console.log(order.date);\n    const orderDate = new Date (order.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    // console.log(order.totals);\n    return (\n      <UserOrderItem\n        key={order._id}\n        order={order}\n        _id={order._id}\n        date={orderDate}\n        time={order.time}\n        type={order.type}\n        buyer={order.buyer}\n        receiver={order.receiver}\n        lessons={order.lessons}\n        totals={order.totals}\n        tax={order.tax}\n        description={order.description}\n        notes={order.notes}\n        payment={order.payment}\n        shipping={order.shipping}\n        billingAddress={order.billingAddress}\n        shippingAddress={order.shippingAddress}\n        status={order.status}\n        feedback={order.feedback}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userOrders}</ul>;\n};\n\nexport default userOrderList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userReviewItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        Rating: {props.rating}\n      </Card.Text>\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userReviewItem;\n","import React from 'react';\n\nimport UserReviewItem from './UserItem/UserReviewItem';\nimport './UserList.css';\n\nconst userReviewList = props => {\n\n  const userReviews = props.userReviews.map(review => {\n    const reviewDate = new Date (review.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    return (\n      <UserReviewItem\n        key={review._id}\n        authId={props.authId}\n        _id={review._id}\n        date={reviewDate}\n        type={review.type}\n        body={review.body}\n        rating={review.rating}\n        review={review}\n        lesson={review.lesson}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userReviews}</ul>;\n};\n\nexport default userReviewList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userMessgeItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Title>\n          Message\n        </Card.Title>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> sender:</p>\n          <p className=\"userItemText\">\n          {props.sender.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> receiver:</p>\n          <p className=\"userItemText\">\n          {props.receiver.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> time:</p>\n          <p className=\"userItemText\">\n          {props.time}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> subject:</p>\n          <p className=\"userItemText\">\n          {props.subject}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> message:</p>\n          <p className=\"userItemText\">\n          {props.messageMessage}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> read:</p>\n          <p className=\"userItemText\">\n          {props.read.toString()}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props._id)}>\n            Delete\n          </Button>\n        )}\n\n        {props.received && (\n          <Button variant=\"info\" onClick={props.onStartReply.bind(this, props.message)}>\n            Reply\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userMessgeItem;\n","import React from 'react';\n\nimport UserMessageItem from './UserItem/UserMessageItem';\nimport './UserList.css';\n\nconst userMessageList = props => {\n  const userMessages = props.userMessages.map(message => {\n    const messageDate = new Date (message.date.substr(0,10)*1000).toISOString().slice(0,10);;\n      // console.log('msg',props.authId,message.sender._id,message.receiver._id);\n    return (\n      <UserMessageItem\n        key={message.path}\n        authId={props.authId}\n        _id={message._id}\n        date={messageDate}\n        time={message.time}\n        type={message.type}\n        subject={message.subject}\n        messageMessage={message.message}\n        sender={message.sender}\n        receiver={message.receiver}\n        read={message.read}\n        message={message}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        received={props.received}\n        onStartReply={props.onStartReply}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userMessages}</ul>;\n};\n\nexport default userMessageList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userActivityItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.activityDate}\n      </Card.Text>\n      <Card.Text>\n        Request: {props.request}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userActivityItem;\n","import React from 'react';\n\nimport UserActivityItem from './UserItem/UserActivityItem';\nimport './UserList.css';\n\nconst userActivityList = props => {\n\n  const activity = props.userActivity.map(activity => {\n    const activityDate = new Date (activity.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    return (\n      <UserActivityItem\n        key={activity.request}\n        activity={activity}\n        date={activityDate}\n        request={activity.request}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{activity}</ul>;\n};\n\nexport default userActivityList;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport './CreateUserForm.css';\n\nconst UpdateUserBasicForm = (props) => {\n\n  const {...user} = props.user;\n  // const [dob, setDob] = useState(new Date());\n  const prevDob = new Date(user.dob.substr(0,9)*1000).toLocaleDateString().slice(0,10)\n\n  // const handleChangeDob = date => {\n  //   setDob(date);\n  //   console.log(`Dob ${dob}`);\n  //  }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder={user.contact.email}/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder={user.password}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.name}/>\n</Form.Group>\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control type=\"text\" placeholder={user.role}/>\n  // </Form.Group>\n}\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.username} />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone2}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B: {prevDob}</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.dob}/>\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={user.bio}/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateUserFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>contact.email</option>\n    <option>password</option>\n    <option>name</option>\n    <option>username</option>\n    <option>dob</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>bio</option>\n    <option>points</option>\n    <option>verification.type</option>\n    <option>verification.verified</option>\n    <option>verification.code</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserAddressForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserAddressForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserProfileImageForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilename\">\n    <Form.Label>Filename</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filename\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFiletype\">\n    <Form.Label>Filetype</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilepath\">\n    <Form.Label>Link Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"link address\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserProfileImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserSocialMediForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPlatform\">\n    <Form.Label>Platform</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Platform\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridHandle\">\n    <Form.Label>Handle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Handle\"/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridLink\">\n    <Form.Label>Link</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Link\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserSocialMediForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserInterestsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridInterests\">\n    <Form.Label>Interests</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"interest, interest, interests\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserInterestsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserTagsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Tags</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"tag, tag, tags\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserTagsForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst AddUserPaymentInfoForm = (props) => {\n\n  const [payInfoDate, setPayInfoDate] = useState(new Date());\n  const handleChangePayInfoDate = date => {\n    setPayInfoDate(date);\n    console.log(`PayInfoDate ${payInfoDate}`);\n   }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"\">\n    <Form.Label>Date</Form.Label>\n    <DatePicker className=\"\" id=\"paymentInfoDate\"\n      selected={payInfoDate}\n      onChange={handleChangePayInfoDate}\n    />\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control as=\"select\">\n    <option>type a</option>\n    <option>type 2</option>\n    </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Description\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridBody\">\n    <Form.Label>Body</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Body\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoPrimaryCheckbox\">\n    <Form.Label>Primary</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPaymentInfoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPointsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPoints\">\n    <Form.Label>Points</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"point amount\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPointsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPerkForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Perk Id: {props.selectedPerk._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPerkForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPromoForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Promo Id: {props.selectedPromo._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPromoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserFriendForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Friend Id: {props.requestingFriendId} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserFriendForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateMessageForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Message Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n{props.receiver && (<Form.Group as={Col} controlId=\"formGridSubject\">\n  <Form.Label>Subject</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Subject\" />\n</Form.Group>)}\n\n{props.replyTo && (<Form.Group as={Col} controlId=\"formGridSubject\">\n  <Form.Label>Subject</Form.Label>\n  <Form.Control type=\"text\" value={props.replyTo.subject} />\n</Form.Group>)}\n\n{props.receiver && (<Form.Group as={Col} controlId=\"formGridReceiver\">\n  <Form.Label>Receiver: {props.receiver.username}</Form.Label>\n</Form.Group>)}\n\n{props.replyTo && (<Form.Group as={Col} controlId=\"formGridReceiver\">\n  <Form.Label>replyTo: {props.replyTo.sender.username}</Form.Label>\n</Form.Group>)}\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridMessage\">\n  <Form.Label>Message</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Message\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateMessageForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n// import UserAddressList from '../../Users/UserList/UserAddressList';\n\nconst CreateOrderForm = (props) => {\n  const {...user} = props.user;\n  // const userCartLessonSkus = user.cart.map(x => x.lesson.sku);\n    // const addressTypes = user.addresses.map(address => console.log(address.type));\n    const billingAddresses = user.addresses.filter(address => address.type === 'Billing');\n    const shippingAddresses = user.addresses.filter(address => address.type === 'Shipping')\n    const primaryShippingAddresses = shippingAddresses.filter(address => address.primary === true)\n    const primaryBillingAddresses = billingAddresses.filter(address => address.primary === true)\n    const primaryShippingAddress = primaryShippingAddresses[0];\n    const primaryBillingAddress = primaryBillingAddresses[0];\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTotalA\">\n  <Form.Label>TotalA</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" value={props.subtotal}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTotalB\">\n  <Form.Label>TotalB</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" value={0}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTotalC\">\n  <Form.Label>TotalC</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" value={0}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTaxDescription\">\n  <Form.Label>TaxDescription</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"3\" placeholder='tax description'/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTaxAmount\">\n  <Form.Label>TaxAmount</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\"value={0}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Description\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPayment\">\n  <Form.Label>Payment</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Payment\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridShipping\">\n  <Form.Label>Shipping</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Shipping\"/>\n</Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressNumber\">\n    <Form.Label>BillingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryBillingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressStreet\">\n    <Form.Label>BillingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressTown\">\n    <Form.Label>BillingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCity\">\n    <Form.Label>BillingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCountry\">\n    <Form.Label>BillingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressPostalCode\">\n    <Form.Label>BillingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressNumber\">\n    <Form.Label>ShippingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryShippingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressStreet\">\n    <Form.Label>ShippingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressTown\">\n    <Form.Label>ShippingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCity\">\n    <Form.Label>ShippingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCountry\">\n    <Form.Label>ShippingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressPostalCode\">\n    <Form.Label>ShippingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateOrderForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateReviewForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridTitle\">\n  <Form.Label>Title</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Title\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBody\">\n  <Form.Label>Body</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Body\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridRating\">\n  <Form.Label>Rating</Form.Label>\n  <Form.Control type=\"number\" max=\"5\" placeholder=\"Rating\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateReviewForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import SessionBookedList from '../SessionBookedList';\n// import SessionAttendedList from '../SessionAttendedList';\n\nimport './UserItem.css';\n\nexport default function meetingSessionItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        full: {props.full}\n      </Card.Text>\n      <Card.Text>\n        limit: {props.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {props.amount}\n      </Card.Text>\n      <Card.Text>\n        url: {props.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {props.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {props.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n    <Button variant=\"primary\" onClick={props.viewSessionDetails.bind(this, props.session)}>\n      Details\n    </Button>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport MeetingSessionItem from './LessonItem/MeetingSessionItem';\nimport './UserList.css';\n\nconst meetingSessionList = props => {\n\n  const sessions = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <MeetingSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        title={session.title}\n        date={sessionDate}\n        time={session.time}\n        full={session.full}\n        limit={session.limit}\n        amount={session.amount}\n        url={session.url}\n        bookedAmount={session.bookedAmount}\n        attendedAmount={session.attendedAmount}\n        viewSessionDetails={props.viewSessionDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{sessions}</ul>;\n};\n\nexport default meetingSessionList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst sessionBookedItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      {props.addSessionAttendance && props.isInstructor === true && props.userAttended === false && (\n        <Button variant=\"primary\" onClick={props.addSessionAttendance.bind(this, props.attendance)}>\n          Add Attendance\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default sessionBookedItem;\n","import React from 'react';\n\nimport SessionBookedItem from './LessonItem/SessionBookedItem';\nimport './UserList.css';\n\nconst sessionBookedList = props => {\n\n  const booked = props.booked.map(user => {\n\n    let userAttended = false;\n    const userAttended2 = props.attended.filter(x => x._id === user._id);\n    if (userAttended2.length === 0) {\n      userAttended = false;\n    }\n    if (userAttended2.length !== 0) {\n      userAttended = true;\n    }\n    // console.log(userAttended2);\n    const attendance = {\n      user: user,\n      sessionDate: props.session.date,\n      sessionTitle: props.session.title,\n    };\n    return (\n      <SessionBookedItem\n        key={user._id}\n        attendance={attendance}\n        user={user}\n        _id={user._id}\n        username={user.username}\n        isInstructor={props.isInstructor}\n        userAttended={userAttended}\n        addSessionAttendance={props.addSessionAttendance}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{booked}</ul>;\n};\n\nexport default sessionBookedList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst sessionAttendedItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default sessionAttendedItem;\n","import React from 'react';\n\nimport SessionAttendedItem from './LessonItem/SessionAttendedItem';\nimport './UserList.css';\n\nconst sessionAttendedList = props => {\n\n  const attended = props.attended.map(user => {\n    return (\n      <SessionAttendedItem\n        key={user._id}\n        user={user}\n        _id={user._id}\n        username={user.username}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attended}</ul>;\n};\n\nexport default sessionAttendedList;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateSessionFieldForm = (props) => {\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n{\n//   <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridSessionTitle\">\n//   <Form.Label>SessionTitle</Form.Label>\n//   <Form.Control type=\"text\" placeholder='session title' />\n// </Form.Group>\n// <Form.Group as={Col} controlId=\"formGridQuery\">\n//   <Form.Label>Query</Form.Label>\n//   <Form.Control type=\"text\" placeholder='query' />\n// </Form.Group>\n// </Form.Row>\n\n}\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n    <Form.Label>Field: </Form.Label>\n    <Form.Control as=\"select\">\n    <option>url</option>\n    <option>time</option>\n    <option>limit</option>\n    </Form.Control>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query</Form.Label>\n    <Form.Control type=\"text\" placeholder='query' />\n  </Form.Group>\n</Form.Row>\n\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Edit\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateSessionFieldForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from './Lessons/LessonList/SessionBookedList';\nimport SessionAttendedList from './Lessons/LessonList/SessionAttendedList';\nimport UpdateSessionFieldForm from './Forms/lesson/UpdateSessionFieldForm';\n\nimport \"./AttachmentViewer.css\"\n\nconst SessionDetailViewer = (props) =>{\n  const {...session} = props.session\n  // console.log(\"beep\",session, session.booked,props.sessionBookedState,session.attended);\n  const sessionDate = new Date (session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n  let isInstructor = false;\n  if ( session.lessonInstructors.includes(props.authId) === true) {\n    isInstructor = true\n  }\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <p>SessionDetailViewer</p>\n\n    <Card>\n    <Card.Body>\n    <Button variant=\"primary\" onClick={props.hideSessionDetails}>\n      Hide\n    </Button>\n\n      <Card.Title>{session.title}</Card.Title>\n      <Card.Text>\n        isInstructor: {isInstructor.toString()}\n      </Card.Text>\n      <Card.Text>\n        lesson: {session.lessonTitle}\n      </Card.Text>\n      <Card.Text>\n        date: {sessionDate}\n      </Card.Text>\n      <Card.Text>\n        time: {session.time}\n      </Card.Text>\n      <Card.Text>\n        limit: {session.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {session.amount}\n      </Card.Text>\n      <Card.Text>\n        full: {session.full}\n      </Card.Text>\n      <Card.Text>\n        url: {session.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {session.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {session.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n\n\n    </Card>\n\n\n    <Button variant=\"primary\" onClick={props.showSessionBooked}>\n      Show Booked\n    </Button>\n    <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n      Hide Booked\n    </Button>\n    <Button variant=\"primary\" onClick={props.showSessionAttended}>\n      Show Attended\n    </Button>\n    <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n      Hide Attended\n    </Button>\n\n    {props.sessionBookedState === true && (\n      <SessionBookedList\n      session={props.session}\n      isInstructor={isInstructor}\n      booked={session.booked}\n      attended={session.attended}\n      addSessionAttendance={props.addSessionAttendance}\n    />)}\n    {props.sessionAttendedState === true && (\n      <SessionAttendedList\n      attended={session.attended}\n    />)}\n\n\n\n    {props.editSessionField && (\n      <Button variant=\"primary\" onClick={props.startEditSessionField.bind(this, props.session)}>\n          Edit\n        </Button>\n      )}\n    {props.editingSessionField === true && (\n      <UpdateSessionFieldForm\n        authId={props.authId}\n        session={props.session}\n        onConfirm={props.editSessionField}\n        onCancel={props.cancelEditSessionField}\n      />\n    )}\n    {\n      // <p>{props.authId}</p>\n\n    // {props.editSessionField && (\n    //   <Button variant=\"primary\" onClick={props.editSessionField.bind(this, props.session)}>\n    //       Edit\n    //     </Button>\n    //   )}\n    // {props.editingSessionField === true && (\n    //   <UpdateSessionFieldForm\n    //     authId={props.authId}\n    //     session={props.session}\n    //     onConfirm={props.editSessionField}\n    //     onCancel={props.cancelEditSessionField}\n    //   />\n    // )}\n\n    // <Button variant=\"primary\" onClick={props.showSessionBooked}>\n    //   Show Booked\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n    //   Hide Booked\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.showSessionAttended}>\n    //   Show Attended\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n    //   Hide Attended\n    // </Button>\n    //\n    // {props.sessionBookedState === true && (\n    //   <SessionBookedList\n    //   session={props.session}\n    //   isInstructor={props.isInstructor}\n    //   booked={props.booked}\n    //   attended={props.attended}\n    //   addSessionAttendance={props.addSessionAttendance}\n    // />)}\n    // {props.sessionAttendedState === true && (\n    //   <SessionAttendedList\n    //   attended={props.attended}\n    // />)}\n    //\n\n\n    }\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default SessionDetailViewer;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Form from 'react-bootstrap/Form';\n\nimport UserAddressList from './UserList/UserAddressList';\nimport UserProfileImageList from './UserList/UserProfileImageList';\nimport UserSocialMediaList from './UserList/UserSocialMediaList';\n\nimport UserPerkList from './UserList/UserPerkList';\nimport UserPromoList from './UserList/UserPromoList';\n\nimport UserInterestList from './UserList/UserInterestList';\nimport UserTagList from './UserList/UserTagList';\n\nimport UserFriendList from './UserList/UserFriendList';\nimport UserFriendRequestList from './UserList/UserFriendRequestList';\nimport UserCartItemList from './UserList/UserCartItemList';\nimport UserBookedLessonList from './UserList/UserBookedLessonList';\nimport UserLikedLessonList from './UserList/UserLikedLessonList';\nimport UserAttendedLessonList from './UserList/UserAttendedLessonList';\nimport UserTaughtLessonList from './UserList/UserTaughtLessonList';\nimport UserPaymentInfoList from './UserList/UserPaymentInfoList';\n\nimport UserOrderList from './UserList/UserOrderList';\nimport UserReviewList from './UserList/UserReviewList';\nimport UserMessageList from './UserList/UserMessageList';\nimport UserActivityList from './UserList/UserActivityList';\n\nimport UpdateUserBasicForm from '../Forms/user/UpdateUserBasicForm';\nimport UpdateUserFieldForm from '../Forms/user/UpdateUserFieldForm';\n\nimport AddUserAddressForm from '../Forms/user/AddUserAddressForm';\nimport AddUserProfileImageForm from '../Forms/user/AddUserProfileImageForm';\nimport AddUserSocialMediaForm from '../Forms/user/AddUserSocialMediaForm';\n\nimport AddUserInterestsForm from '../Forms/user/AddUserInterestsForm';\nimport AddUserTagsForm from '../Forms/user/AddUserTagsForm';\n\nimport AddUserPaymentInfoForm from '../Forms/user/AddUserPaymentInfoForm';\n\nimport AddUserPointsForm from '../Forms/user/AddUserPointsForm';\nimport AddUserPerkForm from '../Forms/user/AddUserPerkForm';\nimport AddUserPromoForm from '../Forms/user/AddUserPromoForm';\n\nimport AddUserFriendForm from '../Forms/user/AddUserFriendForm';\nimport CreateMessageForm from '../Forms/message/CreateMessageForm';\nimport CreateOrderForm from '../Forms/order/CreateOrderForm';\nimport CreateReviewForm from '../Forms/review/CreateReviewForm';\n\nimport MeetingSessionList from '../Lessons/LessonList/MeetingSessionList';\nimport SessionDetailViewer from '../SessionDetailViewer';\n\n\n\nimport './thisUserProfile.css';\n\nconst thisUserProfile = (props) => {\nconst {...user} = props.user;\n\n// const userAddress = user.address;\nconst userDob = new Date(user.dob.substr(0,9)*1000).toLocaleDateString().slice(0,10);\n\nlet sentRequests = [];\nlet receivedRequests = [];\nif (user.friendRequests !== []) {\n  // console.log('!!!',user._id, user.friendRequests, user.friendRequests[0].sender._id, user.friendRequests[0].receiver._id);\n  sentRequests = user.friendRequests.filter(request => request.sender._id === user._id);\n  receivedRequests = user.friendRequests.filter(request => request.receiver._id === user._id);\n}\n// console.log('sentRequests',sentRequests,'receivedRequests',receivedRequests);\n// const publicUser = user.public.toString();\n// const today = new Date().toLocaleDateString().slice(0,10);\n// const today2 = new Date(today);\n\n// console.log('today',today2,user.bookedLessons.map(x=> console.log(x.date)));\n// console.log('today',today,user.bookedLessons.filter(x=> x.date === today ));\n// get todays booked lessons, filter for sessions today, result = meeting list, to each, add get session and if isInstructor, update session componts & reqs\n\n// const bookedLessonSessions = user.bookedLessons\nlet messagesSent = [];\nlet messagesReceived = [];\nmessagesSent = user.messages.filter(x => x.sender._id === props.authId);\nmessagesReceived = user.messages.filter(x => x.receiver._id === props.authId);\nconst reviewedLessonIds = user.reviews.map(x => x.lesson._id);\n// console.log(user.reviews.map(x => x.lesson._id));\nlet hasShippingAddress = user.addresses.filter(x => x.type === 'Shipping' && x.primary === true).length === 0;\n// console.log(user.addresses,user.addresses.filter(x => x.type === 'Shipping'),hasShippingAddress);\n\nlet userAddresses = user.addresses;\n\n// const setFilter2 = (args) => {\n//   console.log('...setFilter2...',args);\n//   if (args.key === 'primary') {\n//     let test2 = userAddresses.filter(x => x.primary === true)\n//     userAddresses = test2;\n//     console.log(user.addresses,userAddresses,test2,args.value);\n//   }\n//   if (args.key === 'type') {\n//     let test2 = userAddresses.filter(x => x.type === args.value)\n//     userAddresses = test2;\n//     console.log(user.addresses,userAddresses,test2,args.value);\n//   }\n// }\n\n\n// - filters\n//   - address\n//     - type\n//     - primary\n//   - friend\n//     -\n//   - message\n//     - asc/desc by date\n//     - by sender/receiver name\n//   - likedlesson\n//     - title\n//   - bookedLesson/attendedLesson/taughtLesson/wishlist\n//     - date\n//     - lesson title\n//   - order\n//     - date\n//   - paymentinfo\n//     - date\n//     - Type\n//     - valid\n//     - primary\n//   - friendRequests\n//     - date\n//     - sender/receiver name\n//   - review\n//     - date\n//     - lesson title\n\n\nconst orderSubtotal = user.cart.map(x => x.lesson);\nconst orderSubtotal2 = orderSubtotal.map(x => x.price )\nconst orderSubtotal3 = orderSubtotal2.reduce((a, b) => a + b, 0).toFixed(2);\n// console.log(orderSubtotal,orderSubtotal2,orderSubtotal3);\n\n  return (\n\n  <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\">\n    <Tab eventKey=\"\" title=\"Details:\" disabled>\n    </Tab>\n    <Tab eventKey=\"Basic\" title=\"Basic\">\n    <Card className=\"UserDetailCard\">\n    <Card.Body>\n      <Card.Title><span className=\"ul\">Your Profile Details</span></Card.Title>\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Name:</span> {user.name}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">D.O.B:</span> {userDob}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Age:</span> {user.age}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone:</span> {user.contact.phone}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone 2:</span> {user.contact.phone2}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Email:</span> {user.contact.email}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Points :</span> {user.points}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Public :</span> {user.public.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn :</span> {user.loggedIn.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">online :</span> {user.clientConnected.toString()}\n          </Card.Text>\n\n          <Card.Text>\n            <span className=\"bold\">Verification :</span> {user.verification.type}, {user.verification.verified.toString()}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdate}>Edit</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdateField}>Edit 1 Field</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"points\")}>+ Points</Button>\n\n      {props.updating === true &&\n        props.userAddField === \"basic\" && (\n        <UpdateUserBasicForm\n          canCancelProfile\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditBasic}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.updating === true &&\n        props.updatingField === true && (\n        <UpdateUserFieldForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditField}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.userAddField === \"points\" &&\n        user.role === 'Admin' && (\n        <AddUserPointsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPoints}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n    </Card.Body>\n    </Card>\n    </Tab>\n\n    <Tab eventKey=\"address\" title=\"address\">\n\n\n    <Button variant=\"primary\" onClick={props.setFilter.bind(this, {field: 'addresses', key: 'primary', value: true})}>\n      Filter by primary\n    </Button>\n    <Button variant=\"primary\" onClick={props.setFilter.bind(this, {field: 'addresses', key: 'type', value: 'Billing'})}>\n      Filter by type: Billing\n    </Button>\n    <Button variant=\"primary\" onClick={props.setFilter.bind(this, {field: 'addresses', key: 'type', value: 'Shipping'})}>\n      Filter by type: Shipping\n    </Button>\n    <Button variant=\"danger\" onClick={props.setFilter.bind(this, {field: null, key: null, value: null })}>\n      clearFilter\n    </Button>\n\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"address\")}>+ Address</Button>\n    {props.userAddField === \"address\" && (\n        <AddUserAddressForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddAddress}\n          confirmText=\"Confirm\"\n        />\n    )}\n    {user.addresses !== null &&\n      user.addresses !== [] && (\n        <UserAddressList\n          filter={props.filter}\n          userAddresses={userAddresses}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAddress}\n          makeAddressPrimary={props.makeAddressPrimary}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"profileImages\" title=\"profileImages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"profileImage\")}>+ Image</Button>\n    {props.userAddField === \"profileImage\" && (\n        <AddUserProfileImageForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddProfileImage}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.profileImages !== null &&\n      user.profileImages !== [] && (\n        <UserProfileImageList\n          userProfileImages={user.profileImages}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteProfileImage}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"socialMedia\" title=\"socialMedia\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"socialMedia\")}>+ Social Media</Button>\n    {props.userAddField === \"socialMedia\" && (\n        <AddUserSocialMediaForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddSocialMedia}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.socialMedia !== null &&\n      user.socialMedia !== [] && (\n        <UserSocialMediaList\n          userSocialMedia={user.socialMedia}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteSocialMedia}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"perks\" title=\"perks\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"perk\")}>+ Perk</Button>\n\n    {props.userAddField === \"perk\" &&\n    props.selectedPerk !== null && (\n        <AddUserPerkForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPerk}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          perk={props.selectedPerk}\n        />\n      )}\n\n    {user.perks !== null &&\n      user.perks !== [] && (\n        <UserPerkList\n          userPerks={user.perks}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePerk}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"promos\" title=\"promos\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"promo\")}>+ Promo</Button>\n\n    {props.userAddField === \"promo\" &&\n      props.selectedPromo !== null && (\n        <AddUserPromoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPromo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          promo={props.selectedPromo}\n        />\n    )}\n\n    {user.promos !== null &&\n      user.promos !== [] && (\n        <UserPromoList\n          userPromos={user.promos}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePromo}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"interests\" title=\"interests\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"interests\")}>+ Interests</Button>\n\n    {props.userAddField === \"interests\" && (\n        <AddUserInterestsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddInterests}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.interests !== null &&\n      user.interests !== [] && (\n        <UserInterestList\n          userInterests={user.interests}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteInterest}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"tags\" title=\"tags\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"tags\")}>+ Tags</Button>\n\n    {props.userAddField === \"tags\" && (\n        <AddUserTagsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddTags}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.tags !== null &&\n      user.tags !== [] && (\n        <UserTagList\n          userTags={user.tags}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteTag}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"friends\" title=\"friends\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"friend\")}>+ Friend</Button>\n\n    {props.userAddField === \"friend\" && (\n        <AddUserFriendForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddFriend}\n          confirmText=\"Confirm\"\n          requestingFriend={props.requestingFriend}\n          user={props.user}\n        />\n      )}\n\n    {user.friends !== null &&\n      user.friends !== [] && (\n        <UserFriendList\n          userFriends={user.friends}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteFriend}\n          onSelect={props.userSelectFriend}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"friendRequests\" title=\"friendRequests\">\n\n      <Tabs defaultActiveKey=\"received\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"received\" title=\"received\">\n          <p>Received</p>\n          {user.friendRequests !== null &&\n            user.friendRequests !== [] && (\n              <UserFriendRequestList\n                received\n                userFriendRequests={receivedRequests}\n                authId={props.authId}\n                onReject={props.userRejectFriendRequest}\n                onAccept={props.userAcceptFriendRequest}\n              />\n            )}\n        </Tab>\n        <Tab eventKey=\"sent\" title=\"sent\">\n          <p>Sent</p>\n          {user.friendRequests !== null &&\n            user.friendRequests !== [] && (\n              <UserFriendRequestList\n                userFriendRequests={sentRequests}\n                authId={props.authId}\n                onReject={props.userRejectFriendRequest}\n                onAccept={props.userAcceptFriendRequest}\n              />\n            )}\n        </Tab>\n      </Tabs>\n\n    </Tab>\n\n    <Tab eventKey=\"cart\" title=\"cart\">\n\n    {user.cart !== null &&\n      user.cart !== [] &&\n      hasShippingAddress === false && (\n    <Button variant=\"primary\" onClick={props.startCartCheckout.bind(this, user.cart)}>\n      Checkout\n    </Button>\n    )}\n\n    {hasShippingAddress === true && (\n    <Button variant=\"warning\">\n      Can't Checkout...Add a shipping address 1st...and make sure it's a primary address...\n    </Button>\n    )}\n\n    {props.creatingOrder === true && (\n      <CreateOrderForm\n        user={user}\n        subtotal={orderSubtotal3}\n        onCancel={props.cancelCartCheckout}\n        onConfirm={props.createOrder}\n        addAddressToOrder={props.addAddressToOrder}\n        orderBillingAddress={props.orderBillingAddress}\n        orderShippingAddress={props.orderShippingAddress}\n      />\n    )}\n\n    {user.cart !== null &&\n      user.cart !== [] && (\n        <UserCartItemList\n          userCartItems={user.cart}\n          authId={props.authId}\n          canDelete={true}\n          onDelete={props.userDeleteCartItem}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"likedLessons\" title=\"likedLessons\">\n\n    {user.likedLessons !== null &&\n      user.likedLessons!== [] && (\n        <UserLikedLessonList\n          userLikedLessons={user.likedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteLikedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"bookedLessons\" title=\"bookedLessons\">\n\n    {user.bookedLessons !== null &&\n      user.bookedLessons!== [] && (\n        <UserBookedLessonList\n          userBookedLessons={user.bookedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteBookedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"attendedLessons\" title=\"attendedLessons\">\n\n    {props.creatingReview === true &&\n      props.reviewLesson !== null && (\n      <CreateReviewForm\n      authId={props.authId}\n      author={user}\n      lesson={props.reviewLesson}\n      canConfirm\n      canCancel\n      onCancel={props.cancelCreateReview}\n      onConfirm={props.createReview}\n      />\n    )}\n\n    {user.attendedLessons !== null &&\n      user.attendedLessons!== [] && (\n        <UserAttendedLessonList\n          userAttendedLessons={user.attendedLessons}\n          reviewedLessonIds={reviewedLessonIds}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAttendedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n          startCreateReview={props.startCreateReview}\n        />\n      )}\n\n    </Tab>\n\n    {user.role === \"Instructor\" ||\n      user.role === 'Admin' && (\n      <Tab eventKey=\"taughtLessons\" title=\"taughtLessons\">\n      {\n        user.taughtLessons !== null &&\n        user.taughtLessons!== [] && (\n          <UserTaughtLessonList\n            userTaughtLessons={user.taughtLessons}\n            authId={props.authId}\n            canDelete={props.canDelete}\n            onDelete={props.userDeleteTaughtLesson}\n            viewLessonDetails={props.viewLessonDetails}\n          />\n        )}\n\n      </Tab>\n    )}\n\n    <Tab eventKey=\"paymentInfo\" title=\"paymentInfo\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"paymentInfo\")}>+ PaymentInfo</Button>\n\n    {props.userAddField === \"paymentInfo\" && (\n        <AddUserPaymentInfoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPaymentInfo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.paymentInfo !== null &&\n      user.paymentInfo !== [] && (\n        <UserPaymentInfoList\n          userPaymentInfo={user.paymentInfo}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePaymentInfo}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"messages\" title=\"messages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartCreateMessage}>+ Message</Button>\n\n    {props.messageReceiver === null && (\n      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\" >Select someone to message</Button>\n    )}\n\n    {props.userAddField === \"message\" &&\n      props.messageReceiver !== null && (\n        <CreateMessageForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userCreateMessage}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          receiver={props.messageReceiver}\n        />\n      )}\n\n      <Tabs defaultActiveKey=\"received\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"received\" title=\"received\">\n          <p>Received</p>\n\n          {props.messageReplying === true && (\n            <CreateMessageForm\n              canCancel\n              canConfirm\n              onCancel={props.onCancelReply}\n              onConfirm={props.onReply}\n              confirmText=\"Confirm\"\n              user={props.user}\n              authId={props.authId}\n              replyTo={props.replyTo}\n            />\n          )}\n\n          {messagesReceived !== null &&\n            messagesReceived !== [] && (\n              <UserMessageList\n                userMessages={messagesReceived}\n                authId={props.authId}\n                canDelete={props.canDelete}\n                onDelete={props.userDeleteMessage}\n                received\n                onStartReply={props.onStartReply}\n              />\n            )}\n        </Tab>\n        <Tab eventKey=\"sent\" title=\"sent\">\n          <p>Sent</p>\n          {messagesSent !== null &&\n            messagesSent !== [] && (\n              <UserMessageList\n                userMessages={messagesSent}\n                authId={props.authId}\n                canDelete={props.canDelete}\n                onDelete={props.userDeleteMessage}\n              />\n            )}\n        </Tab>\n      </Tabs>\n\n    </Tab>\n\n    <Tab eventKey=\"orders\" title=\"orders\">\n\n    {user.orders !== null &&\n      user.orders !== [] && (\n        <UserOrderList\n          userOrders={user.orders}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteOrder}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"reviews\" title=\"reviews\">\n\n    {user.reviews !== null &&\n      user.reviews !== [] && (\n        <UserReviewList\n          userReviews={user.reviews}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteReview}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"meeting\" title=\"meeting\">\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.loadMeetings}>Load Today's</Button>\n      <Button variant=\"outline-danger\" size=\"lg\" className=\"confirmEditButton\" onClick={props.hideMeetings}>Hide</Button>\n\n\n      {props.sessionDetailViewer === true && (\n        <SessionDetailViewer\n        authId={props.authId}\n        session={props.session}\n        startEditSessionField={props.startEditSessionField}\n        cancelEditSessionField={props.cancelEditSessionField}\n        editingSessionField={props.editingSessionField}\n        editSessionField={props.editSessionField}\n        showSessionBooked={props.showSessionBooked}\n        showSessionAttended={props.showSessionAttended}\n        hideSessionBooked={props.hideSessionBooked}\n        hideSessionAttended={props.hideSessionAttended}\n        sessionBookedState={props.sessionBookedState}\n        sessionAttendedState={props.sessionAttendedState}\n        hideSessionDetails={props.hideSessionDetails}\n        addSessionAttendance={props.addSessionAttendance}\n        />\n      )}\n\n      {props.meetingsLoaded === true && (\n      <MeetingSessionList\n        authId={props.authId}\n        lessonSessions={props.meetingSessions}\n        viewSessionDetails={props.viewSessionDetails}\n      />\n      )}\n\n      <p>zoom mtg create button, dom element etc </p>\n    </Tab>\n\n    <Tab eventKey=\"activity\" title=\"activity\">\n\n    {user.activity !== null &&\n      user.activity !== [] && (\n        <UserActivityList\n          userActivity={user.activity}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteActivity}\n        />\n      )}\n\n    </Tab>\n  </Tabs>\n  );\n}\n\nexport default thisUserProfile;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from '../SessionBookedList';\nimport SessionAttendedList from '../SessionAttendedList';\n\nimport './UserItem.css';\n\nexport default function lessonSessionItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        full: {props.full}\n      </Card.Text>\n      <Card.Text>\n        limit: {props.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {props.amount}\n      </Card.Text>\n      <Card.Text>\n        url: {props.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {props.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {props.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n    {!props.meetings && (\n      <Button variant=\"primary\" onClick={props.showSessionBooked}>\n        Show Booked\n      </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n      Hide Booked\n    </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.showSessionAttended}>\n      Show Attended\n    </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n      Hide Attended\n    </Button>\n    )}\n    {props.meetings && (\n      <Button variant=\"primary\" >\n        Details\n      </Button>\n    )}\n\n    {props.sessionBookedState === true && (\n      <SessionBookedList\n      session={props.session}\n      isInstructor={props.isInstructor}\n      booked={props.booked}\n      attended={props.attended}\n      addSessionAttendance={props.addSessionAttendance}\n    />)}\n    {props.sessionAttendedState === true && (\n      <SessionAttendedList\n      attended={props.attended}\n    />)}\n\n    {props.onBookSession && (<Button variant=\"primary\" onClick={props.onBookSession.bind(this, props.session)}>\n          Book\n        </Button>)}\n    {props.editSessionField &&\n      props.isInstructor === true && (<Button variant=\"primary\" onClick={props.editSessionField.bind(this, props.session)}>\n          Edit\n        </Button>)}\n    {props.onAddCartLesson && (<Button variant=\"secondary\" onClick={props.onAddCartLesson.bind(this, props.session)}>\n          Cart\n        </Button>)}\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport LessonSessionItem from './LessonItem/LessonSessionItem';\nimport './UserList.css';\n\nconst lessonSessionList = props => {\n\n  const sessions = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <LessonSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        isInstructor={props.isInstructor}\n        title={session.title}\n        date={sessionDate}\n        time={session.time}\n        full={session.full}\n        limit={session.limit}\n        amount={session.amount}\n        url={session.url}\n        booked={session.booked}\n        bookedAmount={session.bookedAmount}\n        attended={session.attended}\n        attendedAmount={session.attendedAmount}\n        onBookSession={props.onBookSession}\n        onAddCartLesson={props.onAddCartLesson}\n        editSessionField={props.editSessionField}\n        showSessionBooked={props.showSessionBooked}\n        showSessionAttended={props.showSessionAttended}\n        hideSessionBooked={props.hideSessionBooked}\n        hideSessionAttended={props.hideSessionAttended}\n        sessionBookedState={props.sessionBookedState}\n        sessionAttendedState={props.sessionAttendedState}\n        addSessionAttendance={props.addSessionAttendance}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{sessions}</ul>;\n};\n\nexport default lessonSessionList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonScheduleItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      Date: {props.date}, Time: {props.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonScheduleItem;\n","import React from 'react';\n\nimport LessonScheduleItem from './LessonItem/LessonScheduleItem';\nimport './UserList.css';\n\nconst lessonScheduleList = props => {\n\n  const dates = props.lessonSchedule.map(date => {\n    // console.log(date);\n    const scheduleDate = new Date (date.date.substr(0,10)*1000).toISOString().slice(0,10);;\n\n    return (\n      <LessonScheduleItem\n        key={date}\n        date={scheduleDate}\n        time={date.time}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{dates}</ul>;\n};\n\nexport default lessonScheduleList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonInstructorItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      <Card.Text>\n      ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n      username: {props.username}\n      </Card.Text>\n      <Card.Text>\n      socialMedia\n      </Card.Text>\n      <Card.Text>\n      {props.socialMedia[0].platform} @ {props.socialMedia[0].handle}\n      </Card.Text>\n      <Card.Text>\n      Email: {props.contact.email}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.instructor)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonInstructorItem;\n","import React from 'react';\n\nimport LessonInstructorItem from './LessonItem/LessonInstructorItem';\nimport './UserList.css';\n\nconst lessonInstructorList = props => {\n\n  const instructors = props.lessonInstructors.map(instructor => {\n    return (\n      <LessonInstructorItem\n        key={instructor}\n        instructor={instructor}\n        _id={instructor._id}\n        username={instructor.username}\n        contact={instructor.contact}\n        socialMedia={instructor.socialMedia}\n        profileImages={instructor.profileImages}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{instructors}</ul>;\n};\n\nexport default lessonInstructorList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonRequirementItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.requirement}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.requirement)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonRequirementItem;\n","import React from 'react';\n\nimport LessonRequirementItem from './LessonItem/LessonRequirementItem';\nimport './UserList.css';\n\nconst lessonRequirementList = props => {\n\n  const requirements = props.lessonRequirements.map(requirement => {\n    return (\n      <LessonRequirementItem\n        public={props.public}\n        key={requirement}\n        requirement={requirement}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{requirements}</ul>;\n};\n\nexport default lessonRequirementList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonMaterialItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.material}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.material)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonMaterialItem;\n","import React from 'react';\n\nimport LessonMaterialItem from './LessonItem/LessonMaterialItem';\nimport './UserList.css';\n\nconst lessonMaterialList = props => {\n\n  const materials = props.lessonMaterials.map(material => {\n    return (\n      <LessonMaterialItem\n        key={material}\n        material={material}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{materials}</ul>;\n};\n\nexport default lessonMaterialList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.tag}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonTagItem;\n","import React from 'react';\n\nimport LessonTagItem from './LessonItem/LessonTagItem';\nimport './UserList.css';\n\nconst lessonTagList = props => {\n\n  const tags = props.lessonTags.map(tag => {\n    return (\n      <LessonTagItem\n        public={props.public}\n        key={tag}\n        tag={tag}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{tags}</ul>;\n};\n\nexport default lessonTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n    <Card.Img variant=\"top\" src={props.path} />\n      <Card.Text>\n        Name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Path: {props.path}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.image)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonImageItem;\n","import React from 'react';\n\nimport LessonImageItem from './LessonItem/LessonImageItem';\nimport './UserList.css';\n\nconst lessonImageList = props => {\n\n  const images = props.lessonImages.map(image => {\n    return (\n      <LessonImageItem\n        public={props.public}\n        key={image}\n        image={image}\n        name={image.name}\n        type={image.type}\n        path={image.path}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{images}</ul>;\n};\n\nexport default lessonImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonFileItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Size: {props.size}\n      </Card.Text>\n      <Card.Text>\n        Path: {props.path}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.file)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonFileItem;\n","import React from 'react';\n\nimport LessonFileItem from './LessonItem/LessonFileItem';\nimport './UserList.css';\n\nconst lessonFileList = props => {\n\n  const files = props.lessonFiles.map(file => {\n    return (\n      <LessonFileItem\n        key={file}\n        file={file}\n        name={file.name}\n        type={file.type}\n        size={file.size}\n        path={file.path}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{files}</ul>;\n};\n\nexport default lessonFileList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function lessonReviewItem (props) {\n  let isAuthor = false;\n  if (props.authId === props.author._id) {\n    isAuthor = true;\n  }\nreturn (\n    <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n      <Card style={{ width: '18rem' }}>\n\n      <Card.Body>\n        <Card.Text>\n        ID: {props._id}\n        </Card.Text>\n        <Card.Text>\n        Title: {props.title}\n        </Card.Text>\n        <Card.Text>\n        Type: {props.type}\n        </Card.Text>\n        <Card.Text>\n        isAuthor?: {isAuthor.toString()}\n        </Card.Text>\n        <Card.Text>\n        Author: {props.type}\n        </Card.Text>\n        <Card.Text>\n        ID: {props.author._id}\n        </Card.Text>\n        <Card.Text>\n        Body: {props.body}\n        </Card.Text>\n        <Card.Text>\n        Rating: {props.rating}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n    </li>\n  );\n}\n","import React from 'react';\n\nimport LessonReviewItem from './LessonItem/LessonReviewItem';\nimport './UserList.css';\n\nconst lessonReviewList = props => {\n\n  const reviews = props.lessonReviews.map(review => {\n    return (\n      <LessonReviewItem\n        key={review}\n        review={review}\n        _id={review._id}\n        title={review.title}\n        type={review.type}\n        author={review.author}\n        body={review.body}\n        rating={review.rating}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{reviews}</ul>;\n};\n\nexport default lessonReviewList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateLessonSessionForm = (props) => {\n\n  const [date, setDate] = useState(new Date());\n\n    const handleChangeDate = date => {\n      setDate(date);\n      console.log(`date ${date}`);\n     }\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"\">\n  <Form.Label>Session Date</Form.Label>\n  <DatePicker className=\"\" id=\"CalendarDate\"\n    selected={date}\n    onChange={handleChangeDate}\n  />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTime\">\n  <Form.Label>Time</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Time\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLimit\">\n  <Form.Label>Limit</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Limit\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n<Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n</Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonSessionForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateLessonBasicForm = (props) => {\nconst {...lesson} = props.lesson;\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.title}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.subtitle}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.duration}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type: {lesson.type}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category: {lesson.category}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.sku} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder={lesson.price} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder={lesson.points} />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={lesson.description}/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder={lesson.notes}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateLessonFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>title</option>\n    <option>subtitle</option>\n    <option>type</option>\n    <option>category</option>\n    <option>sku</option>\n    <option>price</option>\n    <option>description</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonRequirementsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridRequirements\">\n  <Form.Label>Requirements</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"requirement, requirement, requirement\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonRequirementsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonMaterialsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMaterials\">\n  <Form.Label>Materials</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"material, material, material\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonMaterialsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonTagsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTags\">\n  <Form.Label>Tags</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"tags, tags, tags\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonTagsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonImageForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagename\">\n  <Form.Label>Filename</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filename\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagetype\">\n  <Form.Label>Filetype</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagepath\">\n  <Form.Label>Link Address</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"link address\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonRequirementsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilename\">\n  <Form.Label>Filename</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filename\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilesize\">\n  <Form.Label>Filesize</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filesize\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFiletype\">\n  <Form.Label>Filetype</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilepath\">\n  <Form.Label>Link Address</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"link address\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonRequirementsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonInstructorForm = (props) => {\n// const {...user} = props.user;\nconsole.log('props.selectedInstructor',props.selectedInstructor.role);\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n{props.selectedInstructor.role !== 'Instructor' && (\n<Form.Row>\n  <Form.Group as={Col} controlId=\"\">\n  <Form.Label> {props.selectedInstructor.username} is not an Instructor! </Form.Label>\n</Form.Group>\n</Form.Row>\n)}\n{props.selectedInstructor.role === 'Instructor' && (\n<Form.Row>\n  <Form.Group as={Col} controlId=\"\">\n  <Form.Label>Add Instructor: {props.selectedInstructor.username} to this lesson...?</Form.Label>\n</Form.Group>\n</Form.Row>\n)}\n<Form.Row>\n\n{props.selectedInstructor.role === 'Instructor' && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.selectedInstructor.role === 'Instructor' && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonInstructorForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './Lessons/LessonList/LessonSessionList';\nimport LessonScheduleList from './Lessons/LessonList/LessonScheduleList';\nimport LessonInstructorList from './Lessons/LessonList/LessonInstructorList';\nimport LessonRequirementList from './Lessons/LessonList/LessonRequirementList';\nimport LessonMaterialList from './Lessons/LessonList/LessonMaterialList';\nimport LessonTagList from './Lessons/LessonList/LessonTagList';\nimport LessonImageList from './Lessons/LessonList/LessonImageList';\nimport LessonFileList from './Lessons/LessonList/LessonFileList';\nimport LessonReviewList from './Lessons/LessonList/LessonReviewList';\nimport CreateLessonSessionForm from './Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from './Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from './Forms/lesson/UpdateLessonFieldForm';\nimport UpdateSessionFieldForm from './Forms/lesson/UpdateSessionFieldForm';\n\nimport AddLessonRequirementsForm from './Forms/lesson/AddLessonRequirementsForm';\nimport AddLessonMaterialsForm from './Forms/lesson/AddLessonMaterialsForm';\nimport AddLessonTagsForm from './Forms/lesson/AddLessonTagsForm';\nimport AddLessonImageForm from './Forms/lesson/AddLessonImageForm';\nimport AddLessonFileForm from './Forms/lesson/AddLessonFileForm';\nimport AddLessonInstructorForm from './Forms/lesson/AddLessonInstructorForm';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './AttachmentViewer.css';\n\nconst ProfileLessonViewer = (props) => {\n\n  const lessonType = props.lessonType;\n  const {...lesson} = props.profileLesson;\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  // let canDelete = false;\n  // if (isInstructor === true ) {\n  //   canDelete = true\n  // }\n  console.log(lesson);\n  return (\n\n      <div className=\"attachmentViewerBg\">\n      <div className=\"attachmentViewer\">\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n        <Tab eventKey=\"Basic\" title=\"Basic\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n          <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n          <Row className=\"detailCardRow\">\n            <Col className=\"detailCardCol\">\n            {isInstructor === true &&(\n              <Card.Text>\n              Your lesson\n              </Card.Text>\n            )}\n            <Card.Text>\n              <span className=\"bold\">ID:</span> {lesson._id}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Title:</span> {lesson.title}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Type:</span> {lesson.type}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Category:</span> {lesson.category}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Sku:</span> {lesson.sku}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Price:</span> {lesson.price}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Description:</span> {lesson.description}\n            </Card.Text>\n\n            </Col>\n\n            <Col className=\"detailCardCol\">\n            <Card.Text>\n              <span className=\"bold\">Main Instructor:</span>\n            </Card.Text>\n\n            <Card.Text>\n            ID: {lesson.instructors[0]._id}\n            </Card.Text>\n            <Card.Text>\n            Username: {lesson.instructors[0].username}\n            </Card.Text>\n            <Card.Text>\n              Contact\n            </Card.Text>\n            <Card.Text>\n              Email: {lesson.instructors[0].contact.email}\n            </Card.Text>\n\n            </Col>\n\n          </Row>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Schedule\n            </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleSchedule}>\n              show/hide\n            </Button>\n            {props.showScheduleState === true && (\n              <LessonScheduleList\n                lessonSchedule={lesson.schedule}\n              />\n            )}\n            </Col>\n          </Row>\n\n            <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.closeProfileLessonView}>\n                  x\n                </Button>\n              </Col>\n            </Row>\n\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"sessions\" title=\"sessions\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n        <Row className=\"detailCardRow\">\n\n          <Col>\n          <p>Sessions:</p>\n\n          {lesson.sessions !== [] && (\n          <Button variant=\"primary\" onClick={props.toggleSessions}>\n            Show/Hide\n          </Button>\n          )}\n          {lesson.sessions !== [] &&\n            props.showSessionState === true && (\n            <LessonSessionList\n            isInstructor={isInstructor}\n            lessonSessions={lesson.sessions}\n            editSessionField={props.startEditSessionField}\n            showSessionBooked={props.showSessionBooked}\n            showSessionAttended={props.showSessionAttended}\n            hideSessionBooked={props.hideSessionBooked}\n            hideSessionAttended={props.hideSessionAttended}\n            sessionBookedState={props.sessionBookedState}\n            sessionAttendedState={props.sessionAttendedState}\n            addSessionAttendance={props.addSessionAttendance}\n            />\n          )}\n          </Col>\n\n\n          {isInstructor === true &&\n            lessonType === 'booked' && (\n\n          <Col className=\"detailCardCol\">\n          {props.editingSessionField === true && (\n            <UpdateSessionFieldForm\n              authId={props.authId}\n              session={props.session}\n              onConfirm={props.editSessionField}\n              onCancel={props.cancelEditSessionField}\n            />\n          )}\n\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          {props.creatingSession === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n          )}\n\n        </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"reviews\" title=\"reviews\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Reviews\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleReviews}>\n                Show/Hide\n              </Button>\n              {props.showReviewsState === true && (\n                <LessonReviewList\n                  lessonReviews={lesson.reviews}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"materials/requirements\" title=\"materials/requirements\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Requirements\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleRequirements}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'requirements')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'requirements' && (\n                <AddLessonRequirementsForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonRequirements}\n                />\n              )}\n              {props.showRequirementsState === true && (\n                <LessonRequirementList\n                  lessonRequirements={lesson.requirements}\n                  canDelete\n                  onDelete={props.deleteLessonRequirement}\n                />\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Materials\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleMaterials}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'materials')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'materials' && (\n                <AddLessonMaterialsForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonMaterials}\n                />\n              )}\n              {props.showMaterialsState === true && (\n                <LessonMaterialList\n                  lessonMaterials={lesson.materials}\n                  canDelete\n                  onDelete={props.deleteLessonMaterial}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"images\" title=\"images\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Images\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleImages}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'images')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'images' && (\n                <AddLessonImageForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonImage}\n                />\n              )}\n              {props.showImagesState === true && (\n                <LessonImageList\n                  lessonImages={lesson.gallery}\n                  canDelete\n                  onDelete={props.deleteLessonImage}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"files\" title=\"files\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Files\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleFiles}>\n                Show/Hide\n              </Button>\n              {isInstructor === true &&  (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'files')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'files' && (\n                <AddLessonFileForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonFile}\n                />\n              )}\n              {props.showFilesState === true && (\n                <LessonFileList\n                  lessonFiles={lesson.files}\n                  canDelete\n                  onDelete={props.deleteLessonFile}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"instructors\" title=\"instructors\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Instructors\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleInstructors}>\n                Show/Hide\n              </Button>\n              {isInstructor === true &&\n                JSON.stringify(props.selectedInstructor) === \"{}\" && (\n              <Button variant=\"warning\">\n                Select an Instructor to Add\n              </Button>\n              )}\n              {isInstructor === true &&\n                JSON.stringify(props.selectedInstructor) !== \"{}\" && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'instructors')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'instructors' &&  (\n                <AddLessonInstructorForm\n                selectedInstructor={props.selectedInstructor}\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonInstructor}\n                />\n              )}\n              {props.showInstructorsState === true && (\n                <LessonInstructorList\n                  lessonInstructors={lesson.instructors}\n                  canDelete\n                  onDelete={props.deleteLessonInstructor}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"tags\" title=\"tags\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Tags\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleTags}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'tags')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'tags' && (\n              <AddLessonTagsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonTags}\n              />\n            )}\n            {props.showTagsState === true && (\n              <LessonTagList\n                lessonTags={lesson.tags}\n                canDelete\n                onDelete={props.deleteLessonTag}\n              />\n            )}\n          </Col>\n        </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"edit\" title=\"edit\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n            {isInstructor === true && (\n                <Row className=\"detailCardRow\">\n                <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n                  Edit Basic\n                </Button>\n                  {props.editingLesson === true && (\n                    <UpdateLessonBasicForm\n                    lesson={lesson}\n                    onCancel={props.cancelEditBasic}\n                    onConfirm={props.editLessonBasic}\n                    />\n                  )}\n                </Col>\n\n              </Row>\n            )}\n\n              {isInstructor === true && (\n                <Row className=\"detailCardRow\">\n                <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n                  Edit Field\n                </Button>\n                  {props.editingLessonField === true && (\n                    <UpdateLessonFieldForm\n                    lesson={lesson}\n                    onCancel={props.cancelEditField}\n                    onConfirm={props.editLessonField}\n                    />\n                  )}\n                </Col>\n\n              </Row>\n            )}\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n      </Tabs>\n      </div>\n      </div>\n\n  );\n}\n\nexport default ProfileLessonViewer;\n\n\n//   <div className=\"attachmentViewerBg\">\n//   <div className=\"attachmentViewer\">\n//\n// <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n//\n//   <Tab eventKey=\"Basic\" title=\"Basic\">\n//   <Card className=\"UserDetailCard\">\n//   <Card.Body>\n//     <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//       {isInstructor === true &&(\n//         <Card.Text>\n//         Your lesson\n//         </Card.Text>\n//       )}\n//       <Card.Text>\n//         <span className=\"bold\">ID:</span> {lesson._id}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Title:</span> {lesson.title}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Type:</span> {lesson.type}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Category:</span> {lesson.category}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Sku:</span> {lesson.sku}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Price:</span> {lesson.price}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Description:</span> {lesson.description}\n//       </Card.Text>\n//\n//       </Col>\n//\n//       <Col className=\"detailCardCol\">\n//       <Card.Text>\n//         <span className=\"bold\">Main Instructor:</span>\n//       </Card.Text>\n//\n//       <Card.Text>\n//       ID: {lesson.instructors[0]._id}\n//       </Card.Text>\n//       <Card.Text>\n//       Username: {lesson.instructors[0].username}\n//       </Card.Text>\n//       <Card.Text>\n//         Contact\n//       </Card.Text>\n//       <Card.Text>\n//         Email: {lesson.instructors[0].contact.email}\n//       </Card.Text>\n//\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Instructors\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleInstructors}>\n//           Show/Hide\n//         </Button>\n//         {props.showInstructorsState === true && (\n//           <LessonInstructorList\n//             lessonInstructors={lesson.instructors}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Schedule\n//       </Card.Text>\n//       <Button variant=\"danger\" onClick={props.toggleSchedule}>\n//         show/hide\n//       </Button>\n//       {props.showScheduleState === true && (\n//         <LessonScheduleList\n//           lessonSchedule={lesson.schedule}\n//         />\n//       )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Requirements\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleRequirements}>\n//           Show/Hide\n//         </Button>\n//         {props.showRequirementsState === true && (\n//           <LessonRequirementList\n//             lessonRequirements={lesson.requirements}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Materials\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleMaterials}>\n//           Show/Hide\n//         </Button>\n//         {props.showMaterialsState === true && (\n//           <LessonMaterialList\n//             lessonMaterials={lesson.materials}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Reviews\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleReviews}>\n//           Show/Hide\n//         </Button>\n//         {props.showReviewsState === true && (\n//           <LessonReviewList\n//             lessonReviews={lesson.reviews}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//         <Button variant=\"danger\" onClick={props.closeProfileLessonView}>\n//           x\n//         </Button>\n//       </Col>\n//     </Row>\n//\n//\n// <Row className=\"detailCardRow\">\n//\n//   <Col>\n//   <p>Sessions:</p>\n//\n//   <Button variant=\"primary\" onClick={props.toggleSessions}>\n//     Show/Hide\n//   </Button>\n//   {lesson.sessions !== [] &&\n//     props.showSessionState === true && (\n//     <LessonSessionList\n//     isInstructor={isInstructor}\n//     lessonSessions={lesson.sessions}\n//     editSessionField={props.startEditSessionField}\n//     showSessionBooked={props.showSessionBooked}\n//     showSessionAttended={props.showSessionAttended}\n//     hideSessionBooked={props.hideSessionBooked}\n//     hideSessionAttended={props.hideSessionAttended}\n//     sessionBookedState={props.sessionBookedState}\n//     sessionAttendedState={props.sessionAttendedState}\n//     addSessionAttendance={props.addSessionAttendance}\n//     />\n//   )}\n//   </Col>\n//\n//\n//   {isInstructor === true && (\n//\n//   <Col className=\"detailCardCol\">\n//   {props.editingSessionField === true && (\n//     <UpdateSessionFieldForm\n//       authId={props.authId}\n//       session={props.session}\n//       onConfirm={props.editSessionField}\n//       onCancel={props.cancelEditSessionField}\n//     />\n//   )}\n//\n//   <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n//     New Session\n//   </Button>\n//   {props.creatingSession === true && (\n//     <CreateLessonSessionForm\n//       authId={props.authId}\n//       onCancel={props.cancelCreateSession}\n//       onConfirm={props.createLessonSession}\n//     />\n//   )}\n//   </Col>\n//\n//   )}\n//\n// </Row>\n//\n//     {isInstructor === true && (\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//\n//       <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n//         Edit Basic\n//       </Button>\n//         {props.editingLesson === true && (\n//           <UpdateLessonBasicForm\n//           lesson={lesson}\n//           onCancel={props.cancelEditBasic}\n//           onConfirm={props.editLessonBasic}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//     )}\n//\n//     {isInstructor === true && (\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//       <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n//         Edit Field\n//       </Button>\n//         {props.editingLessonField === true && (\n//           <UpdateLessonFieldForm\n//           lesson={lesson}\n//           onCancel={props.cancelEditField}\n//           onConfirm={props.editLessonField}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//     )}\n//\n//   </Card.Body>\n//   </Card>\n//   </Tab>\n//\n// </Tabs>\n//\n// </div>\n// </div>\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Tab from 'react-bootstrap/Tab';\n// import Nav from 'react-bootstrap/Nav';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport Spinner from '../../components/Spinner/Spinner';\n// import AttachmentViewer from '../../components/AttachmentViewer';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\n\nimport ThisUserProfile from '../../components/Users/thisUserProfile';\nimport ProfileLessonViewer from '../../components/ProfileLessonViewer';\n\nimport './Users.css';\nimport io from 'socket.io-client';\n\nclass UserProfile extends Component {\n  state = {\n    user: null,\n    userCopy: null,\n    users: [],\n    updating: false,\n    adding: false,\n    deleting: false,\n    updatingField: false,\n    isLoading: false,\n    userUpdateField: null,\n    userAddField: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    canDelete: null,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    messagesLoaded: false,\n    userMessages: null,\n    finalConfirmation: false,\n    socketMsg: \"\",\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    selectedFriendRequest: null,\n    requestingFriend: null,\n    userSelectedFriend: null,\n    orderBillingAddress: null,\n    orderShippingAddress: null,\n    profileLessonViewer: false,\n    profileLessonViewerData: null,\n    profileLessonType: null,\n    showSessionState: false,\n    showScheduleState: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    editingSessionField: false,\n    session: null,\n    sessionBookedState: false,\n    sessionAttendedState: false,\n    meetingsLoaded: false,\n    meetingSessions: [],\n    sessionDetailViewer: false,\n    showInstructorsState: false,\n    showRequirementsState: false,\n    showMaterialsState: false,\n    showTagsState: false,\n    showFilesState: false,\n    showImagesState: false,\n    showReviewsState: false,\n    creatingReview: false,\n    reviewLesson: null,\n    messageReplying: false,\n    replyTo: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n  };\n\n  isActive = true;\n  static contextType = AuthContext;\n\n  constructor(props){\n      super(props);\n      this.socket = io('http://localhost:9099');\n      this.userCopy = null;\n    }\n\n  componentDidMount() {\n    console.log('...user profile component mounted...');\n    this.getThisUser();\n\n    this.socket.emit('msg_subscribe', {user: this.context.activityId, room:'msg'+this.context.activityId});\n    // this.socket.emit('msg_subscribe', 'msg'+conversationId);\n    console.log(\"listening for pms...\");\n    this.socket.on('conversation private post', function(data) {\n      console.log(\"you got a new message..\",data);\n      addMessage(data);\n    });\n    const addMessage = data => {\n      this.setState({\n        userAlert: `New Msg!!\n          Fr:   ${data.message.senderName},\n          Msg:   ${data.message.message}`})\n    };\n\n    this.userOnline();\n\n  };\n\n  getPocketVars () {\n    console.log('...retriving pocketVars..');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")\n            {pocketVariables}}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('beep',resData.data.getPocketVars.pocketVariables,JSON.parse(resData.data.getPocketVars.pocketVariables));\n        this.setState({userAlert: resData.data.getPocketVars.pocketVariables})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  getThisUser() {\n    this.setState({ isLoading: true });\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,sessionTitle,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        let errors = null;\n        if (\n          resData.errors ||\n          JSON.stringify(resData).slice(2,7) === 'error'\n        ) {\n          errors = JSON.stringify({...resData.errors});\n          this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        }\n\n          const thisUser = resData.data.getThisUser;\n          // console.log(thisUser);\n          this.context.user = thisUser;\n          this.userCopy = thisUser;\n          if (this.isActive) {\n          this.setState({ user: thisUser, userCopy: thisUser, isLoading: false, activityA: JSON.stringify(requestBody) });\n          }\n          if (sessionStorage.getItem('token')) {\n            this.setState({userAlert: \"Welcome Back...\"})\n          }\n          if (thisUser.name === \"Lord-of-the-Manor\"){\n            this.setState({canDelete: true, userAlert: \"Mi'Lord!!\"})\n          }\n          // this.getPocketVars();\n          // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    // const today = new Date().toLocaleDateString();\n    const request = this.state.activityA;\n    // console.log(activityId,userId,request);\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",'message',message,'this.socket',this.socket);\n    this.setState({userAlert: \"sending socket message  \"+'message'+message+'this.socket'+this.socket})\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n\n      addMessage(data)\n    })\n\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  };\n  userOnline () {\n    console.log('...bringing user online...');\n    this.setState({userAlert: 'bringing user online...'})\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        mutation{userOnline(\n          activityId:\"${activityId}\",\n          userId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data.userOnline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  onStartUpdate = () => {\n    this.setState({ updating: true, userAddField: 'basic' });\n  };\n  onStartUpdateField = () => {\n    this.setState({ updating: true, updatingField: true });\n  };\n  onStartAdd = (args) => {\n    this.setState({adding: true, userAddField: args})\n  };\n  addUserField = (args) => {\n    this.setState({adding: true, userAddField: args})\n  };\n  startCreateMessage = () => {\n    if (this.context.receiver === null) {\n      this.setState({userAlert: \"select a receiver 1st...\"});\n    }\n    this.setState({adding: true, userAddField: \"message\"})\n  };\n\n  startCartCheckout = () => {\n    this.setState({creatingOrder: true})\n  };\n  cancelCartCheckout = () => {\n    this.setState({creatingOrder: false})\n  };\n\n  userEditBasic = (event) => {\n    this.setState({ updating: false, userAlert: \"Updating selected Staff ...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    // let role = this.context.user.role;\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let bio = event.target.formGridBio.value;\n\n    if (contactEmail.trim().length === 0 ) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      contactEmail = this.context.user.contact.email;\n    }\n    if (password.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      password = this.context.user.password;\n    }\n    if (name.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      name = this.context.user.name;\n    }\n    if (username.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      username = this.context.user.username;\n    }\n    // if (role.trim().length === 0) {\n    //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n    //   role = this.state.user.role;\n    // }\n    if (dob.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      dob = this.context.user.dob;\n    }\n    if (bio.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      bio = this.context.user.bio;\n    }\n\n    const requestBody = {\n      query: `\n          mutation {updateUserBasic(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              name:\"${name}\",\n              password:\"${password}\",\n              username:\"${username}\",\n              dob:\"${dob}\",\n              contactEmail:\"${contactEmail}\",\n              contactPhone:\"${contactPhone}\",\n              contactPhone2:\"${contactPhone2}\",\n              bio:\"${bio}\"\n            })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const updatedUser = resData.data.updateUserBasic;\n        this.context.user = updatedUser;\n        const responseAlert = JSON.stringify(resData.data.updateUserBasic).slice(2,25);\n\n        this.setState({ userAlert: responseAlert, user: updatedUser, activityA: JSON.stringify(requestBody)})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    };\n  userEditField = (event) => {\n      this.setState({ updatingField: false, userAlert: \"Updating selected Staff by Field...\" });\n      const token = this.context.token;\n      const activityId = this.context.activityId;\n      let userId = activityId;\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        // field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      const requestBody = {\n        query:`\n          mutation {updateUserByField(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            field:\"${field}\",\n            query:\"${query}\")\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          const responseAlert = JSON.stringify(resData.data.updateUserByField).slice(2,25);\n          this.setState({ userAlert: responseAlert, user: resData.data.updateUserByField, activityA: JSON.stringify(requestBody)})\n          this.context.user = this.state.user;\n          // this.logUserActivity();\n        })\n        .catch(err => {\n          this.setState({userAlert: err});\n        });\n    };\n  userAddPoints = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding points for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        let userId = activityId;\n        const points = event.target.formGridPoints.value;\n\n        const requestBody = {\n          query:`\n            mutation {addUserPoints(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              userInput:{\n                points:${points}\n              })\n              {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n        fetch('http://localhost:8088/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n            }\n            return res.json();\n          })\n          .then(resData => {\n\n            const responseAlert = JSON.stringify(resData.data.addUserPoints).slice(2,25);\n            this.setState({userAlert: responseAlert, user: resData.data.addUserPoints, activityA: JSON.stringify(requestBody)})\n            this.context.user = this.state.user;\n            // this.logUserActivity();\n          })\n          .catch(err => {\n            this.setState({userAlert: err});\n          });\n      };\n  userAddAddress = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = event.target.formGridAddressType.value;\n    const addressNumber = event.target.formGridAddressNumber.value;\n    const addressStreet = event.target.formGridAddressStreet.value;\n    const addressTown = event.target.formGridAddressTown.value;\n    const addressCity = event.target.formGridAddressCity.value;\n    const addressCountry = event.target.formGridAddressCountry.value;\n    const addressPostalCode = event.target.formGridAddressPostalCode.value;\n\n    if (\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0\n    ) {\n      console.log('blank fields detected.. please check your info and try again..');\n      this.setState({userAlert: 'blank fields detected.. please check your info and try again..'})\n      return\n    }\n\n    const requestBody = {\n      query:`\n        mutation {addUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserAddress).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserAddress, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAddress = (args) => {\n    console.log('userDeleteAddress...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n            addressPrimary:${addressPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserAddress).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserAddress, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  makeAddressPrimary = (args) => {\n    console.log('makeAddressPrimary...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    // const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {setUserAddressPrimary(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.setUserAddressPrimary).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.setUserAddressPrimary, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddProfileImage = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = event.target.formGridFilename.value;\n    const profileImageType = event.target.formGridFiletype.value;\n    const profileImagePath = event.target.formGridFilepath.value;\n    const requestBody = {\n      query:`\n        mutation {addUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserProfileImage).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserProfileImage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteProfileImage = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = args.name;\n    const profileImageType = args.type;\n    const profileImagePath = args.path;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserProfileImage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserProfileImage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddSocialMedia = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = event.target.formGridPlatform.value;\n    const socialMediaHandle = event.target.formGridHandle.value;\n    const socialMediaLink = event.target.formGridLink.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserSocialMedia).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserSocialMedia, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteSocialMedia = (args) => {\n    console.log('userDeleteSocialMedia');\n    this.setState({ deleting: true, userAlert: \"deleting socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = args.platform;\n    const socialMediaHandle = args.handle;\n    const socialMediaLink = args.link\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserSocialMedia).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserSocialMedia, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPaymentInfo = (event) => {\n    console.log('userAddPaymentInfo');\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n\n    const paymentInfoDate = event.target.paymentInfoDate.value;\n    const paymentInfoType = event.target.formGridPaymentInfoType.value;\n    const paymentInfoDescription = event.target.formGridDescription.value;\n    const paymentInfoBody = event.target.formGridBody.value;\n    let paymentInfoPrimary = event.target.formGridPaymentInfoPrimaryCheckbox.checked;\n    const paymentInfoValid = true;\n\n    const requestBody = {\n      query:`\n        mutation {addUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary},\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserPaymentInfo).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserPaymentInfo, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeletePaymentInfo = (args) => {\n    console.log('userDeletePaymentInfo',JSON.stringify(args));\n    this.setState({ deleting: true, userAlert: \"deleting paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const paymentInfoDate = args.date;\n    const paymentInfoType = args.type;\n    const paymentInfoDescription = args.description;\n    const paymentInfoBody = args.body;\n    const paymentInfoValid = args.valid;\n    const paymentInfoPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserPaymentInfo).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPaymentInfo, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddInterests = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interests = event.target.formGridInterests.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserInterests(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interests:\"${interests}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const activityLog = 'mutation_addUserInterests_origin_'+activityId+'_target_'+userId+'_body_'+interests+'';\n        const responseAlert = JSON.stringify(resData.data.addUserInterests).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserInterests, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteInterest = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interest = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserInterest(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interest:\"${interest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserInterest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserInterest, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddTags = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding tags for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query:`\n      mutation {addUserTags(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tags:\"${tags}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserTags).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserTags, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteTag = (args) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"deleting tag for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tag = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteUserTag(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tag:\"${tag}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserTag).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.deleteUserTag, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPerk  = (event) => {\n        // this.setState({ adding: false, userAddField: null, userAlert: \"adding perk for user...\" });\n        // const token = this.context.token;\n        // const activityId = this.context.activityId;\n        // const perkId = this.context.selectedPerk._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('http://localhost:8088/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPerk).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPerk, activityA: JSON.stringify(requestBody)})\n        //     this.context.user = this.state.user;\n        //     // this.logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      };\n  userDeletePerk = (args) => {\n    // this.setState({ deleting: true, userAlert: \"deleting perk for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.deleteUserPerk).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPerk, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAddPromo  = (event) => {\n        // this.setState({ adding: false, userAddField: null, userAlert: \"adding promo for user...\" });\n        // const token = this.context.token;\n        // const activityId = this.context.activityId;\n        // const promoId = this.context.selectedPromo._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('http://localhost:8088/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPromo).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPromo, activityA: JSON.stringify(requestBody)})\n        //     this.context.user = this.state.user;\n        //     // this.logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      }\n  userDeletePromo = (args) => {\n    // this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.userDeletePromo).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.userDeletePromo, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAcceptFriendRequest = (args) => {\n    console.log('userAcceptFriendRequest...');\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = args.receiver._id;\n    const friendId = args.sender._id;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    // let requestingFriend = event;\n    // let requestingFriend = null;\n    // if (args.sender._id === this.context.activityId) {\n    //   requestingFriend = args.receiver;\n    // }\n    // if (args.receiver._id === this.context.activityId) {\n    //   requestingFriend = args.sender;\n    // }\n    // return\n    // this.setState({requestingFriend: requestingFriend});\n  };\n  userRejectFriendRequest = (args) => {\n    console.log('userRejectFriendRequest...');\n    this.setState({ deleting: true, userAlert: \"deleting friend request for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const senderId = args.sender._id;\n    const receiverId = args.receiver._id;\n    // const date = args.date;\n\n    const requestBody = {\n      query:`\n      mutation {deleteFriendRequest(\n        activityId:\"${activityId}\",\n        senderId:\"${senderId}\",\n        receiverId:\"${receiverId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteFriendRequest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteFriendRequest, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddFriend = (event) => {\n    console.log(\"...adding friend for user...\");\n    this.setState({ adding: false, userAddField: null, userAlert: \"...adding friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.requestingFriend;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userSelectFriend = (args) => {\n    this.setState({userSelectedFriend: args});\n    this.context.receiver = args;\n  };\n  userDeleteFriend = (args) => {\n    console.log(\"...deleting friend for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.userSelectedFriend._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserFriend(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          friendId:\"${friendId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteCartItem = (args) => {\n    console.log(\"...deleting cart item for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting cart item for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const lessonId = args.lesson._id;\n    const dateAdded = args.dateAdded;\n    const sessionDate = args.sessionDate;\n    const sessionTitle = args.sessionTitle;\n    // console.log(sessionDate,lessonId,sessionTitle);\n    const requestBody = {\n      query:`\n        mutation {deleteUserCartLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          dateAdded:\"${dateAdded}\",\n          sessionDate:\"${sessionDate}\",\n          sessionTitle:\"${sessionTitle}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserCartLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserCartLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteBookedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting booked kesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const date = args.date;\n    const lessonId = args.ref;\n    const requestBody = {\n      query:`\n        mutation {deleteUserBookedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          date:\"${date}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('resData',resData);\n        const responseAlert = JSON.stringify(resData.data.deleteUserBookedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserBookedLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteLikedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting likeLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = args._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserLikedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserLikedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserLikedLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAttendedLesson = (args) => {\n    console.log(\"...deleting attendedLesson for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting attendedLesson for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n  };\n  userDeleteTaughtLesson = (args) => {\n    console.log(\"...deleting taughtLesson for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting taughtLesson for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n  };\n  addAddressToOrder = (event) => {\n    console.log('...add address to order...');\n    event.preventDefault();\n    // const address = JSON.stringify(event);\n    console.log(event.target.value.slice(9,16));\n    let type = event.target.value.slice(9,16);\n    if (type === 'Billing') {\n      this.setState({orderBillingAddress: event.target.value})\n    }\n    if (type === 'Shipping') {\n      this.setState({orderShippingAddress: event.target.value})\n    }\n  };\n  orderStripePayment = () => {\n    const userCartLessonSkus = this.state.user.cart.map(x => x.lesson.sku)\n    console.log(userCartLessonSkus);\n    // on failure returnor throw error\n  }\n  addMultipleBookings = () => {\n    console.log(\"...adding multiple bookings...\");\n    this.setState({ userAlert: \"...adding multiple bookings...\", isLoading: true });\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        mutation {addMultipleBookings(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n          // console.log(resData);\n          if (resData.errors) {\n            this.setState({userAlert: resData.errors[0].message, isLoading: false})\n          }\n          if (resData.data.addMultipleBookings !== null) {\n            this.setState({user: resData.data.addMultipleBookings, isLoading: false})\n          }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n\n  };\n  createOrder = (event) => {\n    event.preventDefault();\n    console.log(\"creating order for user...\");\n    this.setState({ creatingOrder: false, userAlert: \"creating order for user...\" });\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    // let userId = activityId;\n    const buyerId = activityId;\n    const receiverId = activityId;\n\n    const type = event.target.formGridType.value;\n    const totalA = event.target.formGridTotalA.value;\n    const totalB = event.target.formGridTotalB.value;\n    // const totalC = event.target.formGridTotalC.value;\n    const taxDescription = event.target.formGridTaxDescription.value;\n    const taxAmount = event.target.formGridTaxAmount.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const payment = event.target.formGridPayment.value;\n    const shipping = event.target.formGridShipping.value;\n    const billingAddressNumber = event.target.formGridBillingAddressNumber.value;\n    const billingAddressStreet = event.target.formGridBillingAddressStreet.value;\n    const billingAddressTown = event.target.formGridBillingAddressTown.value;\n    const billingAddressCity = event.target.formGridBillingAddressCity.value;\n    const billingAddressCountry = event.target.formGridBillingAddressCountry.value;\n    const billingAddressPostalCode = event.target.formGridBillingAddressPostalCode.value;\n    const shippingAddressNumber = event.target.formGridShippingAddressNumber.value;\n    const shippingAddressStreet = event.target.formGridShippingAddressStreet.value;\n    const shippingAddressTown = event.target.formGridShippingAddressTown.value;\n    const shippingAddressCity = event.target.formGridShippingAddressCity.value;\n    const shippingAddressCountry = event.target.formGridShippingAddressCountry.value;\n    const shippingAddressPostalCode = event.target.formGridShippingAddressPostalCode.value;\n\n    const requestBody = {\n      query:`\n        mutation {createOrder(\n          activityId:\"${activityId}\",\n          buyerId:\"${buyerId}\",\n          receiverId:\"${receiverId}\",\n          orderInput:{\n            type:\"${type}\",\n            totalA:${totalA},\n            totalB:${totalB},\n            taxDescription:\"${taxDescription}\",\n            taxAmount:${taxAmount},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            payment:\"${payment}\",\n            shipping:\"${shipping}\",\n            billingAddressNumber:${billingAddressNumber},\n            billingAddressStreet:\"${billingAddressStreet}\",\n            billingAddressTown:\"${billingAddressTown}\",\n            billingAddressCity:\"${billingAddressCity}\",\n            billingAddressCountry:\"${billingAddressCountry}\",\n            billingAddressPostalCode:\"${billingAddressPostalCode}\",\n            shippingAddressNumber:${shippingAddressNumber},\n            shippingAddressStreet:\"${shippingAddressStreet}\",\n            shippingAddressTown:\"${shippingAddressTown}\",\n            shippingAddressCity:\"${shippingAddressCity}\",\n            shippingAddressCountry:\"${shippingAddressCountry}\",\n            shippingAddressPostalCode:\"${shippingAddressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        // const responseAlert = JSON.stringify(resData.data.createOrder).slice(2,25);\n        // this.setState({userAlert: responseAlert, user: resData.data.createOrder, activityA: JSON.stringify(requestBody)})\n        // this.context.user = this.state.user;\n        // this.logUserActivity();\n        this.addMultipleBookings();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteOrder = (args) => {\n    console.log(\"...deleting order for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting order for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const orderId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserOrder(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          orderId:\"${orderId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserOrder).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserOrder, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteReview = (args) => {\n    console.log(\"...deleting promo for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const reviewId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          reviewId:\"${reviewId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserReview).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserReview, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userCreateMessage = (event) => {\n    event.preventDefault();\n    console.log('...user create message ...');\n    this.setState({ adding: false });\n    const token = this.context.token;\n    // const receiver = this.context.receiver;\n    const receiverId = this.context.receiver._id;\n    // const receiverRole = this.context.receiver.role;\n    // const role = this.context.role;\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const senderName = this.state.user.username;\n    const date = new Date();\n    // const timeString1 = date.toLocaleDateString().slice(11,16);\n    const timeString2 = date.toLocaleDateString().slice(11,16);\n    const type = event.target.formGridTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n    const msgObject = {\n      date: date,\n      time: timeString2,\n      type: type,\n      senderName: senderName,\n      subject: subject,\n      message: message,\n    };\n\n    const requestBody = {\n      query:`\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n        {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    this.sendSocketMessage(msgObject);\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(\"createMessage\",resData.data.createMessage);\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(2,25);;\n        this.setState({ userAlert: responseAlert, activityA: JSON.stringify(requestBody), userAddField: null});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteMessage = (args) => {\n    console.log(\"...deleting message for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting message for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const messageId = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteMessage(\n        activityId:\"${activityId}\",\n        messageId:\"${messageId}\",)\n      {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteMessage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteMessage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  onStartReply = (args) => {\n    this.setState({messageReplying: true, replyTo: args});\n  };\n  onCancelReply = () => {\n    this.setState({messageReplying: false, replyTo: null});\n  };\n  onReply = (event) => {\n    event.preventDefault();\n    console.log('...replying to message...', this.state.replyTo,event.target);\n    this.setState({userAlert: '...replying to message...', messageReplying: false})\n\n    const token = this.context.token;\n    // const receiver = this.state.replyTo.sender;\n    const receiverId = this.state.replyTo.sender._id;\n    // const role = this.context.role;\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const senderName = this.state.user.username;\n    const date = new Date();\n    // const timeString1 = date.toLocaleDateString().slice(11,16);\n    const timeString2 = date.toLocaleDateString().slice(11,16);\n    const type = event.target.formGridTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n    const msgObject = {\n      date: date,\n      time: timeString2,\n      type: type,\n      senderName: senderName,\n      subject: subject,\n      message: message,\n    };\n\n    const requestBody = {\n      query:`\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n        {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    this.sendSocketMessage(msgObject);\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"reply Message\",resData.data.createMessage);\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(2,25);;\n        this.setState({ userAlert: responseAlert, activityA: JSON.stringify(requestBody), replyTo: null});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userDeleteActivity = (args) => {\n    console.log(\"...deleting activity for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting activity for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const activityDate = args.date;\n    const activityRequest = args.request;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserActivity(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${activityRequest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserActivity).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  modalCancelHandler = () => {\n    this.setState({ updating: false, updatingField: false, adding: false, userAddField: null  });\n  };\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  };\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  };\n  viewLessonDetails = (args) => {\n    console.log('...retriving lesson details...');\n    this.setState({useAlert: 'retriving lesson details', isLoading: true})\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let lessonId = null;\n    if (args.lesson._id) {\n      lessonId = args.lesson._id;\n    }\n    if (args.lesson.ref) {\n      lessonId = args.lesson.ref._id;\n    }\n\n    const requestBody = {\n      query:`\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},sessions{title,date,time,limit,amount,booked{_id,username,bio,profileImages{name,type,path},socialMedia{platform,handle,link}},bookedAmount,attended{_id,username,bio,profileImages{name,type,path},socialMedia{platform,handle,link}},attendedAmount,inProgress,full,url},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonById).slice(2,25);\n        this.setState({userAlert: responseAlert, isLoading: false, profileLessonViewer: true, profileLessonViewerData: resData.data.getLessonById, profileLessonType: args.type})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  closeProfileLessonView = () => {\n    this.setState({profileLessonViewer: false, profileLessonViewerData: null})\n  };\n\n  toggleSessions = () => {\n    if (this.state.showSessionState === false) {\n      this.setState({showSessionState: true})\n    } else {\n      this.setState({showSessionState: false})\n    }\n  }\n  toggleInstructors = () => {\n    if (this.state.showInstructorsState === false) {\n      this.setState({showInstructorsState: true})\n    } else {\n      this.setState({showInstructorsState: false})\n    }\n  }\n  toggleSchedule = () => {\n    if (this.state.showScheduleState === false) {\n      this.setState({showScheduleState: true})\n    } else {\n      this.setState({showScheduleState: false})\n    }\n  }\n  toggleRequirements = () => {\n    if (this.state.showRequirementsState === false) {\n      this.setState({showRequirementsState: true})\n    } else {\n      this.setState({showRequirementsState: false})\n    }\n  }\n  toggleMaterials = () => {\n    if (this.state.showMaterialsState === false) {\n      this.setState({showMaterialsState: true})\n    } else {\n      this.setState({showMaterialsState: false})\n    }\n  }\n  toggleReviews = () => {\n    if (this.state.showReviewsState === false) {\n      this.setState({showReviewsState: true})\n    } else {\n      this.setState({showReviewsState: false})\n    }\n  }\n  toggleTags = () => {\n    if (this.state.showTagsState === false) {\n      this.setState({showTagsState: true})\n    } else {\n      this.setState({showTagsState: false})\n    }\n  }\n  toggleImages = () => {\n    if (this.state.showImagesState === false) {\n      this.setState({showImagesState: true})\n    } else {\n      this.setState({showImagesState: false})\n    }\n  }\n  toggleFiles = () => {\n    if (this.state.showFilesState === false) {\n      this.setState({showFilesState: true})\n    } else {\n      this.setState({showFilesState: false})\n    }\n  }\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    // const userId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toLocaleDateString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonBooking, isLoading: false});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  };\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  };\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    console.log('...editing lesson basic...');\n    this.setState({editingLesson: false, userAlert: '...editing lesson basic...'})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ profileLessonViewerData: resData.data.updateLessonBasic, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  onStartEditLessonField = () => {\n    this.setState({editingLessonField: true})\n  };\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  };\n  editLessonField = (event) => {\n    event.preventDefault();\n    console.log('...editing lesson field...');\n    this.setState({editingLessonField: false, userAlert: '...editing lesson field...'})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ profileLessonViewer: resData.data.updateLessonByField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  startEditSessionField = (args) => {\n    this.setState({editingSessionField: true, session: args})\n  };\n  cancelEditSessionField = () => {\n    this.setState({editingSessionField: false})\n  };\n  editSessionField = (event) => {\n    event.preventDefault();\n    console.log(event, '...updating session by field...');\n    this.setState({editingSessionField: false, userAlert: '...updating session by field...'})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    // const lessonId = this.state.session.lessonId;\n    let lessonId = null;\n    if (this.state.sessionDetailViewer === true ) {\n      lessonId = this.state.session.lessonId;\n    } else {\n      lessonId = this.state.profileLessonViewerData._id;\n    }\n    const token = this.context.token;\n\n    const sessionTitle = this.state.session.title;\n    const sessionDate = this.state.session.date;\n\n    const sessionField = event.target.formGridFieldSelect.value;\n    const sessionQuery = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n        mutation {updateSessionField(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\",\n            sessionField:\"${sessionField}\",\n            sessionQuery:\"${sessionQuery}\"\n          })\n         {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n          `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const lesson = resData.data.updateSessionField;\n        const sessions = resData.data.updateSessionField.sessions;\n        const session = sessions.filter(x => x.title === sessionTitle)\n        const session2 = session[0];\n        console.log(session);\n        const newSession = {\n            title: session2.title,\n            date: session2.date,\n            time: session2.time,\n            limit: session2.limit,\n            amount: session2.amount,\n            bookedAmount: session2.bookedAmount,\n            booked: session2.booked,\n            attended: session2.attended,\n            attendedAmount: session2.attendedAmount,\n            inProgress: session2.inProgress,\n            full: session2.full,\n            url: session2.url,\n            lessonId: lesson._id,\n            lessonTitle: lesson.title,\n            lessonInstructors: lesson.instructors,\n          };\n        const responseAlert = JSON.stringify(resData.data.updateSessionField).slice(0,8);\n        this.setState({ sessionDetailViewer: true, session: newSession, profileLessonViewerData: resData.data.updateSessionField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n\n  };\n\n  showSessionBooked = () => {\n    this.setState({sessionBookedState: true})\n  };\n  showSessionAttended = () => {\n    console.log(\"...attended session attendance...\");\n    this.setState({sessionAttendedState: true})\n  };\n  hideSessionBooked = () => {\n    this.setState({sessionBookedState: false})\n  };\n  hideSessionAttended = () => {\n    this.setState({sessionAttendedState: false})\n  };\n  addSessionAttendance = (attendance) => {\n    console.log('...adding session attendance...');\n    this.setState({userAlert: '...adding session attendance...'})\n    const activityId = this.context.activityId;\n    const userId = attendance.user._id;\n    let lessonId = null;\n    if (this.state.sessionDetailViewer === true ) {\n      lessonId = this.state.session.lessonId;\n    } else {\n      lessonId = this.state.profileLessonViewerData._id;\n    }\n\n    const sessionDate = attendance.sessionDate;\n    const sessionTitle = attendance.sessionTitle;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonAttendance(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            userId:\"${userId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\"\n            })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonAttendance});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  loadMeetings = () => {\n    console.log('...retriving todays sessions...');\n    this.setState({userAlert: '...retriving todays sessions...'})\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getUserBookedSessionsToday(\n            activityId:\"${activityId}\"\n          )\n          {title,date,time,limit,amount,bookedAmount,attendedAmount,inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.getUserBookedSessionsToday);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, meetingSessions: resData.data.getUserBookedSessionsToday, meetingsLoaded: true});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  hideMeetings = () => {\n    this.setState({ meetingsLoaded: false, meetingSessions: []})\n  };\n  viewSessionDetails = (session) => {\n    console.log('...rerieving session details...');\n    this.setState({userAlert: '...retriving todays sessions...'})\n    const activityId = this.context.activityId;\n    const lessonId = session.lessonId;\n    const sessionTitle = session.title;\n    const sessionDate = session.date;\n\n      const requestBody = {\n        query: `\n          query {getLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\"\n            })\n            {title,date,time,limit,amount,bookedAmount,booked{_id,username},attendedAmount,attended{_id,username},inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n        `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.getLessonSession);\n        const newSession = {\n          title: resData.data.getLessonSession.title,\n          date: resData.data.getLessonSession.date,\n          time: resData.data.getLessonSession.time,\n          limit: resData.data.getLessonSession.limit,\n          amount: resData.data.getLessonSession.amount,\n          bookedAmount: resData.data.getLessonSession.bookedAmount,\n          booked: resData.data.getLessonSession.booked,\n          attended: resData.data.getLessonSession.attended,\n          attendedAmount: resData.data.getLessonSession.attendedAmount,\n          inProgress: resData.data.getLessonSession.inProgress,\n          full: resData.data.getLessonSession.full,\n          url: resData.data.getLessonSession.url,\n          lessonId: session.lessonId,\n          lessonTitle: session.lessonTitle,\n          lessonInstructors: session.lessonInstructors,\n        };\n        // console.log('beep',newSession);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, session: newSession, sessionDetailViewer: true});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  hideSessionDetails = () => {\n    this.setState({session: null, sessionDetailViewer: false})\n  };\n\n  startCreateReview = (args) => {\n    console.log('startCreateReview', args);\n    this.setState({creatingReview: true, reviewLesson: args.ref})\n  }\n  cancelCreateReview = () => {\n    this.setState({creatingReview: false, reviewLesson: null})\n  }\n  createReview = (event) => {\n    event.preventDefault();\n    console.log('...createing review...');\n    this.setState({userAlert: '...createing review...', creatingReview: false})\n    const lessonId = this.state.reviewLesson._id;\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const type = event.target.formGridTypeSelect.value;\n    const title = event.target.formGridTitle.value;\n    const body = event.target.formGridBody.value;\n    const rating = event.target.formGridRating.value;\n    //\n    const requestBody = {\n      query: `\n        mutation {createReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          reviewInput:{\n            type:\"${type}\",\n            title:\"${title}\",\n            body:\"${body}\",\n            rating:${rating}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.createReview);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, user: resData.data.createReview, reviewLesson: null});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startLessonAdd = (args) => {\n    // console.log(args);\n    this.setState({lessonAddField: args})\n  }\n  cancelLessonAdd = (args) => {\n    this.setState({lessonAddField: null})\n  }\n\n  addLessonMaterials = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson materials...');\n    this.setState({userAlert: '...adding lesson materials...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const materials = event.target.formGridMaterials.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonMaterials(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              materials: \"${materials}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonMaterials});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonTags = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson tags...');\n    this.setState({userAlert: '...adding lesson tags...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonTags(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tags:\"${tags}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonTags});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonRequirements = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson requirements ...');\n    this.setState({userAlert: '...adding lesson requirements ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const requirements = event.target.formGridRequirements.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonRequirements(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirements: \"${requirements}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonRequirements});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonImage = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Image ...');\n    this.setState({userAlert: '...adding lesson Images ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const imageName = event.target.formGridImagename.value;\n    const imageType = event.target.formGridImagetype.value;\n    const imagePath = event.target.formGridImagepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName:\"${imageName}\",\n              imageType:\"${imageType}\",\n              imagePath:\"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('resData.data.addLessonImage',resData.data.addLessonImage);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonImage, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n        // this.getThisUser();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonFile = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Files ...');\n    this.setState({userAlert: '...adding lesson Files ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const fileName = event.target.formGridFilename.value;\n    const fileType = event.target.formGridFilesize.value;\n    const fileSize = event.target.formGridFiletype.value;\n    const filePath = event.target.formGridFilepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\"\n              fileType: \"${fileType}\"\n              fileSize: \"${fileSize}\"\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonFile});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonInstructor = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson instructor ...');\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const instructorId = this.context.selectedUser._id;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\"\n            instructorId: \"${instructorId}\")\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonInstructor});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n  deleteLessonTag = (args) => {\n    console.log('...deleting lesson tag...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const tag = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonTag(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tag:\"${tag}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.deleteLessonTag);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonTag, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonRequirement = (args) => {\n    console.log('...deleting lesson requirement...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const requirement = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonRequirement(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirement:\"${requirement}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonRequirement, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonMaterial = (args) => {\n    console.log('...deleting lesson material...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const material = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonMaterial(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              material:\"${material}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonMaterial, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonImage = (args) => {\n    console.log('...deleting lesson image...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const imageName = args.name;\n    const imageType = args.type;\n    const imagePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\",\n              imageType: \"${imageType}\",\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonImage, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonFile = (args) => {\n    console.log('...deleting lesson file...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const fileName = args.name;\n    const fileType = args.type;\n    const fileSize = args.size;\n    const filePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\",\n              fileType: \"${fileType}\",\n              fileSize: \"${fileSize}\",\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonFile, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonInstructor = (args) => {\n    console.log('...deleting lesson instructor...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const instructorId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            instructorId: \"${instructorId}\"\n          )\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonInstructor, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  clearAddressFilters = () => {\n    this.setState({filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n      userAlert: '..filters cleared..'\n  })\n}\n  setFilter = (args) => {\n    // console.log('...set filter...',{...args});\n    this.setState({filter: {\n      field: args.field,\n      key: args.key,\n      value: args.value\n    }});\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AlertBox\n          authId={this.context.activityId}\n          alert={this.state.userAlert}\n        />\n\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n\n        <SidebarControl\n          onShowSidebar={this.showSidebar}\n          onHideSidebar={this.hideSidebar}\n        />\n\n        <Row>\n        {this.state.sidebarShow === true &&\n          this.state.user !== null && (\n          <Col md={2} className=\"MasterCol1\">\n          <SidebarPage\n            you={this.state.user}\n            authId={this.context.activityId}\n          />\n          </Col>\n        )}\n\n        {this.state.profileLessonViewer === true &&\n          this.state.profileLessonViewerData !== null && (\n          <ProfileLessonViewer\n            authId={this.context.activityId}\n            lessonType={this.state.profileLessonType}\n            profileLesson={this.state.profileLessonViewerData}\n            closeProfileLessonView={this.closeProfileLessonView}\n\n            toggleSessions={this.toggleSessions}\n            showSessionState={this.state.showSessionState}\n\n            showScheduleState={this.state.showScheduleState}\n            toggleSchedule={this.toggleSchedule}\n\n            toggleInstructors={this.toggleInstructors}\n            showInstructorsState={this.state.showInstructorsState}\n            toggleRequirements={this.toggleRequirements}\n            showRequirementsState={this.state.showRequirementsState}\n            toggleMaterials={this.toggleMaterials}\n            showMaterialsState={this.state.showMaterialsState}\n            toggleReviews={this.toggleReviews}\n            showReviewsState={this.state.showReviewsState}\n\n            toggleTags={this.toggleTags}\n            showTagsState={this.state.showTagsState}\n            toggleImages={this.toggleImages}\n            showImagesState={this.state.showImagesState}\n            toggleFiles={this.toggleFiles}\n            showFilesState={this.state.showFilesState}\n\n            startCreateSession={this.startCreateSession}\n            creatingSession={this.state.creatingSession}\n            cancelCreateSession={this.cancelCreateSession}\n            createLessonSession={this.createLessonSession}\n\n            startEditSessionField={this.startEditSessionField}\n            editingSessionField={this.state.editingSessionField}\n            editSessionField={this.editSessionField}\n            cancelEditSessionField={this.cancelEditSessionField}\n            session={this.state.session}\n\n            showSessionBooked={this.showSessionBooked}\n            showSessionAttended={this.showSessionAttended}\n            hideSessionBooked={this.hideSessionBooked}\n            hideSessionAttended={this.hideSessionAttended}\n            sessionBookedState={this.state.sessionBookedState}\n            sessionAttendedState={this.state.sessionAttendedState}\n            addSessionAttendance={this.addSessionAttendance}\n\n            editingLesson={this.state.editingLesson}\n            onStartEditLessonBasic={this.onStartEditLessonBasic}\n            editLessonBasic={this.editLessonBasic}\n            cancelEditBasic={this.cancelEditBasic}\n\n            editingLessonField={this.state.editingLessonField}\n            onStartEditLessonField={this.onStartEditLessonField}\n            editLessonField={this.editLessonField}\n            cancelEditField={this.cancelEditField}\n\n            startLessonAdd={this.startLessonAdd}\n            cancelLessonAdd={this.cancelLessonAdd}\n            lessonAddField={this.state.lessonAddField}\n            addLessonMaterials={this.addLessonMaterials}\n            addLessonRequirements={this.addLessonRequirements}\n            addLessonTags={this.addLessonTags}\n            addLessonInstructor={this.addLessonInstructor}\n            addLessonImage={this.addLessonImage}\n            addLessonFile={this.addLessonFile}\n            selectedInstructor={this.context.selectedUser}\n\n            deleteLessonTag={this.deleteLessonTag}\n            deleteLessonRequirement={this.deleteLessonRequirement}\n            deleteLessonMaterial={this.deleteLessonMaterial}\n            deleteLessonImage={this.deleteLessonImage}\n            deleteLessonFile={this.deleteLessonFile}\n            deleteLessonInstructor={this.deleteLessonInstructor}\n          />\n        )}\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n          <div className=\"containerProfile\">\n          {this.state.isLoading ? (\n            <Spinner />\n          ) : (\n            <Row>\n              <Col>\n              {this.state.user !== null && (\n                  <ThisUserProfile\n                    user={this.userCopy}\n                    authId={this.context.activityId}\n                    onCancel={this.modalCancelHandler}\n                    canDelete={this.state.canDelete}\n\n                    onStartUpdate={this.onStartUpdate}\n                    onStartUpdateField={this.onStartUpdateField}\n                    onStartAdd={this.onStartAdd}\n\n                    userEditBasic={this.userEditBasic}\n                    userEditField={this.userEditField}\n                    userAddPoints={this.userAddPoints}\n                    userAddAddress={this.userAddAddress}\n                    makeAddressPrimary={this.makeAddressPrimary}\n                    userDeleteAddress={this.userDeleteAddress}\n                    userAddProfileImage={this.userAddProfileImage}\n                    userDeleteProfileImage={this.userDeleteProfileImage}\n\n                    userAddSocialMedia={this.userAddSocialMedia}\n                    userDeleteSocialMedia={this.userDeleteSocialMedia}\n\n                    userAddPaymentInfo={this.userAddPaymentInfo}\n                    userDeletePaymentInfo={this.userDeletePaymentInfo}\n\n                    selectedPerk={this.context.selectedPerk}\n                    userAddPerk={this.userAddPerk}\n                    userDeletePerk={this.userDeletePerk}\n\n                    selectedPromo={this.context.selectedPromo}\n                    userAddPromo={this.userAddPromo}\n                    userDeletePromo={this.userDeletePromo}\n\n                    userAddInterests={this.userAddInterests}\n                    userDeleteInterest={this.userDeleteInterest}\n\n                    userAddTags={this.userAddTags}\n                    userDeleteTag={this.userDeleteTag}\n\n                    userRejectFriendRequest={this.userRejectFriendRequest}\n                    userAcceptFriendRequest={this.userAcceptFriendRequest}\n                    userDeleteFriend={this.userDeleteFriend}\n                    userSelectFriend={this.userSelectFriend}\n                    userAddFriend={this.userAddFriend}\n\n                    userDeleteCartItem={this.userDeleteCartItem}\n                    userDeleteLikedLesson={this.userDeleteLikedLesson}\n                    userDeleteBookedLesson={this.userDeleteBookedLesson}\n                    userDeleteAttendedLesson={this.userDeleteAttendedLesson}\n                    userDeleteTaughtLesson={this.userDeleteTaughtLesson}\n\n                    addAddressToOrder={this.addAddressToOrder}\n                    orderBillingAddress={this.state.orderBillingAddress}\n                    orderShippingAddress={this.state.orderShippingAddress}\n                    startCartCheckout={this.startCartCheckout}\n                    cancelCartCheckout={this.cancelCartCheckout}\n                    createOrder={this.createOrder}\n                    userDeleteOrder={this.userDeleteOrder}\n                    userDeleteReview={this.userDeleteReview}\n                    userDeleteActivity={this.userDeleteActivity}\n\n                    userCreateMessage={this.userCreateMessage}\n                    userDeleteMessage={this.userDeleteMessage}\n\n                    updating={this.state.updating}\n                    updatingField={this.state.updatingField}\n                    userAddField={this.state.userAddField}\n                    creatingOrder={this.state.creatingOrder}\n\n                    selectedUser={this.context.selectedUser}\n                    messageReceiver={this.context.receiver}\n                    requestingFriend={this.state.requestingFriend}\n                    onStartCreateMessage={this.startCreateMessage}\n\n                    viewLessonDetails={this.viewLessonDetails}\n\n                    loadMeetings={this.loadMeetings}\n                    hideMeetings={this.hideMeetings}\n                    meetingsLoaded={this.state.meetingsLoaded}\n                    meetingSessions={this.state.meetingSessions}\n                    viewSessionDetails={this.viewSessionDetails}\n                    hideSessionDetails={this.hideSessionDetails}\n                    sessionDetailViewer={this.state.sessionDetailViewer}\n\n                    startEditSessionField={this.startEditSessionField}\n                    editingSessionField={this.state.editingSessionField}\n                    editSessionField={this.editSessionField}\n                    cancelEditSessionField={this.cancelEditSessionField}\n                    session={this.state.session}\n\n                    showSessionBooked={this.showSessionBooked}\n                    showSessionAttended={this.showSessionAttended}\n                    hideSessionBooked={this.hideSessionBooked}\n                    hideSessionAttended={this.hideSessionAttended}\n                    sessionBookedState={this.state.sessionBookedState}\n                    sessionAttendedState={this.state.sessionAttendedState}\n                    addSessionAttendance={this.addSessionAttendance}\n\n                    startCreateReview={this.startCreateReview}\n                    cancelCreateReview={this.cancelCreateReview}\n                    creatingReview={this.state.creatingReview}\n                    reviewLesson={this.state.reviewLesson}\n                    createReview={this.createReview}\n\n                    messageReplying={this.state.messageReplying}\n                    onStartReply={this.onStartReply}\n                    onCancelReply={this.onCancelReply}\n                    onReply={this.onReply}\n                    replyTo={this.state.replyTo}\n\n                    filter={this.state.filter}\n                    setFilter={this.setFilter}\n                  />\n                )}\n\n              </Col>\n            </Row>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport './UserItem.css';\n\nexport default function userItem (props) {\n  return (\n    <Router>\n    <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n      <Card style={{ width: '18rem' }}>\n\n      <Card.Body>\n        <Card.Text>\n          ID: {props._id}\n        </Card.Text>\n        <Card.Text>\n          username: {props.username}\n        </Card.Text>\n        <Card.Text>\n          role: {props.role}\n        </Card.Text>\n        <Link to={'users/'+props.user.username+''}>\n          <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n            Details\n          </Button>\n        </Link>\n\n          <Button variant=\"secondary\" onClick={props.onSelectNoDetail.bind(this, props.user)}>\n          Select\n        </Button>\n\n\n      </Card.Body>\n      </Card>\n\n    </li>\n    <Switch>\n      <Route path=\"users/:id\" children={<Child />} />\n    </Switch>\n    </Router>\n  )\n};\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    id\n  );\n}\n","import React from 'react';\n\nimport UserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst userList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <UserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default userList;\n","import React from 'react';\n\nimport SearchUserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst searchUserList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <SearchUserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default searchUserList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./AttachmentViewer.css\"\n\nconst AttachmentViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <h5 className=\"attachmentViewerTitle\">AttachmentViewer</h5>\n    <Button variant=\"danger\" className=\"attachmentViewerCloseButton\" onClick={props.onCloseAttachmentView}>\n      close\n    </Button>\n\n    <a href={props.attachmentFile}>\n    <Button variant=\"success\">\n      View the Attachment\n    </Button>\n    </a>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default AttachmentViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst MessageUserListForm = (props) => {\nconst {...receiver} = props.receiver;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <p>Recipient: {receiver.username}</p>\n</Form.Row>\n\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicTypeSelect\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type j</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridSubject\">\n    <Form.Label>Subject </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Subject\"/>\n  </Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMessage\">\n    <Form.Label>Message </Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Message\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default MessageUserListForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport MessageUserListForm from '../Forms/user/MessageUserListForm';\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst UserDetail = (props) => {\n\n  const {...user} = props.user;\n  const profileImages = user.profileImages;\n  const isFriend = props.myFriends.filter(x => x === user._id).length > 0;\n  console.log(props.myFriends,isFriend);\n  console.log('user.clientConnected',user.clientConnected,'user.loggedIn',user.loggedIn);\n  // const interests = user.interests;\n\n  // let userDob = new Date(user.dob.substr(0,9) * 1000).toLocaleDateString().slice(0,10);\n\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Demographics\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Demographics\" title=\"Demographics\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">User Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {profileImages.length !== 0 && (\n            <Card.Img variant=\"top\" src={profileImages[0].path} />\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Role:</span> {user.role}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn:</span> {user.loggedIn.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">online:</span> {user.clientConnected.toString()}\n          </Card.Text>\n          </Col>\n\n          <Col className=\"detailCardCol\">\n\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n\n        {isFriend === false && (\n        <Button variant=\"secondary\" onClick={props.onFriendRequest.bind(this, props.user)}>\n          RequsetFriend\n        </Button>\n        )}\n        {isFriend === true && (\n        <Button variant=\"info\" onClick={props.onStartSendMessage.bind(this, props.user)}>\n          Message\n        </Button>\n        )}\n\n        <Button variant=\"danger\" onClick={props.onHideUserDetail}>\n          x\n        </Button>\n          <Col className=\"detailCardCol\">\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, user._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, user._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n\n      {props.creatingMessage === true &&\n        props.messageReceiver !== null && (\n        <MessageUserListForm\n          receiver={props.messageReceiver}\n          onCancel={props.cancelMessage}\n          onConfirm={props.sendMessage}\n        />\n      )}\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default UserDetail;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport UserDetail from './Users/UserDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst UserDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n\n    <UserDetail\n      authId={props.authId}\n      user={props.user}\n      canReport={props.canReport}\n      onReport={props.onReport}\n      canDelete={props.canDelete}\n      onDelete={props.onDelete}\n      onFriendRequest={props.onFriendRequest}\n      onStartSendMessage={props.onStartSendMessage}\n      onHideUserDetail={props.onHideUserDetail}\n      creatingMessage={props.creatingMessage}\n      messageReceiver={props.messageReceiver}\n      cancelMessage={props.cancelMessage}\n      sendMessage={props.sendMessage}\n      myFriends={props.myFriends}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default UserDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserFieldBasicForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n\n  <Form.Row>\n  {\n    <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n    <Form.Label>Basic Field</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>public</option>\n    <option>loggedIn</option>\n    <option>clientConnected</option>\n    <option>dob</option>\n    <option>age</option>\n    <option>points</option>\n    <option>friends</option>\n    <option>bookedLessons.ref</option>\n    <option>likedLessons.ref</option>\n    <option>attendedLessons.ref</option>\n    </Form.Control>\n    <Form.Text className=\"text-muted\">\n    </Form.Text>\n    </Form.Group>\n}\n\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Basic Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserFieldBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserFieldRegexForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n\n  <Form.Row>\n  {\n    <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n    <Form.Label>Regex Field</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>_id</option>\n    <option>username</option>\n    <option>role</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>contact.email</option>\n    <option>socialMedia.platform</option>\n    <option>socialMedia.handle</option>\n    <option>tags</option>\n    <option>interests</option>\n    <option>bookedLessons.session.title</option>\n    </Form.Control>\n    <Form.Text className=\"text-muted\">\n    </Form.Text>\n    </Form.Group>\n}\n\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserFieldRegexForm;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport UserList from '../../components/Users/UserList/UserList';\nimport SearchUserList from '../../components/Users/UserList/SearchUserList';\n// import UserDetail from '../../components/Users/UserDetail';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport UserDetailViewer from '../../components/UserDetailViewer';\n\nimport SearchUserFieldBasicForm from '../../components/Forms/user/SearchUserFieldBasicForm';\nimport SearchUserFieldRegexForm from '../../components/Forms/user/SearchUserFieldRegexForm';\n\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    isSorting: false,\n    selectedUser: null,\n    detailsLoaded: false,\n    creatingMessage: false,\n    messageReceiver: null,\n    userUpdateField: null,\n    userSearchField: null,\n    userSearchQuery: null,\n    canDelete: null,\n    canReport: false,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    activityA: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...users component mounted...');\n    if (this.context.user.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedUser) !== \"{}\") {\n      this.setState({ selectedUser: this.context.selectedUser })\n    }\n\n    this.fetchUsersBasic();\n  }\n\n\n\n  modalConfirmSearchBasicHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,role,username,public,clientConnected}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByField).slice(0,8);\n        const searchUsers = resData.data.getUsersByField;\n        this.setState({ searchUsers: searchUsers, userAlert: responseAlert, activityA: requestBody})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchRegexHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,role,username,public,clientConnected}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByFieldRegex).slice(0,8);\n        const searchUsers = resData.data.getUsersByFieldRegex;\n        if (searchUsers === [] ) {\n          this.setState({ userAlert: '... nothing found soz...', activityA: requestBody})\n        } else {\n          this.setState({ searchUsers: searchUsers, userAlert: responseAlert, activityA: requestBody})\n        }\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchUsersBasic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching User Master List...\" });\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getAllUsers(\n            activityId:\"${activityId}\"\n          )\n          {_id,role,username,public,clientConnected,loggedIn}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getAllUsers).slice(0,8);\n        this.setState({userAlert: responseAlert, users: resData.data.getAllUsers, isLoading: false, activityA: requestBody});\n        this.context.users = this.state.users;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteListUser = (userId) => {\n    console.log(\"delete listed user\", userId);\n  }\n\n  reportUser = (userId) => {\n    console.log(\"reporting user\", userId);\n  }\n\n  startSendMessage = (args) => {\n    console.log(\"opening message form...\");\n    this.setState({creatingMessage: true, messageReceiver: {_id: args._id, username: args.username}})\n  }\n  cancelMessage = () => {\n    this.setState({creatingMessage: false})\n  }\n  sendMessage = (event) => {\n    event.preventDefault();\n    console.log(this.state.messageReceiver,event.target);\n    this.setState({creatingMessage: false, userAlert: \"sending message...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = this.state.messageReceiver._id;\n    const type = event.target.formBasicTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n\n    const requestBody = {\n      query: `\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n          {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(JSON.stringify(resData.data.createMessage));\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = userId => {\n  this.setState({ isLoading: true, userAlert: \"Fetching User Details...\", showDetail: true });\n  const activityId = this.context.activityId;\n\n  const requestBody = {\n    query: `\n        query {getUserById(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\"\n        )\n        {_id,role,username,public,clientConnected,loggedIn,age,bio,socialMedia{platform,handle,link},profileImages{name,type,path},interests,tags}}\n      `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        this.setState({userAlert: 'Failed!'});\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      const responseAlert = JSON.stringify(resData.data.getUserById).slice(0,8);\n      this.setState({userAlert: responseAlert, selectedUser: resData.data.getUserById, detailsLoaded:true, isLoading: false, activityA: requestBody});\n      this.context.selectedUser = this.state.selectedUser;\n      // this.logUserActivity();\n    })\n    .catch(err => {\n      this.setState({userAlert: err});\n      if (this.isActive) {\n        this.setState({ isLoading: false });\n      }\n    });\n};\n  selectUserNoDetail = (user) => {\n  this.setState({selectedUser: user});\n  this.context.selectedUser = user;\n}\n\nhideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n}\n\n\nonFriendRequest = (args) => {\n    console.log(\"sending friend request...\",args._id);\n    this.setState({ userAlert: \"sending friend request...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {sendFriendRequest(\n            activityId:\"${activityId}\",\n            senderId:\"${senderId}\",\n            receiverId:\"${receiverId}\"\n          )\n          {_id,role,username,public,clientConnected,friendRequests{date,sender{_id},receiver{_id}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(JSON.stringify(resData.data.sendFriendRequest.friendRequests));\n        const responseAlert = JSON.stringify(resData.data.sendFriendRequest).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n\n  }\n\nonViewAttachment = (attachment) => {\n\n      this.setState({showAttachment: true})\n\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  }\n\ncloseAttachmentView = () => {\n\n      this.setState({showAttachment: false})\n  }\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    // const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price,requirementsg}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true &&\n        this.state.detailsLoaded === true && (\n        <UserDetailViewer\n          user={this.state.selectedUser}\n          onHideUserDetail={this.hideDetailHandler}\n          canDelete={this.state.canDelete}\n          onDelete={this.deleteListUser}\n          canReport={this.state.canReport}\n          onReport={this.reportUser}\n          onFriendRequest={this.onFriendRequest}\n          onStartSendMessage={this.startSendMessage}\n          creatingMessage={this.state.creatingMessage}\n          messageReceiver={this.state.messageReceiver}\n          cancelMessage={this.cancelMessage}\n          sendMessage={this.sendMessage}\n          myFriends={this.context.user.friends.map(x => x._id)}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <UserList\n                            canReport={this.state.canReport}\n                            onReport={this.reportUser}\n                             users={this.state.users}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectUserNoDetail}\n\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchUserFieldRegexForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchRegexHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                          <SearchUserFieldBasicForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchBasicHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.userSearchField}  ,   Query: {this.state.userSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchUsers !== [] && (\n                          <SearchUserList\n                          canReport={this.state.canReport}\n                          onReport={this.reportUser}\n                           users={this.state.searchUsers}\n                           authId={this.context.activityId}\n                           onViewDetail={this.showDetailHandler}\n                           onSelectNoDetail={this.selectUserNoDetail}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useParams\n// } from \"react-router-dom\";\n\nimport './UserItem.css';\n\nexport default function lesssonItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        subtitle: {props.subtitle}\n      </Card.Text>\n      <Card.Text>\n        category: {props.category}\n      </Card.Text>\n      <Card.Text>\n        leadInstructorId: {props.instructors[0]._id}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n        Details\n      </Button>\n\n      {props.onSelectNoDetail && (\n      <Button variant=\"primary\" onClick={props.onSelectNoDetail.bind(this, props.lesson)}>\n        Select\n      </Button>\n      )}\n      {props.canReport === true && (\n        <Button variant=\"danger\" onClick={props.onReport.bind(this, props._id)}>\n        Report\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport LessonItem from './LessonItem/LessonItem';\nimport './UserList.css';\n\nconst lessonList = props => {\n\n  const lessons = props.lessons.map(lesson => {\n    return (\n      <LessonItem\n        key={lesson._id}\n        lesson={lesson}\n        authId={props.authId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        puplic={props.public}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{lessons}</ul>;\n};\n\nexport default lessonList;\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport './UserItem.css';\n\nconst searchLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_master\">\n    <div>\n      <p className=\"userItemHeading\"> ID:</p>\n      <p className=\"userItemText\">\n        {props._id}\n      </p>\n      <p className=\"userItemHeading\"> Title:</p>\n      <p className=\"userItemText\">\n        {props.title}\n      </p>\n      <p className=\"userItemHeading\"> Category:</p>\n      <p className=\"userItemText\">\n        {props.category}\n      </p>\n    </div>\n    <div>\n    <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n          Details\n        </Button>\n        {props.onSelectNoDetail && (<Button variant=\"primary\" onClick={props.onSelectNoDetail.bind(this, props.lesson)}>\n          Select\n        </Button>)}\n    </div>\n  </li>\n);\n\nexport default searchLessonItem;\n","import React from 'react';\n// import Accordion from 'react-bootstrap/Accordion';\n// import Button from 'react-bootstrap/Button';\n\nimport SearchLessonItem from './LessonItem/SearchLessonItem';\nimport './UserList.css';\n\nconst searchLessonList = props => {\n\n  const searchLessons = props.lessons.map(lesson => {\n    return (\n      <React.Fragment>\n      <SearchLessonItem\n        key={lesson._id}\n        lesson={lesson}\n        userId={props.authUserId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onDetail={props.onViewDetail}\n        onSelectNoDetail={props.onSelectNoDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n      />\n      </React.Fragment>\n    );\n  });\n  return <ul className=\"user__list1_master\">{searchLessons}</ul>;\n};\n\nexport default searchLessonList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function searchSession (props) {\n  console.log('boop', props.session);\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n    <p>here</p>\n    <Card.Body>\n      <Card.Title>{props.session.title}</Card.Title>\n      <Card.Text>\n        date: {props.session.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.session.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './LessonList/LessonSessionList';\nimport LessonScheduleList from './LessonList/LessonScheduleList';\nimport LessonInstructorList from './LessonList/LessonInstructorList';\nimport LessonRequirementList from './LessonList/LessonRequirementList';\nimport LessonMaterialList from './LessonList/LessonMaterialList';\nimport LessonTagList from './LessonList/LessonTagList';\nimport LessonImageList from './LessonList/LessonImageList';\nimport LessonFileList from './LessonList/LessonFileList';\nimport LessonReviewList from './LessonList/LessonReviewList';\nimport CreateLessonSessionForm from '../Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from '../Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from '../Forms/lesson/UpdateLessonFieldForm';\n\nimport AddLessonRequirementsForm from '../Forms/lesson/AddLessonRequirementsForm';\nimport AddLessonMaterialsForm from '../Forms/lesson/AddLessonMaterialsForm';\nimport AddLessonTagsForm from '../Forms/lesson/AddLessonTagsForm';\nimport AddLessonImageForm from '../Forms/lesson/AddLessonImageForm';\nimport AddLessonFileForm from '../Forms/lesson/AddLessonFileForm';\nimport AddLessonInstructorForm from '../Forms/lesson/AddLessonInstructorForm';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst LessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  const {...user} = props.user;\n\n  let userLikedLessons = [];\n  let hasLiked = false;\n  if (user.likedLessons !== []) {\n    userLikedLessons = user.likedLessons.map(x => x._id);\n    hasLiked = userLikedLessons.includes(lesson._id.toString());\n  }\n\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  let canDelete = false;\n  if (isInstructor === true ) {\n    canDelete = true\n  }\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {isInstructor === true &&(\n            <Card.Text>\n            Your lesson\n            </Card.Text>\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Sku:</span> {lesson.sku}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n          </Card.Text>\n\n          <Card.Text>\n          ID: {lesson.instructors[0]._id}\n          </Card.Text>\n          <Card.Text>\n          Username: {lesson.instructors[0].username}\n          </Card.Text>\n          <Card.Text>\n            Contact\n          </Card.Text>\n          <Card.Text>\n            Email: {lesson.instructors[0].contact.email}\n          </Card.Text>\n\n          </Col>\n\n        </Row>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Schedule\n          </Card.Text>\n          <Button variant=\"danger\" onClick={props.toggleSchedule}>\n            show/hide\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n\n            {hasLiked !== true && (\n            <Button variant=\"danger\" onClick={props.onLikeLesson.bind(this, lesson._id)}>\n              Like\n            </Button>\n            )}\n\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, lesson._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, lesson._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n          </Row>\n\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"sessions\" title=\"sessions\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n      <Row className=\"detailCardRow\">\n\n        <Col className=\"detailCardCol\">\n        <Card.Text>\n        Sessions:\n        </Card.Text>\n        <Button variant=\"primary\" onClick={props.onSessionLoad.bind(this, lesson._id)}>\n          See Sessions\n        </Button>\n        <Button variant=\"danger\" onClick={props.onHideSessions}>\n          x\n        </Button>\n        {props.sessionsLoaded === true && (\n          <LessonSessionList\n          isInstructor={isInstructor}\n          lessonSessions={lesson.sessions}\n          onBookSession={props.onBookSession}\n          onAddCartLesson={props.onAddCartLesson}\n          showSessionBooked={props.showSessionBooked}\n          showSessionAttended={props.showSessionAttended}\n          hideSessionBooked={props.hideSessionBooked}\n          hideSessionAttended={props.hideSessionAttended}\n          sessionBookedState={props.sessionBookedState}\n          sessionAttendedState={props.sessionAttendedState}\n\n        />\n      )}\n\n          {isInstructor === true && (\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          )}\n          {props.creatingSession === true &&\n            isInstructor === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"materials/requirements\" title=\"materials/requirements\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Requirements\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleRequirements}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'requirements')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'requirements' && (\n              <AddLessonRequirementsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonRequirements}\n              />\n            )}\n            {props.showRequirementsState === true && (\n              <LessonRequirementList\n                lessonRequirements={lesson.requirements}\n                canDelete\n                onDelete={props.deleteLessonRequirement}\n              />\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Materials\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleMaterials}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'materials')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'materials' && (\n              <AddLessonMaterialsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonMaterials}\n              />\n            )}\n            {props.showMaterialsState === true && (\n              <LessonMaterialList\n                lessonMaterials={lesson.materials}\n                canDelete\n                onDelete={props.deleteLessonMaterial}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n\n      <Tab eventKey=\"images\" title=\"images\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Images\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleImages}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'images')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'images' && (\n              <AddLessonImageForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonImage}\n              />\n            )}\n            {props.showImagesState === true && (\n              <LessonImageList\n                lessonImages={lesson.gallery}\n                canDelete\n                onDelete={props.deleteLessonImage}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"files\" title=\"files\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Files\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleFiles}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'files')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'files' && (\n              <AddLessonFileForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonFile}\n              />\n            )}\n            {props.showFilesState === true && (\n              <LessonFileList\n                lessonFiles={lesson.files}\n                canDelete\n                onDelete={props.deleteLessonFile}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n\n      <Tab eventKey=\"instructors\" title=\"instructors\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Instructors\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleInstructors}>\n              Show/Hide\n            </Button>\n            {isInstructor === true &&\n              JSON.stringify(props.selectedInstructor) === \"{}\" && (\n            <Button variant=\"warning\">\n              Select an Instructor to Add\n            </Button>\n            )}\n            {isInstructor === true &&\n              JSON.stringify(props.selectedInstructor) !== \"{}\" && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'instructors')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'instructors' &&  (\n              <AddLessonInstructorForm\n              selectedInstructor={props.selectedInstructor}\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonInstructor}\n              />\n            )}\n            {props.showInstructorsState === true && (\n              <LessonInstructorList\n              canDelete\n              onDelete={props.deleteLessonInstructor}\n                lessonInstructors={lesson.instructors}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"tags\" title=\"tags\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n      <Row>\n        <Col>\n        <Card.Text>\n        Tags\n        </Card.Text>\n          <Button variant=\"danger\" onClick={props.toggleTags}>\n            Show/Hide\n          </Button>\n          {isInstructor === true && (\n          <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'tags')}>\n            Add\n          </Button>\n          )}\n          {props.lessonAddField === 'tags' && (\n            <AddLessonTagsForm\n            authId={props.authId}\n            onCancel={props.cancelLessonAdd}\n            onConfirm={props.addLessonTags}\n            />\n          )}\n          {props.showTagsState === true && (\n            <LessonTagList\n              lessonTags={lesson.tags}\n              canDelete\n              onDelete={props.deleteLessonTag}\n            />\n          )}\n        </Col>\n      </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"reviews\" title=\"reviews\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Reviews\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleReviews}>\n              Show/Hide\n            </Button>\n            {props.showReviewsState === true && (\n              <LessonReviewList\n                lessonReviews={lesson.reviews}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"edit\" title=\"edit\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n          {isInstructor === true && (\n              <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n              <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n                Edit Basic\n              </Button>\n                {props.editingLesson === true && (\n                  <UpdateLessonBasicForm\n                  lesson={lesson}\n                  onCancel={props.cancelEditBasic}\n                  onConfirm={props.editLessonBasic}\n                  />\n                )}\n              </Col>\n\n            </Row>\n          )}\n\n            {isInstructor === true && (\n              <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n              <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n                Edit Field\n              </Button>\n                {props.editingLessonField === true && (\n                  <UpdateLessonFieldForm\n                  lesson={lesson}\n                  onCancel={props.cancelEditField}\n                  onConfirm={props.editLessonField}\n                  />\n                )}\n              </Col>\n\n            </Row>\n          )}\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default LessonDetail;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport LessonDetail from './Lessons/LessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst LessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <LessonDetail\n      authId={props.authId}\n      user={props.user}\n      lesson={props.lesson}\n\n      sessionsLoaded={props.sessionsLoaded}\n      onSessionLoad={props.onSessionLoad}\n      onHideSessions={props.onHideSessions}\n      onBookSession={props.onBookSession}\n\n      onAddCartLesson={props.onAddCartLesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n\n      startCreateSession={props.startCreateSession}\n      creatingSession={props.creatingSession}\n      cancelCreateSession={props.cancelCreateSession}\n      createLessonSession={props.createLessonSession}\n\n      onStartEditLessonBasic={props.onStartEditLessonBasic}\n      onStartEditLessonField={props.onStartEditLessonField}\n      editingLesson={props.editingLesson}\n      editingLessonField={props.editingLessonField}\n      cancelEditBasic={props.cancelEditBasic}\n      editLessonBasic={props.editLessonBasic}\n      cancelEditField={props.cancelEditField}\n      editLessonField={props.editLessonField}\n\n      toggleSchedule={props.toggleSchedule}\n      showScheduleState={props.showScheduleState}\n\n      showSessionBooked={props.showSessionBooked}\n      showSessionAttended={props.showSessionAttended}\n      hideSessionBooked={props.hideSessionBooked}\n      hideSessionAttended={props.hideSessionAttended}\n      sessionBookedState={props.sessionBookedState}\n      sessionAttendedState={props.sessionAttendedState}\n      addSessionAttendance={props.addSessionAttendance}\n\n      toggleInstructors={props.toggleInstructors}\n      showInstructorsState={props.showInstructorsState}\n      toggleRequirements={props.toggleRequirements}\n      showRequirementsState={props.showRequirementsState}\n      toggleMaterials={props.toggleMaterials}\n      showMaterialsState={props.showMaterialsState}\n      toggleReviews={props.toggleReviews}\n      showReviewsState={props.showReviewsState}\n      toggleTags={props.toggleTags}\n      showTagsState={props.showTagsState}\n      toggleImages={props.toggleImages}\n      showImagesState={props.showImagesState}\n      toggleFiles={props.toggleFiles}\n      showFilesState={props.showFilesState}\n\n      lessonAddField={props.lessonAddField}\n      startLessonAdd={props.startLessonAdd}\n      cancelLessonAdd={props.cancelLessonAdd}\n      selectedInstructor={props.selectedInstructor}\n      addLessonInstructor={props.addLessonInstructor}\n      addLessonMaterials={props.addLessonMaterials}\n      addLessonTags={props.addLessonTags}\n      addLessonRequirements={props.addLessonRequirements}\n      addLessonImage={props.addLessonImage}\n      addLessonFile={props.addLessonFile}\n\n      onLikeLesson={props.onLikeLesson}\n      deleteLessonTag={props.deleteLessonTag}\n      deleteLessonRequirement={props.deleteLessonRequirement}\n      deleteLessonMaterial={props.deleteLessonMaterial}\n      deleteLessonImage={props.deleteLessonImage}\n      deleteLessonFile={props.deleteLessonFile}\n      deleteLessonInstructor={props.deleteLessonInstructor}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LessonDetailViewer;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst CreateLessonForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Subtitle\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Duration\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Sku\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder=\"Price\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"Points\" />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Description\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder=\"Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonFieldRegexForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Regex Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>title</option>\n  <option>subtitle</option>\n  <option>type</option>\n  <option>category</option>\n  <option>sku</option>\n  <option>description</option>\n  <option>notes</option>\n  <option>duration</option>\n  <option>requirements</option>\n  <option>tags</option>\n  <option>materials</option>\n  <option>files.name</option>\n  <option>sessions.title</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonFieldRegexForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonFieldBasicForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Basic Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>price</option>\n  <option>points</option>\n  <option>schedule.date</option>\n  <option>schedule.time</option>\n  <option>instructors</option>\n  <option>attendees</option>\n  <option>sessions.booked</option>\n  <option>sessions.attended</option>\n  <option>sessions.bookedAmount</option>\n  <option>sessions.attendedAmount</option>\n  <option>sessions.date</option>\n  <option>sessions.full</option>\n  <option>sessions.inProgress</option>\n  <option>sessions.limit</option>\n  <option>sessions.amount</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Basic Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonFieldBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonSessionForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Label>Lesson: {props.lesson._id}</Form.Label>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridSessionDate\">\n  <Form.Label>SessionDate</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"SessionDate\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridSessionTitle\">\n  <Form.Label>SessionTitle</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"SessionTitle\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonSessionForm;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\n// import LessonDetail from '../../components/Lessons/LessonDetail';\nimport SearchSession from '../../components/Lessons/LessonList/LessonItem/SearchSession';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport LessonDetailViewer from '../../components/LessonDetailViewer';\n\nimport CreateLessonForm from '../../components/Forms/lesson/CreateLessonForm';\nimport SearchLessonFieldRegexForm from '../../components/Forms/lesson/SearchLessonFieldRegexForm';\nimport SearchLessonFieldBasicForm from '../../components/Forms/lesson/SearchLessonFieldBasicForm';\nimport SearchLessonSessionForm from '../../components/Forms/lesson/SearchLessonSessionForm';\n\n\nimport './Users.css';\n\nclass LessonsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    searchSession: null,\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonUpdateField: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    sessionsLoaded: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    showScheduleState: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    sessionBookedState: false,\n    sessionAttendedState: false,\n    activityA: null,\n    showInstructorsState: false,\n    showRequirementsState: false,\n    showMaterialsState: false,\n    showTagsState: false,\n    showFilesState: false,\n    showImagesState: false,\n    showReviewsState: false,\n    lessonAddField: null,\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...lesson profile component mounted...');\n    if (this.context.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedLesson) !== '{}') {\n      this.setState({ selectedLesson: this.context.selectedLesson })\n    }\n\n    this.fetchLessonsBasic();\n  }\n\n  modalConfirmSearchRegexHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getLessonsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\")\n          {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},attendees{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonsByFieldRegex).slice(0,8);\n        const searchLessons = resData.data.getLessonsByFieldRegex;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchBasicHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getLessonsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\")\n          {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},attendees{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonsByField).slice(0,8);\n        const searchLessons = resData.data.getLessonsByField;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchSessionHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionDate = event.target.formGridSessionDate.value;\n    const sessionTitle = event.target.formGridSessionTitle.value;\n\n    const requestBody = {\n      query: `\n        query {getLessonSession(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\"\n          })\n          {title,date,time,limit,amount,bookedAmount,booked{_id,username},attendedAmount,attended{_id,username},inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonSession).slice(0,8);\n        const searchSession = resData.data.getLessonSession;\n        // console.log('baap',resData,searchSession);\n        this.setState({ searchSession: searchSession, userAlert: responseAlert, activityId: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startCreateLesson = () => {\n    this.setState({creating: true})\n  }\n  createLessonHandler = (event) => {\n    this.setState({creating: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const duration = event.target.formGridDuration.value;\n\n    const requestBody = {\n      query: `\n        mutation {createLesson(\n          activityId:\"${activityId}\",\n          creatorId:\"${creatorId}\",\n          lessonInput:{\n            title:\"${title}\",\n            subtitle:\"${subtitle}\",\n            type:\"${type}\",\n            category:\"${category}\",\n            price:${price},\n            points:${points},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            duration:\"${duration}\",\n            sku:\"${sku}\"\n          })\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.createLesson).slice(0,8);\n        this.setState({ lesson: resData.data.createLesson, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  }\n  onStartEditLessonField = () => {\n    this.setState({editingLessonField: true})\n  }\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  }\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  }\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    this.setState({editingLesson: false})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonBasic, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  editLessonField = (event) => {\n    event.preventDefault();\n    this.setState({editingLessonField: false})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonByField, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchLessonsBasic() {\n    const activityId = this.context.activityId;\n    this.setState({ isLoading: true, userAlert: \"Fetching Lesson Master List...\" });\n    const requestBody = {\n      query: `\n        query {getAllLessons(activityId:\"${activityId}\")\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllLessons, isLoading: false, activityId: requestBody});\n        this.context.lessons = this.state.lessons;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  loadSessions = (args) => {\n    console.log('retriving sessions for this lesson');\n    this.setState({userAlert: 'retriving sessions for this lesson'})\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requestBody = {\n      query: `\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.getLessonById, isLoading: false, sessionsLoaded: true, activityId: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  };\n  hideSessions = () => {\n    this.setState({sessionsLoaded: false})\n  };\n  addCartLesson = (args) => {\n    console.log('adding lesson to cart');\n    this.setState({userAlert: 'adding lesson to cart'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n    const requestBody = {\n      query: `\n            mutation {addUserCartLesson(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              lessonId:\"${lessonId}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTitle:\"${sessionTitle}\"\n            )\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n        // console.log(JSON.stringify(requestBody));\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, isLoading: false, activityA: requestBody});\n        this.context.selectedUser = resData.data.addUserCartLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  bookSession = (args) => {\n    console.log('booking lesson session');\n    this.setState({userAlert: 'booking lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    // const sessionDate = args.date;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n    const sessionTime = args.time;\n\n    const requestBody = {\n      query: `\n            mutation {addLessonBooking(\n              activityId:\"${activityId}\",\n              lessonId:\"${lessonId}\",\n              userId:\"${userId}\",\n              lessonInput:{\n                sessionTitle:\"${sessionTitle}\",\n                sessionDate:\"${sessionDate}\",\n                sessionTime:\"${sessionTime}\"\n              })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id},bookedAmount,attended{_id},attendedAmount,inProgress,full},promos{_id}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        let responseAlert = null;\n        if (resData.errors) {\n          responseAlert = resData.errors[0].message;\n          // console.log(responseAlert);\n          this.setState({userAlert: responseAlert})\n        }\n        if (resData.data.addLessonBooking !== null) {\n          responseAlert = JSON.stringify(resData.data).slice(0,8);\n          this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonBooking, isLoading: false, activityA: requestBody});\n          this.context.selectedLesson = this.state.selectedLesson;\n        }\n\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    event.preventDefault();\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    // const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toISOString().slice(0,10);\n    // sessionDate = new Date(sessionDate).toLocaleDateString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n    // console.log(sessionDate);\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonSession, isLoading: false, creatingSession: false, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  showSessionBooked = () => {\n    this.setState({sessionBookedState: true})\n  }\n  hideSessionBooked = () => {\n    this.setState({sessionBookedState: false})\n  }\n  hideSessionAttended = () => {\n    this.setState({sessionAttendedState: false})\n  }\n\n  deleteListLesson = (lessonId) => {\n    console.log(\"delete listed lesson\", lessonId);\n  };\n  reportLesson = (lessonId) => {\n    console.log(\"reporting lesson\", lessonId);\n  };\n\n  showDetailHandler = lessonId => {\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  selectLessonNoDetail = (lesson) => {\n    this.setState({selectedLesson: lesson});\n    this.context.selectedLesson = lesson;\n  };\n\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n  onViewAttachment = (attachment) => {\n      this.setState({showAttachment: true})\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  };\n  closeAttachmentView = () => {\n      this.setState({showAttachment: false})\n  };\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    // const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price,requirementsg}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  toggleInstructors = () => {\n    if (this.state.showInstructorsState === false) {\n      this.setState({showInstructorsState: true})\n    } else {\n      this.setState({showInstructorsState: false})\n    }\n  }\n  toggleSchedule = () => {\n    if (this.state.showScheduleState === false) {\n      this.setState({showScheduleState: true})\n    } else {\n      this.setState({showScheduleState: false})\n    }\n  }\n  toggleRequirements = () => {\n    if (this.state.showRequirementsState === false) {\n      this.setState({showRequirementsState: true})\n    } else {\n      this.setState({showRequirementsState: false})\n    }\n  }\n  toggleMaterials = () => {\n    if (this.state.showMaterialsState === false) {\n      this.setState({showMaterialsState: true})\n    } else {\n      this.setState({showMaterialsState: false})\n    }\n  }\n  toggleTags = () => {\n    if (this.state.showTagsState === false) {\n      this.setState({showTagsState: true})\n    } else {\n      this.setState({showTagsState: false})\n    }\n  }\n  toggleImages = () => {\n    if (this.state.showImagesState === false) {\n      this.setState({showImagesState: true})\n    } else {\n      this.setState({showImagesState: false})\n    }\n  }\n  toggleFiles = () => {\n    if (this.state.showFilesState === false) {\n      this.setState({showFilesState: true})\n    } else {\n      this.setState({showFilesState: false})\n    }\n  }\n  toggleReviews = () => {\n    if (this.state.showReviewsState === false) {\n      this.setState({showReviewsState: true})\n    } else {\n      this.setState({showReviewsState: false})\n    }\n  }\n\n  startLessonAdd = (args) => {\n    // console.log(args);\n    this.setState({lessonAddField: args})\n  }\n  cancelLessonAdd = (args) => {\n    this.setState({lessonAddField: null})\n  }\n\n  addLessonMaterials = (event) => {\n    event.preventDefault();\n    this.setState({userAlert: '...adding lesson materials...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const materials = event.target.formGridMaterials.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonMaterials(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              materials: \"${materials}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonMaterials, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonTags = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson tags...');\n    this.setState({userAlert: '...adding lesson tags...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonTags(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tags: \"${tags}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonTags, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonRequirements = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson requirements ...');\n    this.setState({userAlert: '...adding lesson requirements ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requirements = event.target.formGridRequirements.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonRequirements(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirements: \"${requirements}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonRequirements, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonImage = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Images ...');\n    this.setState({userAlert: '...adding lesson Images ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const imageName = event.target.formGridImagename.value;\n    const imageType = event.target.formGridImagetype.value;\n    const imagePath = event.target.formGridImagepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\"\n              imageType: \"${imageType}\"\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonImage, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonFile = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson Files ...');\n    this.setState({userAlert: '...adding lesson Files ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const fileName = event.target.formGridFilename.value;\n    const fileType = event.target.formGridFilesize.value;\n    const fileSize = event.target.formGridFiletype.value;\n    const filePath = event.target.formGridFilepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\"\n              fileType: \"${fileType}\"\n              fileSize: \"${fileSize}\"\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonFile, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonInstructor = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson instructor ...');\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const instructorId = this.context.selectedUser._id;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\"\n            instructorId: \"${instructorId}\")\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonInstructor, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n  likeLesson = (args) => {\n    // console.log('...adding lesson like...',args);\n    this.setState({userAlert: '...adding lesson like...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requestBody = {\n      query: `\n          mutation {addUserLikedLesson(\n            activityId:\"${activityId}\",\n            userId: \"${userId}\",\n            lessonId:\"${lessonId}\",)\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.context.user = resData.data.addUserLikedLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteLessonTag = (args) => {\n    console.log('...deleting lesson tag...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const tag = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonTag(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tag:\"${tag}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.deleteLessonTag);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonTag, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonRequirement = (args) => {\n    console.log('...deleting lesson requirement...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requirement = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonRequirement(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirement:\"${requirement}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonRequirement, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonMaterial = (args) => {\n    console.log('...deleting lesson material...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const material = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonMaterial(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              material:\"${material}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonMaterial, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonImage = (args) => {\n    console.log('...deleting lesson image...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const imageName = args.name;\n    const imageType = args.type;\n    const imagePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\",\n              imageType: \"${imageType}\",\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonImage, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonFile = (args) => {\n    console.log('...deleting lesson file...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const fileName = args.name;\n    const fileType = args.type;\n    const fileSize = args.size;\n    const filePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\",\n              fileType: \"${fileType}\",\n              fileSize: \"${fileSize}\",\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonFile, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonInstructor = (args) => {\n    console.log('...deleting lesson instructor...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const instructorId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            instructorId: \"${instructorId}\"\n          )\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonInstructor, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true && (\n        <LessonDetailViewer\n          authId={this.context.activityId}\n          user={this.context.user}\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n\n          sessionsLoaded={this.state.sessionsLoaded}\n          onSessionLoad={this.loadSessions}\n          onHideSessions={this.hideSessions}\n          onBookSession={this.bookSession}\n\n          onAddCartLesson={this.addCartLesson}\n\n          startCreateSession={this.startCreateSession}\n          creatingSession={this.state.creatingSession}\n          cancelCreateSession={this.cancelCreateSession}\n          createLessonSession={this.createLessonSession}\n\n          onStartEditLessonBasic={this.onStartEditLessonBasic}\n          onStartEditLessonField={this.onStartEditLessonField}\n          editingLesson={this.state.editingLesson}\n          editingLessonField={this.state.editingLessonField}\n          cancelEditBasic={this.cancelEditBasic}\n          cancelEditField={this.cancelEditField}\n          editLessonBasic={this.editLessonBasic}\n          editLessonField={this.editLessonField}\n\n          showScheduleState={this.state.showScheduleState}\n          toggleSchedule={this.toggleSchedule}\n\n          showSessionBooked={this.showSessionBooked}\n          showSessionAttended={this.showSessionAttended}\n          hideSessionBooked={this.hideSessionBooked}\n          hideSessionAttended={this.hideSessionAttended}\n          sessionBookedState={this.state.sessionBookedState}\n          sessionAttendedState={this.state.sessionAttendedState}\n\n          toggleInstructors={this.toggleInstructors}\n          showInstructorsState={this.state.showInstructorsState}\n          toggleRequirements={this.toggleRequirements}\n          showRequirementsState={this.state.showRequirementsState}\n          toggleMaterials={this.toggleMaterials}\n          showMaterialsState={this.state.showMaterialsState}\n          toggleReviews={this.toggleReviews}\n          showReviewsState={this.state.showReviewsState}\n\n          toggleTags={this.toggleTags}\n          showTagsState={this.state.showTagsState}\n          toggleImages={this.toggleImages}\n          showImagesState={this.state.showImagesState}\n          toggleFiles={this.toggleFiles}\n          showFilesState={this.state.showFilesState}\n\n          startLessonAdd={this.startLessonAdd}\n          cancelLessonAdd={this.cancelLessonAdd}\n          lessonAddField={this.state.lessonAddField}\n          addLessonMaterials={this.addLessonMaterials}\n          addLessonRequirements={this.addLessonRequirements}\n          addLessonTags={this.addLessonTags}\n          addLessonImage={this.addLessonImage}\n          addLessonFile={this.addLessonFile}\n          selectedInstructor={this.context.selectedUser}\n          addLessonInstructor={this.addLessonInstructor}\n\n          onLikeLesson={this.likeLesson}\n          deleteLessonTag={this.deleteLessonTag}\n          deleteLessonRequirement={this.deleteLessonRequirement}\n          deleteLessonMaterial={this.deleteLessonMaterial}\n          deleteLessonImage={this.deleteLessonImage}\n          deleteLessonFile={this.deleteLessonFile}\n          deleteLessonInstructor={this.deleteLessonInstructor}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"Create\">+ Lesson</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      {this.state.lessons !== [] && (\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n                      )}\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchLessonFieldRegexForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchRegexHandler}\n                            confirmText=\"Search\"\n                          />\n                          <SearchLessonFieldBasicForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchBasicHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n\n                        <Tab eventKey=\"Session\" title=\"Search Session\">\n\n                          {this.state.selectedLesson === null && (\n                            <p>Select a lesson 1st</p>\n                          )}\n\n                          {this.state.selectedLesson !== null && (\n                            <SearchLessonSessionForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchSessionHandler}\n                            lesson={this.state.selectedLesson}\n                            confirmText=\"Search\"\n                          />)}\n\n                          {this.state.searchSession !== null && (\n                            <SearchSession\n                            authId={this.context.activityId}\n                            session={this.state.searchSession}\n                            />\n                          )}\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}  ,   Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            lessons={this.state.searchLessons}\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"Create\">\n                        <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startCreateLesson}>+ Lesson</Button>\n\n                        <Row className=\"userListRow\">\n                          {this.state.creating === true && (\n                            <CreateLessonForm\n                              authId={this.context.activityId}\n                              creator={this.context.user}\n                              canCancel\n                                canConfirm\n                                onCancel={this.modalCancelHandler}\n                                onConfirm={this.createLessonHandler}\n                            />\n                          )}\n                        </Row>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default LessonsPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonScheduleList from './LessonList/LessonScheduleList';\nimport LessonRequirementList from './LessonList/LessonRequirementList';\nimport LessonImageList from './LessonList/LessonImageList';\nimport LessonReviewList from './LessonList/LessonReviewList';\nimport LessonTagList from './LessonList/LessonTagList';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst PublicLessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n            {lesson.instructors[0]._id}\n            {lesson.instructors[0].username}\n          </Card.Text>\n\n          <Button variant=\"danger\" onClick={props.showSchedule}>\n            See dates\n          </Button>\n          <Button variant=\"danger\" onClick={props.hideSchedule}>\n            Hide dates\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n\n          </Col>\n\n        </Row>\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n          </Col>\n          </Row>\n\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"requirements\" title=\"requirements\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Requirements\n          </Card.Text>\n              <LessonRequirementList\n                public\n                lessonRequirements={lesson.requirements}\n              />\n          </Col>\n        </Row>\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"images\" title=\"images\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Images\n          </Card.Text>\n              <LessonImageList\n                public\n                lessonImages={lesson.gallery}\n              />\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"reviews\" title=\"reviews\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Reviews\n          </Card.Text>\n              <LessonReviewList\n                lessonReviews={lesson.reviews}\n              />\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"tags\" title=\"tags\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n      <Row>\n        <Col>\n        <Card.Text>\n        Tags\n        </Card.Text>\n\n            <LessonTagList\n              public\n              lessonTags={lesson.tags}\n            />\n        </Col>\n      </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default PublicLessonDetail;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport PublicLessonDetail from './Lessons/PublicLessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst PublicLessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <PublicLessonDetail\n      lesson={props.lesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n      showSchedule={props.showSchedule}\n      showScheduleState={props.showScheduleState}\n      hideSchedule={props.hideSchedule}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default PublicLessonDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchPublicLessonForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Regex Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>title</option>\n  <option>type</option>\n  <option>category</option>\n  <option>description</option>\n  <option>duration</option>\n  <option>tags</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchPublicLessonForm;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\n// import SearchSession from '../../components/Lessons/LessonList/LessonItem/SearchSession';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport PublicLessonDetailViewer from '../../components/PublicLessonDetailViewer';\n\nimport SearchPublicLessonForm from '../../components/Forms/lesson/SearchPublicLessonForm';\n\nimport './Users.css';\n\nclass PublicLessonsPage extends Component {\n  state = {\n    searching: false,\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    searchSession: null,\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    showSchedule: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    guestId: '5eGe76Ed7e3Ue422aSb2T60b',\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...public lessons component mounted...');\n    this.fetchLessonsPublic();\n  }\n\n  modalConfirmPublicSearchHandler = (event) => {\n    event.preventDefault();\n    // const token = this.context.token;\n    let field = event.target.formBasicFieldSelect.value;\n    let query = event.target.formBasicQuery.value;\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getPublicLessonsByField(\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,subtitle,type,category,price,points,description,duration,schedule{date,time},gallery{name,type,path},instructors{_id,username},tags}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getPublicLessonsByField).slice(0,8);\n        const searchLessons = resData.data.getPublicLessonsByField;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ searching: false, selectedLesson: null});\n  };\n\n  fetchLessonsPublic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching Public Lesson Master List...\" });\n    const requestBody = {\n      query: `\n          query {getAllPublicLessons\n            {_id,title,subtitle,type,category,price,points,description,duration,requirements,schedule{date,time},gallery{name,type,path},instructors{_id,username},tags,reviews{date,type,title,author{_id,username},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllPublicLessons, isLoading: false});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showSchedule = () => {\n    this.setState({showSchedule: true})\n  };\n  hideSchedule = () => {\n    this.setState({showSchedule: false})\n  };\n\n  showDetailHandler = lessonId => {\n    console.log('beep',lessonId);\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    // this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing lesson search results\"});\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.guestId}\n      />\n      {this.state.showDetail === true && (\n        <PublicLessonDetailViewer\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n          showScheduleState={this.state.showSchedule}\n          showSchedule={this.showSchedule}\n          hideSchedule={this.hideSchedule}\n        />\n      )}\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n            <h1>Visitor lesson list</h1>\n\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"FeaturedList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"FeaturedList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                           public\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             onViewDetail={this.showDetailHandler}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchPublicLessonForm\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmPublicSearchHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}, Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            lessons={this.state.searchLessons}\n                            onViewDetail={this.showDetailHandler}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default PublicLessonsPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridUserId\">\n    <Form.Control type=\"text\" value={props.userId}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Reset\n  </Button>\n\n</Form.Row>\n\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ResetPasswordForm from '../../components/Forms/user/ResetPasswordForm'\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport \"./AttachmentViewer.css\"\n\nconst PasswordReset = (props) => {\n  let {user} = useParams();\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n\n    <Row className=\"loginPageContainerRow2\">\n    <Col className=\"loginPageContainerCol2\">\n      <h1>Password Reset</h1>\n\n      {props.resetState === 'complete' && (\n        <p>Success...Password reset...</p>\n      )}\n\n      {props.resetState === 'complete' && (\n        <NavLink to=\"/auth\">\n        <Button variant=\"secondary\">\n          Login\n        </Button>\n        </NavLink>\n      )}\n\n      {props.resetState === 'incomplete' && (\n      <ResetPasswordForm\n        userId={user}\n        onConfirm={props.passwordReset}\n      />\n      )}\n\n    </Col>\n    </Row>\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default PasswordReset;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../context/auth-context';\nimport AlertBox from '../components/AlertBox';\nimport LoadingOverlay from '../components/LoadingOverlay';\nimport './Landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\ncomponentDidMount () {\n  // console.log(AuthContext._currentValue.activityId ,AuthContext._currentValue.activityId === null,AuthContext._currentValue.token === null);\n  if (AuthContext._currentValue.activityId !== null && AuthContext._currentValue.token !== null ) {\n    this.setState({isGuest: false})\n    // console.log(this.state);\n  }\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"loginPageContainer\">\n\n      <Row className=\"loginPageContainerRow2\">\n      <Col className=\"loginPageContainerCol2\">\n        <h1> Welcome to Couch Coach</h1>\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n        <p>About Coach Coach</p>\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n        <p>Featured Lessons go here??</p>\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n\n          {this.state.isGuest === true && (\n            <NavLink to=\"/login\">Login</NavLink>\n          )}\n          {this.state.isGuest === true && (\n            <NavLink to=\"/signup\">Signup</NavLink>\n          )}\n\n      </Col>\n      </Row>\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>My Couch Coach 0.0.1</h1>\n\n          </div>\n          <nav className=\"main-navigation__items\">\n\n            <ul>\n            <li>\n              <NavLink to=\"/home\">Home</NavLink>\n            </li>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n              )}\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n              )}\n              {context.token && (\n                <React.Fragment>\n\n                  <li>\n                    <NavLink to=\"/userProfile\">My Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/users\">Users</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/lessons\">Lessons</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {!context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/lessons/public\">Lessons</NavLink>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/auth/Auth';\nimport SignupPage from './pages/auth/Signup';\n\nimport UserProfile from './pages/user/UserProfile';\nimport UsersPage from './pages/user/Users';\nimport LessonsPage from './pages/lesson/Lessons';\nimport PublicLessonsPage from './pages/lesson/PublicLessons';\nimport ProfileLessonViewer from './components/ProfileLessonViewer';\n// import ErrorPage from './components/ErrorPage';\nimport PasswordReset from './pages/auth/PasswordReset';\nimport LandingPage from './pages/Landing';\n\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete'\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role\n    });\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    // this.socket.emit('msg_subscribe', {user: activityId, room:'msg'+activityId});\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n\n  componentDidMount() {\n    // console.log(this.socket.connected);\n    console.log('...app component mounted...');\n\n    if (sessionStorage.getItem('login info') && this.state.token === null) {\n\n      let seshStore = sessionStorage.getItem('login info');\n      this.context.token = seshStore.token;\n      this.context.activityId = seshStore.activityId;\n      this.context.role = seshStore.role;\n      this.setState({\n        sessionCookiePresent: true,\n        token: seshStore.token,\n        });\n    };\n\n    // const conversationId = this.context.activityId;\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n  }\n\n  componentWillUnmount() {\n    // console.log('boop boop boop');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null\n          });\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityB: null,\n          activityC: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          lesson: {},\n          lessons: [],\n          selectedLesson: null,\n          selectedPerk: null,\n          selectedPromo: null,\n          selectedReview: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n        };\n\n      })\n      .catch(err => {\n        console.log(err);\n        // this.setState({userAlert: err});\n      });\n  }\n\n  userOffline () {\n    console.log('...taking user offline...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n      mutation{userOffline(\n        activityId:\"${activityId}\",\n        userId:\"${activityId}\")\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data.userOffline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const userId = event.target.formGridUserId.value;\n      const password = event.target.formGridPassword.value;\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password}}\n        `};\n      console.log(JSON.stringify(requestBody));\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(resData);\n\n        })\n        .catch(err => {\n          console.log(err);\n        });\n        this.setState({passwordResetState: 'complete' })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityB: null,\n              activityC: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: {},\n              lesson: {},\n              lessons: [],\n              selectedLesson: {},\n              selectedPerk: {},\n              selectedPromo: {},\n              selectedReview: {},\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <main className=\"main-content\">\n              <Switch>\n                <Route path=\"/home\" component={LandingPage} />\n                  {\n                    // this.state.token && (<Redirect from=\"/\" to=\"/userProfile\" exact />)\n                  }\n\n                  {\n                    // !this.state.token && (<Route path=\"/passwordReset/:user\" component={PasswordReset} />)\n                  }\n                  {!this.state.token && (<Route path=\"/passwordReset/:user\" render={(props) => <PasswordReset {...props}\n                    passwordReset={this.passwordReset}\n                    resetState={this.state.passwordResetState}\n                    />}\n                  />)}\n                  {this.state.token && (<Route path=\"/userProfile\" component={UserProfile} />)}\n                  {this.state.token && (<Route path=\"/userProfile/LessonDetailViewer\" component={ProfileLessonViewer} />)}\n\n                  {this.state.token && (<Redirect from=\"/login\" to=\"/userProfile\" exact />)}\n\n                  {this.state.token && (<Route path=\"/users\" component={UsersPage} />)}\n                  {this.state.token && (<Route path=\"/lessons\" component={LessonsPage} />)}\n\n                  {!this.state.token && (<Route path=\"/lessons/public\" component={PublicLessonsPage} />)}\n                  {!this.state.token && (<Route path=\"/login\" component={AuthPage} />)}\n                  {!this.state.token && (<Route path=\"/signup\" component={SignupPage} />)}\n                  {\n                    !this.state.token && !sessionStorage.getItem('token') && (<Redirect from=\"*\" to=\"/home\" exact />)\n                  }\n                  {\n                    // !this.state.token && (<Redirect to=\"/login\" exact />)\n                    !this.state.token && sessionStorage.getItem('token') && (<Redirect to=\"/login\" exact />)\n                  }\n                  {\n                    // !this.state.token && (<Route path=\"*\" component={ErrorPage}/>)\n                  }\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}