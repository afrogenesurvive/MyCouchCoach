{"version":3,"sources":["context/auth-context.js","components/AlertBox.js","components/LoadingOverlay.js","components/SidebarControl.js","components/Forms/user/VerifyUserForm.js","components/Spinner/Spinner.js","pages/Sidebar.js","components/Users/UserList/UserItem/UserAddressItem.js","components/Users/UserList/UserAddressList.js","components/Users/UserList/UserItem/UserProfileImageItem.js","components/Users/UserList/UserProfileImageList.js","components/Users/UserList/UserItem/UserSocialMediaItem.js","components/Users/UserList/UserSocialMediaList.js","components/Users/UserList/UserItem/UserPerkItem.js","components/Users/UserList/UserPerkList.js","components/Users/UserList/UserItem/UserPromoItem.js","components/Users/UserList/UserPromoList.js","components/Users/UserList/UserItem/UserInterestItem.js","components/Users/UserList/UserInterestList.js","components/Users/UserList/UserItem/UserTagItem.js","components/Users/UserList/UserTagList.js","components/Users/UserList/UserItem/UserFriendItem.js","components/Users/UserList/UserFriendList.js","components/Users/UserList/UserItem/UserFriendRequestItem.js","components/Users/UserList/UserFriendRequestList.js","components/Users/UserList/UserItem/UserCartItemItem.js","components/Users/UserList/UserCartItemList.js","components/Users/UserList/UserItem/UserBookedLessonItem.js","components/Users/UserList/UserBookedLessonList.js","components/Users/UserList/UserItem/UserLikedLessonItem.js","components/Users/UserList/UserLikedLessonList.js","components/Users/UserList/UserItem/UserAttendedLessonItem.js","components/Users/UserList/UserAttendedLessonList.js","components/Users/UserList/UserItem/UserTaughtLessonItem.js","components/Users/UserList/UserTaughtLessonList.js","components/Users/UserList/UserItem/UserPaymentInfoItem.js","components/Users/UserList/UserPaymentInfoList.js","components/Users/UserList/UserItem/UserOrderItem.js","components/Users/UserList/UserOrderList.js","components/Users/UserList/UserItem/UserReviewItem.js","components/Users/UserList/UserReviewList.js","components/Users/UserList/UserItem/UserMessageItem.js","components/Users/UserList/UserMessageList.js","components/Users/UserList/UserItem/UserActivityItem.js","components/Users/UserList/UserActivityList.js","components/Forms/user/UpdateUserBasicForm.js","components/Forms/user/UpdateUserFieldForm.js","components/Forms/user/AddUserAddressForm.js","components/Forms/user/AddUserProfileImageForm.js","components/Forms/user/AddUserSocialMediaForm.js","components/Forms/user/AddUserInterestsForm.js","components/Forms/user/AddUserTagsForm.js","components/Forms/user/AddUserPaymentInfoForm.js","components/Forms/user/AddUserPointsForm.js","components/Forms/user/AddUserPerkForm.js","components/Forms/user/AddUserPromoForm.js","components/Forms/user/AddUserFriendForm.js","components/Forms/message/CreateMessageForm.js","components/Forms/order/CreateOrderForm.js","components/Users/thisUserProfile.js","pages/user/UserProfile.js","pages/auth/Auth.js","components/Forms/user/CreateUserForm.js","pages/auth/Signup.js","components/Users/UserList/UserItem/UserItem.js","components/Users/UserList/UserList.js","components/Users/UserList/UserItem/SearchUserItem.js","components/Users/UserList/SearchUserList.js","components/Forms/user/MessageUserListForm.js","components/Users/UserDetail.js","components/AttachmentViewer.js","components/UserDetailViewer.js","components/Forms/user/SearchUserForm.js","pages/user/Users.js","components/Lessons/LessonList/LessonItem/LessonItem.js","components/Lessons/LessonList/LessonList.js","components/Lessons/LessonList/LessonItem/SearchLessonItem.js","components/Lessons/LessonList/SearchLessonList.js","components/Lessons/LessonList/LessonItem/LessonSessionItem.js","components/Lessons/LessonList/LessonSessionList.js","components/Lessons/LessonList/LessonItem/LessonScheduleItem.js","components/Lessons/LessonList/LessonScheduleList.js","components/Forms/lesson/CreateLessonSessionForm.js","components/Forms/lesson/UpdateLessonBasicForm.js","components/Forms/lesson/UpdateLessonFieldForm.js","components/Lessons/LessonDetail.js","components/LessonDetailViewer.js","components/Forms/lesson/SearchLessonForm.js","components/Forms/lesson/CreateLessonForm.js","pages/lesson/Lessons.js","components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","token","activityId","activityA","activityB","activityC","role","userId","user","users","selectedUser","lesson","lessons","selectedLesson","selectedPerk","selectedPromo","selectedReview","sender","receiver","userAlert","file","fancyDate","login","tokenExpiration","logout","AlertBox","props","alert","className","Alert","variant","LoadingOveray","status","SidebarControl","Button","onClick","onShowSidebar","onHideSidebar","verifyUserForm","Form","onSubmit","onConfirm","Row","Group","as","Col","controlId","Label","Control","type","placeholder","Text","canCancel","onCancel","canConfirm","spinner","SidebarPage","state","authContext","AuthContext","_currentValue","overlay","overlayStatus","isActive","this","Fragment","Container","md","Card","border","Body","to","Title","Subtitle","context","_id","name","username","title","Component","contextType","userAddressItem","key","authId","number","street","town","city","country","postalCode","primary","toString","Link","href","canDelete","onDelete","bind","address","makeAddressPrimary","orderForm","value","JSON","stringify","addToOrder","userAddressList","userAddresses","map","UserAddressItem","path","userProfileImageItem","Image","src","fluid","profileImage","userProfileImageList","userProfileImages","UserProfileImageItem","userSocialMediaItem","platform","handle","link","socialMediaAccount","userSocialMediaList","userSocialMedia","UserSocialMediaItem","userPerkItem","imageLink","date","description","code","perk","userPerkList","userPerks","perkDate","Date","substr","toISOString","slice","UserPerkItem","startDate","endDate","promo","userPromoList","userPromos","promoStartDate","promoEndDate","UserPromoItem","valid","userInterestItem","interest","userInterestList","userInterests","UserInterestItem","userTagItem","tag","userTagList","userTags","UserTagItem","userFriendItem","style","width","Img","profileImages","loggedIn","online","onSelect","friend","userFriendList","userFriends","UserFriendItem","clientConnected","userFriendRequestItem","onAccept","friendRequest","onReject","userFriendRequestList","userFriendRequests","UserFriendRequestItem","userCartItemItem","dateAdded","sessionDate","cartItem","UserCartItemList","cart","userCartItems","cartItemDateAdded","cartItemSessionDate","UserCartItemItem","userBookedLessonItem","bookedLessonDate","ref","bookedLesson","userBookedLessonList","bookedLessons","userBookedLessons","UserBookedLessonItem","userLikedLessonItem","likedLesson","userLikedLessonList","likedLessons","userLikedLessons","UserLikedLessonItem","userAttendedLessonItem","attendedLessonDate","attendedLesson","userAttendedLessonList","attendedLessons","userAttendedLessons","UserAttendedLessonItem","userTaughtLessonItem","taughtLessonDate","taughtLesson","userTaughtLessonList","taughtLessons","userTaughtLessons","UserTaughtLessonItem","userPaymentInfoItem","body","paymentInfoItem","paymentInfoList","paymentInfo","userPaymentInfo","paymentInfoItemDate","UserPaymentInfoItem","userOrderItem","time","totals","c","order","userOrderList","userOrders","orderDate","console","log","UserOrderItem","buyer","tax","notes","payment","shipping","billingAddress","shippingAddress","feedback","userReviewItem","rating","userReviewList","userReviews","review","reviewDate","UserReviewItem","userMessgeItem","subject","messageMessage","userMessageList","test1","test2","userMessages","e","test3","test4","Set","forEach","element","index","test5","filter","x","push","messages","message","UserMessageItem","userActivityItem","activityDate","request","userActivityList","activity","userActivity","UserActivityItem","UpdateUserBasicForm","useState","prevDob","dob","contact","email","password","phone","phone2","rows","bio","canCancelProfile","UpdateUserFieldForm","AddUserAddressForm","AddUserProfileImageForm","AddUserSocialMediForm","AddUserInterestsForm","AddUserTagsForm","AddUserPaymentInfoForm","payInfoDate","setPayInfoDate","id","selected","onChange","target","checked","AddUserPointsForm","AddUserPerkForm","AddUserPromoForm","AddUserFriendForm","requestingFriendId","CreateMessageForm","successText","CreateOrderForm","addressTypes","sku","addresses","billingAddresses","shippingAddresses","primaryShippingAddresses","primaryBillingAddresses","primaryShippingAddress","primaryBillingAddress","length","step","thisUserProfile","userDob","receivedRequests","friendRequests","public","Tabs","defaultActiveKey","Tab","eventKey","disabled","age","points","verification","verified","size","onStartUpdate","onStartUpdateField","onStartAdd","updating","userAddField","userEditBasic","confirmText","updatingField","userEditField","userAddPoints","userAddAddress","UserAddressList","userDeleteAddress","userAddProfileImage","UserProfileImageList","userDeleteProfileImage","AddUserSocialMediaForm","userAddSocialMedia","socialMedia","UserSocialMediaList","userDeleteSocialMedia","userAddPerk","perks","UserPerkList","userDeletePerk","userAddPromo","promos","UserPromoList","userDeletePromo","userAddInterests","interests","UserInterestList","userDeleteInterest","userAddTags","tags","UserTagList","userDeleteTag","userAddFriend","requestingFriend","friends","UserFriendList","userDeleteFriend","userSelectFriend","UserFriendRequestList","userRejectFriendRequest","userAcceptFriendRequest","startCartCheckout","creatingOrder","cancelCartCheckout","createOrder","addAddressToOrder","orderBillingAddress","orderShippingAddress","userDeleteCartItem","UserLikedLessonList","userDeleteLikedLesson","UserBookedLessonList","userDeleteBookedLesson","UserAttendedLessonList","userDeleteAttendedLesson","UserTaughtLessonList","userDeleteTaughtLesson","userAddPaymentInfo","UserPaymentInfoList","userDeletePaymentInfo","onStartCreateMessage","messageReceiver","userCreateMessage","UserMessageList","userDeleteMessage","orders","UserOrderList","userDeleteOrder","reviews","UserReviewList","userDeleteReview","UserActivityList","userDeleteActivity","UserProfile","adding","deleting","isLoading","userUpdateField","showAttachment","showThisAttachmentFile","showThisAttachmentType","sidebarShow","mCol1Size","mCol2Size","messagesLoaded","finalConfirmation","socketMsg","selectedFriendRequest","userSelectedFriend","setState","args","addUserField","startCreateMessage","event","contactEmail","formGridEmail","formGridPassword","formGridName","formGridUsername","formGridDob","contactPhone","formGridPhone","contactPhone2","formGridPhone2","formGridBio","trim","requestBody","query","fetch","method","headers","Authorization","then","res","Error","json","resData","updatedUser","data","updateUserBasic","responseAlert","catch","err","field","formGridQuery","formGridFieldSelect","updateUserByField","formGridPoints","addUserPoints","addressType","formGridAddressType","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressCity","formGridAddressCity","addressCountry","formGridAddressCountry","addressPostalCode","formGridAddressPostalCode","addUserAddress","addressPrimary","deleteUserAddress","setUserAddressPrimary","profileImageName","formGridFilename","profileImageType","formGridFiletype","profileImagePath","formGridFilepath","addUserProfileImage","deleteUserProfileImage","socialMediaPlatform","formGridPlatform","socialMediaHandle","formGridHandle","socialMediaLink","formGridLink","addUserSocialMedia","deleteUserSocialMedia","paymentInfoDate","paymentInfoType","formGridPaymentInfoType","paymentInfoDescription","formGridDescription","paymentInfoBody","formGridBody","paymentInfoPrimary","formGridPaymentInfoPrimaryCheckbox","addUserPaymentInfo","paymentInfoValid","deleteUserPaymentInfo","formGridInterests","activityLog","addUserInterests","logUserActivity","deleteUserInterest","formGridTags","addUserTags","deleteUserTag","friendId","addUserFriend","senderId","receiverId","deleteFriendRequest","deleteUserFriend","lessonId","deleteUserCartLesson","deleteUserBookedLesson","preventDefault","buyerId","formGridType","totalA","formGridTotalA","totalB","formGridTotalB","taxDescription","formGridTaxDescription","taxAmount","formGridTaxAmount","formGridNotes","formGridPayment","formGridShipping","billingAddressNumber","formGridBillingAddressNumber","billingAddressStreet","formGridBillingAddressStreet","billingAddressTown","formGridBillingAddressTown","billingAddressCity","formGridBillingAddressCity","billingAddressCountry","formGridBillingAddressCountry","billingAddressPostalCode","formGridBillingAddressPostalCode","shippingAddressNumber","formGridShippingAddressNumber","shippingAddressStreet","formGridShippingAddressStreet","shippingAddressTown","formGridShippingAddressTown","shippingAddressCity","formGridShippingAddressCity","shippingAddressCountry","formGridShippingAddressCountry","shippingAddressPostalCode","formGridShippingAddressPostalCode","orderId","deleteUserOrder","reviewId","deleteUserReview","senderName","timeString2","toLocaleString","formGridTypeSelect","formGridSubject","formGridMessage","msgObject","sendSocketMessage","createMessage","messageId","deleteMessage","activityRequest","deleteUserActivity","modalCancelHandler","showSidebar","hideSidebar","getThisUser","errors","thisUser","sessionStorage","getItem","addUserActivity","conversationId","undefined","socket","emit","room","on","addMessage","msg","LoadingOverlay","you","AuthPage","verifying","activeTab","userSeshStore","model","retrieveLogin","submitHandler","formBasicEmail","formBasicPassword","error","setItem","verifyUser","verificationType","formGridCode","startVerification","closeVerification","VerifyUserForm","CreateUserForm","SignupPage","success","creating","modalConfirmUserHandler","formGridRole","publicProfile","formGridPublicCheckbox","newUser","createUser","cancelSignup","authUserId","userItem","onDetail","userList","onViewDetail","canReport","onReport","onSelectNoDetail","onSelectMessageReceiver","onFriendRequest","searchUserItem","searchUserList","searchUsers","SearchUserItem","MessageUserListForm","UserDetail","onStartSendMessage","onHideUserDetail","creatingMessage","cancelMessage","sendMessage","AttachmentViewer","onCloseAttachmentView","attachmentFile","UserDetailViewer","SearchUserForm","UsersPage","searching","isSorting","detailsLoaded","userSearchField","userSearchQuery","showDetail","modalConfirmSearchHandler","formBasicQuery","formBasicFieldSelect","formBasicField","getUsersByField","deleteListUser","reportUser","startSendMessage","formBasicTypeSelect","showDetailHandler","getUserById","selectUserNoDetail","hideDetailHandler","sendFriendRequest","onViewAttachment","attachment","format","closeAttachmentView","fetchUsersBasic","getAllUsers","attachmentType","Accordion","sm","Nav","Item","Content","Pane","SearchUserList","lessonItem","subtitle","category","instructors","lessonList","LessonItem","gallery","schedule","sessions","searchLessonItem","searchLessonList","searchLessons","SearchLessonItem","lessonSessionItem","onBookSession","session","onAddCartLesson","lessonSessionList","lessonSessions","LessonSessionItem","lessonScheduleItem","lessonScheduleList","dates","lessonSchedule","LessonScheduleItem","CreateLessonSessionForm","setDate","UpdateLessonBasicForm","duration","price","UpdateLessonFieldForm","LessonDetail","isInstructor","includes","showSchedule","hideSchedule","showScheduleState","LessonScheduleList","onStartEditLessonBasic","editingLesson","cancelEditBasic","editLessonBasic","onStartEditLessonField","editingLessonField","cancelEditField","editLessonField","onHideLessonDetail","startCreateSession","creatingSession","cancelCreateSession","createLessonSession","onSessionLoad","onHideSessions","sessionsLoaded","LessonSessionList","LessonDetailViewer","SearchLessonForm","CreateLessonForm","LessonsPage","lessonUpdateField","lessonSearchField","lessonSearchQuery","startCreateLesson","createLessonHandler","creatorId","formGridTitle","formGridSubtitle","formGridCategory","formGridSku","formGridPrice","formGridDuration","createLesson","updateLessonBasic","updateLessonByField","loadSessions","getLessonById","hideSessions","addCartLesson","addUserCartLesson","bookSession","sessionTitle","addLessonBooking","CalendarDate","sessionTime","formGridTime","sessionLimit","formGridLimit","deleteListLesson","reportLesson","prevState","find","selectLessonNoDetail","fetchLessonsBasic","getAllLessons","LessonList","SearchLessonList","creator","mainNavigation","Consumer","App","sessionCookiePresent","clear","sessionStorageAuth","io","connected","seshStore","userOnline","userOffline","Provider","from","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbb317e2.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: {},\n    lesson: {},\n    lessons: [],\n    selectedLesson: null,\n    selectedPerk: null,\n    selectedPromo: null,\n    selectedReview: null,\n    sender: null,\n    receiver: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {}\n});\n","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nimport \"./AttachmentViewer.css\"\n\nconst LoadingOveray = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n      <h5 className=\"attachmentViewerTitle\">status : {props.status} ...</h5>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LoadingOveray;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./SidebarControl.css\"\n\nconst SidebarControl = (props) =>{\n  return (\n    <div className=\"SidebarControl\">\n      <Button className=\"sidebarButton\" variant=\"success\" onClick={props.onShowSidebar}>+</Button>\n      <Button className=\"sidebarButton\" variant=\"danger\" onClick={props.onHideSidebar}>-</Button>\n    </div>\n  )\n}\n\nexport default SidebarControl;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"email\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>email</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridCode\">\n    <Form.Label>Code</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"verification code\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../context/auth-context';\nimport LoadingOverlay from '../components/LoadingOverlay';\n\nimport './Sidebar.css';\n\nclass SidebarPage extends Component {\n  state = {\n    authContext: AuthContext._currentValue,\n    overlay: false,\n    overlayStatus: \"test\",\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <Container className=\"sidebarContainer\">\n      <Row className=\"sidebarRow1\">\n      <Col md={12} className=\"\">\n\n      <Card border=\"primary\" className=\"sidebarCard\">\n      <Card.Body>\n\n        <NavLink to=\"/userProfile\">My Profile (User)</NavLink>\n\n        <Card.Title className=\"cardTitle\">You</Card.Title>\n        <Card.Subtitle className=\"mb-2\">ID:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user._id}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Name:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.name}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Role:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.role}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n      <Card border=\"secondary\" className=\"sidebarCard\">\n      <Card.Body>\n        <Card.Title className=\"cardTitle\">Selection</Card.Title>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedUser._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedUser.username}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedLesson._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedLesson.title}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n      </Col>\n      </Row>\n      </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SidebarPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userAddressItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        number: {props.number}\n      </Card.Text>\n      <Card.Text>\n        street: {props.street}\n      </Card.Text>\n      <Card.Text>\n        town: {props.town}\n      </Card.Text>\n      <Card.Text>\n        city: {props.city}\n      </Card.Text>\n      <Card.Text>\n        country: {props.country}\n      </Card.Text>\n      <Card.Text>\n        postalCode: {props.postalCode}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.address)}>\n            Delete\n          </Button>\n        )}\n          </Card.Link>\n          <Card.Link href=\"\">\n          <Button variant=\"danger\" onClick={props.makeAddressPrimary.bind(this, props.address)}>\n            Make Primary\n          </Button>\n        </Card.Link>\n        <Card.Link href=\"\">\n        { props.orderForm === true && (\n          <Button variant=\"danger\" value={JSON.stringify(props.address)} onClick={props.addToOrder.bind('x')}>\n            Add to order\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userAddressItem;\n","import React from 'react';\n\nimport UserAddressItem from './UserItem/UserAddressItem';\nimport './UserList.css';\n\nconst userAddressList = props => {\n  const userAddresses = props.userAddresses.map(address => {\n\n    return (\n      <UserAddressItem\n        key={address.path}\n        authId={props.authId}\n        type={address.type}\n        number={address.number}\n        street={address.street}\n        town={address.town}\n        city={address.city}\n        country={address.country}\n        postalCode={address.postalCode}\n        primary={address.primary}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        orderForm={props.orderForm}\n        addToOrder={props.addToOrder}\n        makeAddressPrimary={props.makeAddressPrimary}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userAddresses}</ul>;\n};\n\nexport default userAddressList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userProfileImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li>\n          <Image src={props.path} className=\"profileImageImg\" fluid />\n\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n        </ul>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.profileImage)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userProfileImageItem;\n","import React from 'react';\n\nimport UserProfileImageItem from './UserItem/UserProfileImageItem';\nimport './UserList.css';\n\nconst userProfileImageList = props => {\n  const userProfileImages = props.userProfileImages.map(profileImage => {\n\n    return (\n      <UserProfileImageItem\n        key={profileImage.path}\n        authId={props.authId}\n        name={profileImage.name}\n        type={profileImage.type}\n        path={profileImage.path}\n        profileImage={profileImage}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userProfileImages}</ul>;\n};\n\nexport default userProfileImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userSocialMediaItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.platform}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.handle}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.link}\n          </p>\n          </li>\n        </ul>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.socialMediaAccount)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userSocialMediaItem;\n","import React from 'react';\n\nimport UserSocialMediaItem from './UserItem/UserSocialMediaItem';\nimport './UserList.css';\n\nconst userSocialMediaList = props => {\n  const userSocialMedia = props.userSocialMedia.map(socialMediaAccount => {\n\n    return (\n      <UserSocialMediaItem\n        key={socialMediaAccount.path}\n        authId={props.authId}\n        platform={socialMediaAccount.platform}\n        handle={socialMediaAccount.handle}\n        link={socialMediaAccount.link}\n        socialMediaAccount={socialMediaAccount}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userSocialMedia}</ul>;\n};\n\nexport default userSocialMediaList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> createOrder:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.perk)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPerkItem from './UserItem/UserPerkItem';\nimport './UserList.css';\n\nconst userPerkList = props => {\n  const userPerks = props.userPerks.map(perk => {\n\n    let perkDate = 0;\n    if (perk.date !== null && perk.date !== \"\") {\n      perkDate = new Date (perk.date.substr(0,10)*1000).toISOString().slice(0,10);\n    }\n\n    return (\n      <UserPerkItem\n        key={perk.description}\n        authId={props.authId}\n        name={perk.name}\n        date={perkDate}\n        description={perk.description}\n        code={perk.code}\n        imageLink={perk.imageLink}\n        perk={perk}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPerks}</ul>;\n};\n\nexport default userPerkList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> start/end Dates:</p>\n          <p className=\"userItemText\">\n          {props.startDate}\n          </p>\n          <p className=\"userItemText\">\n          {props.endDate}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> code:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.promo)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPromoItem from './UserItem/UserPromoItem';\nimport './UserList.css';\n\nconst userPromoList = props => {\n  const userPromos = props.userPromos.map(promo => {\n    let promoStartDate = 0;\n    if (promo.startDate !== null && promo.startDate !== \"\") {\n      promoStartDate = new Date (promo.startDate.substr(0,10)*1000).toISOString().slice(0,10);\n    }\n    let promoEndDate = 0;\n    if (promo.endDate !== null && promo.endDate !== \"\") {\n      promoEndDate = new Date (promo.endDate.substr(0,10)*1000).toISOString().slice(0,10);\n    }\n\n    return (\n      <UserPromoItem\n        key={promo._id}\n        authId={props.authId}\n        _id={promo._id}\n        name={promo.name}\n        type={promo.type}\n        valid={promo.valid}\n        startDate={promoStartDate}\n        endDate={promoEndDate}\n        description={promo.description}\n        code={promo.code}\n        imageLink={promo.imageLink}\n        promo={promo}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPromos}</ul>;\n};\n\nexport default userPromoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userInterestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail2 users__list-item_detail\">\n    <div className=\"tag_card_body\">\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.interest}\n        </Card.Text>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.interest)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userInterestItem;\n","import React from 'react';\n\nimport UserInterestItem from './UserItem/UserInterestItem';\nimport './UserList.css';\n\nconst userInterestList = props => {\n  const userInterests = props.userInterests.map(interest => {\n\n    return (\n      <UserInterestItem\n        key={interest}\n        authId={props.authId}\n        interest={interest}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userInterests}</ul>;\n};\n\nexport default userInterestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.tag}\n        </Card.Text>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userTagItem;\n","import React from 'react';\n\nimport UserTagItem from './UserItem/UserTagItem';\nimport './UserList.css';\n\nconst userTagList = props => {\n  const userTags = props.userTags.map(tag => {\n\n    return (\n      <UserTagItem\n        key={tag}\n        authId={props.authId}\n        tag={tag}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userTags}</ul>;\n};\n\nexport default userTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.username}</Card.Title>\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      <Card.Text>\n        loggedIn: {props.loggedIn.toString()}\n      </Card.Text>\n      <Card.Text>\n        online: {props.online.toString()}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n        <Button variant=\"primary\" onClick={props.onSelect.bind(this, props.friend)}>\n          Select\n        </Button>\n      </Card.Link>\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.friend)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendItem;\n","import React from 'react';\n\nimport UserFriendItem from './UserItem/UserFriendItem';\nimport './UserList.css';\n\nconst userFriendList = props => {\n\n  const userFriends = props.userFriends.map(friend=> {\n    return (\n      <UserFriendItem\n        key={friend._id}\n        friend={friend}\n        _id={friend._id}\n        username={friend.username}\n        loggedIn={friend.loggedIn}\n        online={friend.clientConnected}\n        profileImages={friend.profileImages}\n        onSelect={props.onSelect}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriends}</ul>;\n};\n\nexport default userFriendList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendRequestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Sender: {props.sender._id},\n      </Card.Text>\n      <Card.Text>\n        Receiver: {props.receiver._id},\n      </Card.Text>\n\n      <Card.Link href=\"\">\n        <Button variant=\"primary\" onClick={props.onAccept.bind(this, props.friendRequest)}>\n          Accept\n        </Button>\n        <Card.Link href=\"\">\n          <Button variant=\"danger\" onClick={props.onReject.bind(this, props.friendRequest)}>\n            Reject\n          </Button>\n        </Card.Link>\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendRequestItem;\n","import React from 'react';\n\nimport UserFriendRequestItem from './UserItem/UserFriendRequestItem';\nimport './UserList.css';\n\nconst userFriendRequestList = props => {\n\n  const userFriendRequests = props.userFriendRequests.map(friendRequest=> {\n    // console.log(friendRequest.date,friendRequest.sender,friendRequest.receiver);\n    return (\n      <UserFriendRequestItem\n        key={friendRequest.sender._id}\n        friendRequest={friendRequest}\n        date={friendRequest.date}\n        sender={friendRequest.sender}\n        receiver={friendRequest.receiver}\n        onAccept={props.onAccept}\n        onReject={props.onReject}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriendRequests}</ul>;\n};\n\nexport default userFriendRequestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userCartItemItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateAdded: {props.dateAdded}\n      </Card.Text>\n      <Card.Text>\n        sessionDate: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        Lesson ID: {props.lesson._id}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.cartItem)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userCartItemItem;\n","import React from 'react';\n\nimport UserCartItemItem from './UserItem/UserCartItemItem';\nimport './UserList.css';\n\nconst UserCartItemList = props => {\n\n  const cart = props.userCartItems.map(cartItem => {\n    \n    const cartItemDateAdded = new Date (cartItem.dateAdded.substr(0,10)*1000).toISOString().slice(0,10);;\n    const cartItemSessionDate = new Date (cartItem.sessionDate.substr(0,10)*1000).toISOString().slice(0,10);;\n    \n    return (\n      <UserCartItemItem\n        key={cartItem.lesson}\n        cartItem={cartItem}\n        authId={props.authId}\n        lesson={cartItem.lesson}\n        dateAdded={cartItemDateAdded}\n        sessionDate={cartItemSessionDate}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{cart}</ul>;\n};\n\nexport default UserCartItemList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userBookedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.bookedLessonDate}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.ref}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.bookedLesson)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userBookedLessonItem;\n","import React from 'react';\n\nimport UserBookedLessonItem from './UserItem/UserBookedLessonItem';\nimport './UserList.css';\n\nconst userBookedLessonList = props => {\n\n  const bookedLessons = props.userBookedLessons.map(bookedLesson => {\n    const bookedLessonDate = new Date (bookedLesson.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <UserBookedLessonItem\n        key={bookedLesson.ref}\n        bookedLesson={bookedLesson}\n        date={bookedLessonDate}\n        ref={bookedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{bookedLessons}</ul>;\n};\n\nexport default userBookedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userLikedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.title}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.likedLesson)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userLikedLessonItem;\n","import React from 'react';\n\nimport UserLikedLessonItem from './UserItem/UserLikedLessonItem';\nimport './UserList.css';\n\nconst userLikedLessonList = props => {\n\n  const likedLessons = props.userLikedLessons.map(likedLesson => {\n    return (\n      <UserLikedLessonItem\n        key={likedLesson.ref}\n        likedLesson={likedLesson}\n        _id={likedLesson._id}\n        title={likedLesson.title}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{likedLessons}</ul>;\n};\n\nexport default userLikedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userAttendedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.attendedLessonDate}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.ref}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.attendedLesson)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userAttendedLessonItem;\n","import React from 'react';\n\nimport UserAttendedLessonItem from './UserItem/UserAttendedLessonItem';\nimport './UserList.css';\n\nconst userAttendedLessonList = props => {\n\n  const attendedLessons = props.userAttendedLessons.map(attendedLesson => {\n    const attendedLessonDate = new Date (attendedLesson.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <UserAttendedLessonItem\n        key={attendedLesson.ref}\n        bookedLesson={attendedLesson}\n        date={attendedLessonDate}\n        ref={attendedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attendedLessons}</ul>;\n};\n\nexport default userAttendedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userTaughtLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.taughtLessonDate}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.ref}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.taughtLesson)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userTaughtLessonItem;\n","import React from 'react';\n\nimport UserTaughtLessonItem from './UserItem/UserTaughtLessonItem';\nimport './UserList.css';\n\nconst userTaughtLessonList = props => {\n\n  const taughtLessons = props.userTaughtLessons.map(taughtLesson => {\n    const taughtLessonDate = new Date (taughtLesson.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    // console.log(taughtLesson.ref);\n    return (\n      <UserTaughtLessonItem\n        key={taughtLesson.ref}\n        taughtLesson={taughtLesson}\n        date={taughtLessonDate}\n        ref={taughtLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{taughtLessons}</ul>;\n};\n\nexport default userTaughtLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPaymentInfoItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        description: {props.description}\n      </Card.Text>\n      <Card.Text>\n        body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n      <Card.Text>\n        valid: {props.valid.toString()}\n      </Card.Text>\n\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.paymentInfoItem)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPaymentInfoItem;\n","import React from 'react';\n\nimport UserPaymentInfoItem from './UserItem/UserPaymentInfoItem';\nimport './UserList.css';\n\nconst paymentInfoList = props => {\n\n  const paymentInfo = props.userPaymentInfo.map(paymentInfoItem => {\n    const paymentInfoItemDate = new Date (paymentInfoItem.date.substr(0,10)*1000).toISOString().slice(0,10);\n    // console.log(paymentInfoItemDate);\n    return (\n      <UserPaymentInfoItem\n        key={paymentInfoItem.description}\n        paymentInfoItem={paymentInfoItem}\n        date={paymentInfoItemDate}\n        type={paymentInfoItem.type}\n        description={paymentInfoItem.description}\n        body={paymentInfoItem.body}\n        valid={paymentInfoItem.valid}\n        primary={paymentInfoItem.primary}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{paymentInfo}</ul>;\n};\n\nexport default paymentInfoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userOrderItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        total: {props.totals.c}\n      </Card.Text>\n      <Card.Link href=\"\">\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.order)}>\n          Delete\n        </Button>\n      )}\n      </Card.Link>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userOrderItem;\n","import React from 'react';\n\nimport UserOrderItem from './UserItem/UserOrderItem';\nimport './UserList.css';\n\nconst userOrderList = props => {\n\n  const userOrders = props.userOrders.map(order => {\n    // console.log(order.date);\n    const orderDate = new Date (order.date.substr(0,10)*1000).toISOString().slice(0,10);\n    console.log(order.totals);\n    return (\n      <UserOrderItem\n        key={order._id}\n        order={order}\n        _id={order._id}\n        date={orderDate}\n        time={order.time}\n        type={order.type}\n        buyer={order.buyer}\n        receiver={order.receiver}\n        lessons={order.lessons}\n        totals={order.totals}\n        tax={order.tax}\n        description={order.description}\n        notes={order.notes}\n        payment={order.payment}\n        shipping={order.shipping}\n        billingAddress={order.billingAddress}\n        shippingAddress={order.shippingAddress}\n        status={order.status}\n        feedback={order.feedback}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userOrders}</ul>;\n};\n\nexport default userOrderList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userReviewItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        Rating: {props.rating}\n      </Card.Text>\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userReviewItem;\n","import React from 'react';\n\nimport UserReviewItem from './UserItem/UserReviewItem';\nimport './UserList.css';\n\nconst userReviewList = props => {\n\n  const userReviews = props.userReviews.map(review => {\n    const reviewDate = new Date (review.date.substr(0,10)*1000).toISOString().slice(0,10);\n    return (\n      <UserReviewItem\n        key={review._id}\n        authId={props.authId}\n        _id={review._id}\n        date={reviewDate}\n        type={review.type}\n        body={review.body}\n        rating={review.rating}\n        review={review}\n        lesson={review.lesson}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userReviews}</ul>;\n};\n\nexport default userReviewList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userMessgeItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Title>\n          Message\n        </Card.Title>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> sender:</p>\n          <p className=\"userItemText\">\n          {props.sender.role}: {props.sender.ref}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> senderName:</p>\n          <p className=\"userItemText\">\n          {props.sender.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> receiver:</p>\n          <p className=\"userItemText\">\n          {props.receiver.role}: {props.receiver.ref}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> receiverName:</p>\n          <p className=\"userItemText\">\n          {props.receiver.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> time:</p>\n          <p className=\"userItemText\">\n          {props.time}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> subject:</p>\n          <p className=\"userItemText\">\n          {props.subject}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> message:</p>\n          <p className=\"userItemText\">\n          {props.messageMessage}\n          </p>\n          </li>\n        </ul>\n\n        <Card.Link href=\"\">\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props._id)}>\n            Delete\n          </Button>\n        )}\n        </Card.Link>\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userMessgeItem;\n","import React from 'react';\n\nimport UserMessageItem from './UserItem/UserMessageItem';\nimport './UserList.css';\n\nconst userMessageList = props => {\n  // console.log(\"here\",props.userMessages);\n\n  // function compare( a, b ) {\n  //   if ( a.sender.username < b.sender.username ){\n  //     return -1;\n  //   }\n  //   if ( a.sender.username > b.sender.username ){\n  //     return 1;\n  //   }\n  //   return 0;\n  // }\n  // const test = props.userMessages.sort( compare );\n  let test1 = [];\n  const test2 = props.userMessages.map(e=> e = e.sender.ref);\n  const test3 = props.userMessages.map(e=> e = e.receiver.ref);\n  const test4 = [...test2,...test3];\n  const test4_1 = [...new Set(test4)];\n  // const test4_2 = test4_1.filter(y=> y !== props.authId);\n\n  // console.log(\"total messages..\",props.userMessages.length,\"list of senders/receivers:\"+test4_1);\n  test4_1.forEach(function (element, index){\n    let test5 = props.userMessages.filter(x=> x.sender.ref === element || x.receiver.ref === element);\n    // console.log(`\n    //   sender/receiver name:${element},\n    //   index: ${index},\n    //   messages to/from sender/receiver: ${JSON.stringify(test5)},\n    //   no of msgs from sender/receiver: ${test5.length}\n    //   `);\n    test1.push(\n      {username: element, messages: test5}\n    )\n  })\n  // const test5 = props.userMessages.filter(x=> x.sender.username === test4[6] || x.receiver.username === test4[6]);\n  // console.log(`\n  //   test: ${test},\n  //   test1: ${test1},\n  //   test2: ${test2},\n  //   test3: ${test3},\n  //   test4: ${test4},\n  //   `);\n\n  // console.log(\"final nested array...\",JSON.stringify(test1));\n  const userMessages = props.userMessages.map(message => {\n\n    return (\n      <UserMessageItem\n        key={message.path}\n        authId={props.authId}\n        _id={message._id}\n        date={message.date}\n        time={message.time}\n        subject={message.subject}\n        messageMessage={message.message}\n        sender={message.sender}\n        receiver={message.receiver}\n        message={message}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userMessages}</ul>;\n};\n\nexport default userMessageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userActivityItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.activityDate}\n      </Card.Text>\n      <Card.Text>\n        Request: {props.request}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userActivityItem;\n","import React from 'react';\n\nimport UserActivityItem from './UserItem/UserActivityItem';\nimport './UserList.css';\n\nconst userActivityList = props => {\n\n  const activity = props.userActivity.map(activity => {\n    const activityDate = new Date (activity.date.substr(0,10)*1000).toISOString().slice(0,10);\n    return (\n      <UserActivityItem\n        key={activity.request}\n        activity={activity}\n        date={activityDate}\n        request={activity.request}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{activity}</ul>;\n};\n\nexport default userActivityList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport './CreateUserForm.css';\n\nconst UpdateUserBasicForm = (props) => {\n\n  const {...user} = props.user;\n  const [dob, setDob] = useState(new Date());\n  const prevDob = new Date(user.dob.substr(0,9)*1000).toISOString().slice(0,10)\n\n  const handleChangeDob = date => {\n    setDob(date);\n    console.log(`Dob ${dob}`);\n   }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder={user.contact.email}/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder={user.password}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.name}/>\n</Form.Group>\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control type=\"text\" placeholder={user.role}/>\n  // </Form.Group>\n}\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.username} />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone2}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B: {prevDob}</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.dob}/>\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={user.bio}/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateUserFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>contact.email</option>\n    <option>password</option>\n    <option>name</option>\n    <option>username</option>\n    <option>dob</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>bio</option>\n    <option>points</option>\n    <option>verification.type</option>\n    <option>verification.verified</option>\n    <option>verification.code</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserAddressForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserAddressForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserProfileImageForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilename\">\n    <Form.Label>Filename</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filename\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFiletype\">\n    <Form.Label>Filetype</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilepath\">\n    <Form.Label>Link Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"link address\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserProfileImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserSocialMediForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPlatform\">\n    <Form.Label>Platform</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Platform\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridHandle\">\n    <Form.Label>Handle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Handle\"/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridLink\">\n    <Form.Label>Link</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Link\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserSocialMediForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserInterestsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridInterests\">\n    <Form.Label>Interests</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"interest, interest, interests\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserInterestsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserTagsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Tags</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"tag, tag, tags\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserTagsForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst AddUserPaymentInfoForm = (props) => {\n\n  const [payInfoDate, setPayInfoDate] = useState(new Date());\n  const handleChangePayInfoDate = date => {\n    setPayInfoDate(date);\n    console.log(`PayInfoDate ${payInfoDate}`);\n   }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"\">\n    <Form.Label>Date</Form.Label>\n    <DatePicker className=\"\" id=\"paymentInfoDate\"\n      selected={payInfoDate}\n      onChange={handleChangePayInfoDate}\n    />\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control as=\"select\">\n    <option>type a</option>\n    <option>type 2</option>\n    </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Description\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridBody\">\n    <Form.Label>Body</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Body\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoPrimaryCheckbox\">\n    <Form.Label>Primary</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPaymentInfoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPointsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPoints\">\n    <Form.Label>Points</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"point amount\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPointsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPerkForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Perk Id: {props.selectedPerk._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPerkForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPromoForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Promo Id: {props.selectedPromo._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPromoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserFriendForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Friend Id: {props.requestingFriendId} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserFriendForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateMessageForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Message Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridSubject\">\n  <Form.Label>Subject</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Subject\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridReceiver\">\n  <Form.Label>Receiver: {props.receiver.username}</Form.Label>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridMessage\">\n  <Form.Label>Message</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Message\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateMessageForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nimport UserAddressList from '../../Users/UserList/UserAddressList';\n\nconst CreateOrderForm = (props) => {\n  const {...user} = props.user;\n  const userCartLessonSkus = user.cart.map(x => x.lesson.sku)\n\n    const addressTypes = user.addresses.map(address => console.log(address.type));\n    const billingAddresses = user.addresses.filter(address => address.type === 'Billing');\n    const shippingAddresses = user.addresses.filter(address => address.type === 'Shipping')\n    const primaryShippingAddresses = shippingAddresses.filter(address => address.primary === true)\n    const primaryBillingAddresses = billingAddresses.filter(address => address.primary === true)\n    const primaryShippingAddress = primaryShippingAddresses[0];\n    const primaryBillingAddress = primaryBillingAddresses[0];\n    console.log(`\n        addressTypes: ${addressTypes},\n        billingAddresses: ${billingAddresses.length}\n        shippingAddresses: ${shippingAddresses.length},\n        primaryShippingAddresses: ${primaryShippingAddresses.length},\n        primaryBillingAddresses: ${primaryBillingAddresses.length},\n      `);\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTotalA\">\n  <Form.Label>TotalA</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" placeholder=\"Enter TotalA\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTotalB\">\n  <Form.Label>TotalB</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" placeholder=\"Enter TotalB\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTaxDescription\">\n  <Form.Label>TaxDescription</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter TaxDescription\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTaxAmount\">\n  <Form.Label>TaxAmount</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" placeholder=\"Enter TaxAmount\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Description\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPayment\">\n  <Form.Label>Payment</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Payment\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridShipping\">\n  <Form.Label>Shipping</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Shipping\"/>\n</Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressNumber\">\n    <Form.Label>BillingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryBillingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressStreet\">\n    <Form.Label>BillingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressTown\">\n    <Form.Label>BillingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCity\">\n    <Form.Label>BillingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCountry\">\n    <Form.Label>BillingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressPostalCode\">\n    <Form.Label>BillingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressNumber\">\n    <Form.Label>ShippingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryShippingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressStreet\">\n    <Form.Label>ShippingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressTown\">\n    <Form.Label>ShippingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCity\">\n    <Form.Label>ShippingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCountry\">\n    <Form.Label>ShippingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressPostalCode\">\n    <Form.Label>ShippingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateOrderForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport UserAddressList from './UserList/UserAddressList';\nimport UserProfileImageList from './UserList/UserProfileImageList';\nimport UserSocialMediaList from './UserList/UserSocialMediaList';\n\nimport UserPerkList from './UserList/UserPerkList';\nimport UserPromoList from './UserList/UserPromoList';\n\nimport UserInterestList from './UserList/UserInterestList';\nimport UserTagList from './UserList/UserTagList';\n\nimport UserFriendList from './UserList/UserFriendList';\nimport UserFriendRequestList from './UserList/UserFriendRequestList';\nimport UserCartItemList from './UserList/UserCartItemList';\nimport UserBookedLessonList from './UserList/UserBookedLessonList';\nimport UserLikedLessonList from './UserList/UserLikedLessonList';\nimport UserAttendedLessonList from './UserList/UserAttendedLessonList';\nimport UserTaughtLessonList from './UserList/UserTaughtLessonList';\nimport UserPaymentInfoList from './UserList/UserPaymentInfoList';\n\nimport UserOrderList from './UserList/UserOrderList';\nimport UserReviewList from './UserList/UserReviewList';\nimport UserMessageList from './UserList/UserMessageList';\nimport UserActivityList from './UserList/UserActivityList';\n\nimport UpdateUserBasicForm from '../Forms/user/UpdateUserBasicForm';\nimport UpdateUserFieldForm from '../Forms/user/UpdateUserFieldForm';\n\nimport AddUserAddressForm from '../Forms/user/AddUserAddressForm';\nimport AddUserProfileImageForm from '../Forms/user/AddUserProfileImageForm';\nimport AddUserSocialMediaForm from '../Forms/user/AddUserSocialMediaForm';\n\nimport AddUserInterestsForm from '../Forms/user/AddUserInterestsForm';\nimport AddUserTagsForm from '../Forms/user/AddUserTagsForm';\n\nimport AddUserPaymentInfoForm from '../Forms/user/AddUserPaymentInfoForm';\n\nimport AddUserPointsForm from '../Forms/user/AddUserPointsForm';\nimport AddUserPerkForm from '../Forms/user/AddUserPerkForm';\nimport AddUserPromoForm from '../Forms/user/AddUserPromoForm';\n\nimport AddUserFriendForm from '../Forms/user/AddUserFriendForm';\nimport CreateMessageForm from '../Forms/message/CreateMessageForm';\nimport CreateOrderForm from '../Forms/order/CreateOrderForm';\n\nimport './thisUserProfile.css';\n\nconst thisUserProfile = (props) => {\nconst {...user} = props.user;\nconst userAddress = user.address;\nconst userDob = new Date(user.dob.substr(0,9)*1000).toISOString().slice(0,10);\n\nlet sentRequests = [];\nlet receivedRequests = [];\nif (user.friendRequests !== []) {\n  // console.log('!!!',user._id, user.friendRequests, user.friendRequests[0].sender._id, user.friendRequests[0].receiver._id);\n  sentRequests = user.friendRequests.filter(request => request.sender._id === user._id);\n  receivedRequests = user.friendRequests.filter(request => request.receiver._id === user._id);\n}\n// console.log('sentRequests',sentRequests,'receivedRequests',receivedRequests);\nconst publicUser = user.public.toString()\nconsole.log(user.cart);\n\n  return (\n\n  <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\">\n    <Tab eventKey=\"\" title=\"Details:\" disabled>\n    </Tab>\n    <Tab eventKey=\"Basic\" title=\"Basic\">\n    <Card className=\"UserDetailCard\">\n    <Card.Body>\n      <Card.Title><span className=\"ul\">Your Profile Details</span></Card.Title>\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Name:</span> {user.name}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">D.O.B:</span> {userDob}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Age:</span> {user.age}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone:</span> {user.contact.phone}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone 2:</span> {user.contact.phone2}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Email:</span> {user.contact.email}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Points :</span> {user.points}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Public :</span> {user.public.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn :</span> {user.loggedIn.toString()}\n          </Card.Text>\n\n          <Card.Text>\n            <span className=\"bold\">Verification :</span> {user.verification.type}, {user.verification.verified.toString()}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdate}>Edit</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdateField}>Edit 1 Field</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"points\")}>+ Points</Button>\n\n      {props.updating === true &&\n        props.userAddField === \"basic\" && (\n        <UpdateUserBasicForm\n          canCancelProfile\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditBasic}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.updating === true &&\n        props.updatingField === true && (\n        <UpdateUserFieldForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditField}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.userAddField === \"points\" && (\n        <AddUserPointsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPoints}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n    </Card.Body>\n    </Card>\n    </Tab>\n\n    <Tab eventKey=\"address\" title=\"address\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"address\")}>+ Address</Button>\n    {props.userAddField === \"address\" && (\n        <AddUserAddressForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddAddress}\n          confirmText=\"Confirm\"\n        />\n    )}\n    {user.addresses !== null &&\n      user.addresses !== [] && (\n        <UserAddressList\n          userAddresses={user.addresses}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAddress}\n          makeAddressPrimary={props.makeAddressPrimary}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"profileImages\" title=\"profileImages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"profileImage\")}>+ Image</Button>\n    {props.userAddField === \"profileImage\" && (\n        <AddUserProfileImageForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddProfileImage}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.profileImages !== null &&\n      user.profileImages !== [] && (\n        <UserProfileImageList\n          userProfileImages={user.profileImages}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteProfileImage}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"socialMedia\" title=\"socialMedia\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"socialMedia\")}>+ Social Media</Button>\n    {props.userAddField === \"socialMedia\" && (\n        <AddUserSocialMediaForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddSocialMedia}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.socialMedia !== null &&\n      user.socialMedia !== [] && (\n        <UserSocialMediaList\n          userSocialMedia={user.socialMedia}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteSocialMedia}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"perks\" title=\"perks\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"perk\")}>+ Perk</Button>\n\n    {props.userAddField === \"perk\" &&\n    props.selectedPerk !== null && (\n        <AddUserPerkForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPerk}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          perk={props.selectedPerk}\n        />\n      )}\n\n    {user.perks !== null &&\n      user.perks !== [] && (\n        <UserPerkList\n          userPerks={user.perks}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePerk}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"promos\" title=\"promos\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"promo\")}>+ Promo</Button>\n\n    {props.userAddField === \"promo\" &&\n      props.selectedPromo !== null && (\n        <AddUserPromoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPromo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          promo={props.selectedPromo}\n        />\n    )}\n\n    {user.promos !== null &&\n      user.promos !== [] && (\n        <UserPromoList\n          userPromos={user.promos}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePromo}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"interests\" title=\"interests\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"interests\")}>+ Interests</Button>\n\n    {props.userAddField === \"interests\" && (\n        <AddUserInterestsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddInterests}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.interests !== null &&\n      user.interests !== [] && (\n        <UserInterestList\n          userInterests={user.interests}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteInterest}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"tags\" title=\"tags\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"tags\")}>+ Tags</Button>\n\n    {props.userAddField === \"tags\" && (\n        <AddUserTagsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddTags}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.tags !== null &&\n      user.tags !== [] && (\n        <UserTagList\n          userTags={user.tags}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteTag}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"friends\" title=\"friends\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"friend\")}>+ Friend</Button>\n\n    {props.userAddField === \"friend\" && (\n        <AddUserFriendForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddFriend}\n          confirmText=\"Confirm\"\n          requestingFriend={props.requestingFriend}\n          user={props.user}\n        />\n      )}\n\n    {user.friends !== null &&\n      user.friends !== [] && (\n        <UserFriendList\n          userFriends={user.friends}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteFriend}\n          onSelect={props.userSelectFriend}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"friendRequests\" title=\"friendRequests\">\n\n    {user.friendRequests !== null &&\n      user.friendRequests !== [] && (\n        <UserFriendRequestList\n          userFriendRequests={receivedRequests}\n          authId={props.authId}\n          onReject={props.userRejectFriendRequest}\n          onAccept={props.userAcceptFriendRequest}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"cart\" title=\"cart\">\n\n    {user.cart !== null &&\n      user.cart !== [] && (\n    <Button variant=\"primary\" onClick={props.startCartCheckout.bind(this, user.cart)}>\n      Checkout\n    </Button>\n    )}\n\n    {props.creatingOrder === true && (\n      <CreateOrderForm\n        user={user}\n        onCancel={props.cancelCartCheckout}\n        onConfirm={props.createOrder}\n        addAddressToOrder={props.addAddressToOrder}\n        orderBillingAddress={props.orderBillingAddress}\n        orderShippingAddress={props.orderShippingAddress}\n      />\n    )}\n\n    {user.cart !== null &&\n      user.cart !== [] && (\n        <UserCartItemList\n          userCartItems={user.cart}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteCartItem}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"likedLessons\" title=\"likedLessons\">\n\n    {user.likedLessons !== null &&\n      user.likedLessons!== [] && (\n        <UserLikedLessonList\n          userLikedLessons={user.likedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteLikedLesson}\n        />\n      )}\n\n    </Tab>\n    <Tab eventKey=\"bookedLessons\" title=\"bookedLessons\">\n\n    {user.bookedLessons !== null &&\n      user.bookedLessons!== [] && (\n        <UserBookedLessonList\n          userBookedLessons={user.bookedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteBookedLesson}\n        />\n      )}\n\n    </Tab>\n    <Tab eventKey=\"attendedLessons\" title=\"attendedLessons\">\n\n    {user.attendedLessons !== null &&\n      user.attendedLessons!== [] && (\n        <UserAttendedLessonList\n          userAttendedLessons={user.attendedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAttendedLesson}\n        />\n      )}\n\n    </Tab>\n    <Tab eventKey=\"taughtLessons\" title=\"taughtLessons\">\n\n    {\n      user.taughtLessons !== null &&\n      user.taughtLessons!== [] && (\n        <UserTaughtLessonList\n          userTaughtLessons={user.taughtLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteTaughtLesson}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"paymentInfo\" title=\"paymentInfo\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"paymentInfo\")}>+ PaymentInfo</Button>\n\n    {props.userAddField === \"paymentInfo\" && (\n        <AddUserPaymentInfoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPaymentInfo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.paymentInfo !== null &&\n      user.paymentInfo !== [] && (\n        <UserPaymentInfoList\n          userPaymentInfo={user.paymentInfo}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePaymentInfo}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"messages\" title=\"messages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartCreateMessage}>+ Message</Button>\n\n    {props.messageReceiver === null && (\n      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\" >Select someone to message</Button>\n    )}\n\n    {props.userAddField === \"message\" &&\n      props.messageReceiver !== null && (\n        <CreateMessageForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userCreateMessage}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          receiver={props.messageReceiver}\n        />\n    )}\n\n    {user.messages !== null &&\n      user.messages !== [] && (\n        <UserMessageList\n          userMessages={user.messages}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteMessage}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"orders\" title=\"orders\">\n\n    {user.orders !== null &&\n      user.orders !== [] && (\n        <UserOrderList\n          userOrders={user.orders}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteOrder}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"reviews\" title=\"reviews\">\n\n    {user.reviews !== null &&\n      user.reviews !== [] && (\n        <UserReviewList\n          userReviews={user.reviews}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteReview}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"meeting\" title=\"meeting\">\n      <p>session details go here</p>\n      <p>zoom mtg create button, dom element etc</p>\n    </Tab>\n\n    <Tab eventKey=\"activity\" title=\"activity\">\n\n    {user.activity !== null &&\n      user.activity !== [] && (\n        <UserActivityList\n          userActivity={user.activity}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteActivity}\n        />\n      )}\n\n    </Tab>\n  </Tabs>\n  );\n}\n\nexport default thisUserProfile;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport Spinner from '../../components/Spinner/Spinner';\n// import AttachmentViewer from '../../components/AttachmentViewer';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\n\nimport ThisUserProfile from '../../components/Users/thisUserProfile';\n\nimport './Users.css';\n// import io from 'socket.io-client';\n\nclass UserProfile extends Component {\n  state = {\n    user: null,\n    users: [],\n    updating: false,\n    adding: false,\n    deleting: false,\n    updatingField: false,\n    isLoading: false,\n    userUpdateField: null,\n    userAddField: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    canDelete: null,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    messagesLoaded: false,\n    userMessages: null,\n    finalConfirmation: false,\n    socketMsg: \"\",\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    selectedFriendRequest: null,\n    requestingFriend: null,\n    userSelectedFriend: null,\n    orderBillingAddress: null,\n    orderShippingAddress: null,\n  };\n\n  isActive = true;\n  static contextType = AuthContext;\n\n  // constructor(props){\n  //     super(props);\n  //     this.socket = io('http://localhost:7770');\n  //   }\n\n  componentDidMount() {\n\n    this.getThisUser();\n    // const conversationId = this.context.activityId;\n    // this.socket.emit('msg_subscribe', 'msg'+conversationId);\n    // this.socket.emit('trans_subscribe', 'trans'+conversationId);\n    // console.log(\"listening for tokens & pms...\");\n    // this.socket.on('conversation private post', function(data) {\n    //   console.log(\"you got a new message..\",data);\n    //   addMessage(data);\n    // });\n    // const addMessage = data => {\n    //   this.setState({\n    //     userAlert: `New Msg!!\n    //       Fr:   ${data.message.senderName},\n    //       Msg:   ${data.message.message}`})\n    // };\n\n  }\n\n  onStartUpdate = () => {\n    this.setState({ updating: true, userAddField: 'basic' });\n  };\n  onStartUpdateField = () => {\n    this.setState({ updating: true, updatingField: true });\n  };\n  onStartAdd = (args) => {\n    this.setState({adding: true, userAddField: args})\n  }\n  addUserField = (args) => {\n    this.setState({adding: true, userAddField: args})\n  }\n  startCreateMessage = () => {\n    if (this.context.receiver === null) {\n      this.setState({userAlert: \"select a receiver 1st...\"});\n    }\n    this.setState({adding: true, userAddField: \"message\"})\n  }\n\n  startCartCheckout = () => {\n    this.setState({creatingOrder: true})\n  }\n  cancelCartCheckout = () => {\n    this.setState({creatingOrder: false})\n  }\n\n  userEditBasic = (event) => {\n    this.setState({ updating: false, userAlert: \"Updating selected Staff ...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    // let role = this.context.user.role;\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let bio = event.target.formGridBio.value;\n\n    if (contactEmail.trim().length === 0 ) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      contactEmail = this.context.user.contact.email;\n    }\n    if (password.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      password = this.context.user.password;\n    }\n    if (name.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      name = this.context.user.name;\n    }\n    if (username.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      username = this.context.user.username;\n    }\n    // if (role.trim().length === 0) {\n    //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n    //   role = this.state.user.role;\n    // }\n    if (dob.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      dob = this.context.user.dob;\n    }\n    if (bio.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      bio = this.context.user.bio;\n    }\n\n    const requestBody = {\n      query: `\n          mutation {updateUserBasic(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              name:\"${name}\",\n              password:\"${password}\",\n              username:\"${username}\",\n              dob:\"${dob}\",\n              contactEmail:\"${contactEmail}\",\n              contactPhone:\"${contactPhone}\",\n              contactPhone2:\"${contactPhone2}\",\n              bio:\"${bio}\"\n            })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const updatedUser = resData.data.updateUserBasic;\n        this.context.user = updatedUser;\n        const responseAlert = JSON.stringify(resData.data.updateUserBasic).slice(2,25);\n\n        this.setState({ userAlert: responseAlert, user: updatedUser, activityA: requestBody})\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    };\n  userEditField = (event) => {\n      this.setState({ updatingField: false, userAlert: \"Updating selected Staff by Field...\" });\n      const token = this.context.token;\n      const activityId = this.context.activityId;\n      let userId = activityId;\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        // field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      const requestBody = {\n        query:`\n          mutation {updateUserByField(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            field:\"${field}\",\n            query:\"${query}\")\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n            this.setState({userAlert: \"Failed!\"})\n          }\n          return res.json();\n        })\n        .then(resData => {\n          const responseAlert = JSON.stringify(resData.data.updateUserByField).slice(2,25);\n          this.setState({ userAlert: responseAlert, user: resData.data.updateUserByField, activityA: requestBody})\n          this.context.user = this.state.user;\n          // logUserActivity();\n        })\n        .catch(err => {\n          this.setState({userAlert: err});\n        });\n    }\n  userAddPoints = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding points for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        let userId = activityId;\n        const points = event.target.formGridPoints.value;\n\n        const requestBody = {\n          query:`\n            mutation {addUserPoints(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              userInput:{\n                points:${points}\n              })\n              {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n        fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n              this.setState({userAlert: 'Failed!'});\n            }\n            return res.json();\n          })\n          .then(resData => {\n\n            const responseAlert = JSON.stringify(resData.data.addUserPoints).slice(2,25);\n            this.setState({userAlert: responseAlert, user: resData.data.addUserPoints, activityA: requestBody})\n            this.context.user = this.state.user;\n            // logUserActivity();\n          })\n          .catch(err => {\n            this.setState({userAlert: err});\n          });\n      };\n  userAddAddress = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = event.target.formGridAddressType.value;\n    const addressNumber = event.target.formGridAddressNumber.value;\n    const addressStreet = event.target.formGridAddressStreet.value;\n    const addressTown = event.target.formGridAddressTown.value;\n    const addressCity = event.target.formGridAddressCity.value;\n    const addressCountry = event.target.formGridAddressCountry.value;\n    const addressPostalCode = event.target.formGridAddressPostalCode.value;\n\n    if (\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0\n    ) {\n      console.log('blank fields detected.. please check your info and try again..');\n      this.setState({userAlert: 'blank fields detected.. please check your info and try again..'})\n      return\n    }\n\n    const requestBody = {\n      query:`\n        mutation {addUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserAddress).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserAddress, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAddress = (args) => {\n    console.log('userDeleteAddress...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n            addressPrimary:${addressPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserAddress).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserAddress, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  makeAddressPrimary = (args) => {\n    console.log('makeAddressPrimary...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {setUserAddressPrimary(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.setUserAddressPrimary).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.setUserAddressPrimary, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddProfileImage = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = event.target.formGridFilename.value;\n    const profileImageType = event.target.formGridFiletype.value;\n    const profileImagePath = event.target.formGridFilepath.value;\n    const requestBody = {\n      query:`\n        mutation {addUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserProfileImage).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserProfileImage, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteProfileImage = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = args.name;\n    const profileImageType = args.type;\n    const profileImagePath = args.path;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserProfileImage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserProfileImage, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddSocialMedia = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = event.target.formGridPlatform.value;\n    const socialMediaHandle = event.target.formGridHandle.value;\n    const socialMediaLink = event.target.formGridLink.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserSocialMedia).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserSocialMedia, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteSocialMedia = (args) => {\n    console.log('userDeleteSocialMedia');\n    this.setState({ deleting: true, userAlert: \"deleting socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = args.platform;\n    const socialMediaHandle = args.handle;\n    const socialMediaLink = args.link\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          }){_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserSocialMedia).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserSocialMedia, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPaymentInfo = (event) => {\n    console.log('userAddPaymentInfo');\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n\n    const paymentInfoDate = event.target.paymentInfoDate.value;\n    const paymentInfoType = event.target.formGridPaymentInfoType.value;\n    const paymentInfoDescription = event.target.formGridDescription.value;\n    const paymentInfoBody = event.target.formGridBody.value;\n    let paymentInfoPrimary = event.target.formGridPaymentInfoPrimaryCheckbox.checked;\n    const paymentInfoValid = true;\n\n    const requestBody = {\n      query:`\n        mutation {addUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary},\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserPaymentInfo).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserPaymentInfo, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeletePaymentInfo = (args) => {\n    console.log('userDeletePaymentInfo',JSON.stringify(args));\n    this.setState({ deleting: true, userAlert: \"deleting paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const paymentInfoDate = args.date;\n    const paymentInfoType = args.type;\n    const paymentInfoDescription = args.description;\n    const paymentInfoBody = args.body;\n    const paymentInfoValid = args.valid;\n    const paymentInfoPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserPaymentInfo).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPaymentInfo, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddInterests = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interests = event.target.formGridInterests.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserInterests(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interests:\"${interests}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const activityLog = 'mutation_addUserInterests_origin_'+activityId+'_target_'+userId+'_body_'+interests+'';\n        const responseAlert = JSON.stringify(resData.data.addUserInterests).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserInterests, activityA: activityLog})\n        this.context.user = this.state.user;\n        this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteInterest = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interest = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserInterest(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interest:\"${interest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserInterest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserInterest, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddTags = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding tags for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query:`\n      mutation {addUserTags(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tags:\"${tags}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserTags).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserTags, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteTag = (args) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"deleting tag for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tag = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteUserTag(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tag:\"${tag}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserTag).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.deleteUserTag, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPerk  = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding perk for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        const perkId = this.context.selectedPerk._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPerk).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPerk, activityA: requestBody})\n        //     this.context.user = this.state.user;\n        //     // logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      }\n  userDeletePerk = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting perk for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.deleteUserPerk).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPerk, activityA: requestBody})\n    //     this.context.user = this.state.user;\n    //     // logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAddPromo  = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding promo for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        const promoId = this.context.selectedPromo._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPromo).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPromo, activityA: requestBody})\n        //     this.context.user = this.state.user;\n        //     // logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      }\n  userDeletePromo = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.userDeletePromo).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.userDeletePromo, activityA: requestBody})\n    //     this.context.user = this.state.user;\n    //     // logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAcceptFriendRequest = (args) => {\n    console.log('userAcceptFriendRequest...');\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = args.receiver._id;\n    const friendId = args.sender._id;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const activityLog = 'mutation_addUserFriend_origin_'+activityId+'_target_'+userId+'_body_'+friendId+'';\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: activityLog})\n        this.context.user = this.state.user;\n        this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    // let requestingFriend = event;\n    // let requestingFriend = null;\n    // if (args.sender._id === this.context.activityId) {\n    //   requestingFriend = args.receiver;\n    // }\n    // if (args.receiver._id === this.context.activityId) {\n    //   requestingFriend = args.sender;\n    // }\n    // return\n    // this.setState({requestingFriend: requestingFriend});\n  };\n  userRejectFriendRequest = (args) => {\n    console.log('userRejectFriendRequest...');\n    this.setState({ deleting: true, userAlert: \"deleting friend request for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const senderId = args.sender._id;\n    const receiverId = args.receiver._id;\n    const date = args.date;\n\n    const requestBody = {\n      query:`\n      mutation {deleteFriendRequest(\n        activityId:\"${activityId}\",\n        senderId:\"${senderId}\",\n        receiverId:\"${receiverId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteFriendRequest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteFriendRequest, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddFriend = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.requestingFriend;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userSelectFriend = (args) => {\n    this.setState({userSelectedFriend: args});\n  };\n  userDeleteFriend = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.userSelectedFriend._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserFriend(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          friendId:\"${friendId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserFriend, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteCartItem = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const lessonId = args.lesson;\n    const dateAdded = args.dateAdded;\n    const sessionDate = args.sessionDate;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserCartLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          dateAdded:\"${dateAdded}\",\n          sessionDate:\"${sessionDate}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserCartLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserCartLesson, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteBookedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const date = args.date;\n    const lessonId = args.ref;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserBookedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          date:\"${date}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserBookedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserBookedLesson, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteLikedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting likeLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n  };\n  userDeleteAttendedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting attendedLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n  };\n  userDeleteTaughtLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting taughtLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n  };\n\n  addAddressToOrder = (event) => {\n    event.preventDefault();\n    // const address = JSON.stringify(event);\n    console.log(event.target.value.slice(9,16));\n    let type = event.target.value.slice(9,16);\n    if (type === 'Billing') {\n      console.log('beep');\n      this.setState({orderBillingAddress: event.target.value})\n    }\n    if (type === 'Shipping') {\n      console.log('beep');\n      this.setState({orderShippingAddress: event.target.value})\n    }\n  }\n  // orderStripePayment = () => {\n    // const userCartLessonSkus = user.cart.map(x => x.lesson.sku)\n    // console.log(userCartLessonSkus);\n  // }\n  createOrder = (event) => {\n    event.preventDefault();\n    this.setState({ creatingOrder: false, userAlert: \"creating order for user...\" });\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const buyerId = activityId;\n    const receiverId = activityId;\n\n    const type = event.target.formGridType.value;\n    const totalA = event.target.formGridTotalA.value;\n    const totalB = event.target.formGridTotalB.value;\n    const taxDescription = event.target.formGridTaxDescription.value;\n    const taxAmount = event.target.formGridTaxAmount.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const payment = event.target.formGridPayment.value;\n    const shipping = event.target.formGridShipping.value;\n    const billingAddressNumber = event.target.formGridBillingAddressNumber.value;\n    const billingAddressStreet = event.target.formGridBillingAddressStreet.value;\n    const billingAddressTown = event.target.formGridBillingAddressTown.value;\n    const billingAddressCity = event.target.formGridBillingAddressCity.value;\n    const billingAddressCountry = event.target.formGridBillingAddressCountry.value;\n    const billingAddressPostalCode = event.target.formGridBillingAddressPostalCode.value;\n    const shippingAddressNumber = event.target.formGridShippingAddressNumber.value;\n    const shippingAddressStreet = event.target.formGridShippingAddressStreet.value;\n    const shippingAddressTown = event.target.formGridShippingAddressTown.value;\n    const shippingAddressCity = event.target.formGridShippingAddressCity.value;\n    const shippingAddressCountry = event.target.formGridShippingAddressCountry.value;\n    const shippingAddressPostalCode = event.target.formGridShippingAddressPostalCode.value;\n\n    const requestBody = {\n      query:`\n        mutation {createOrder(\n          activityId:\"${activityId}\",\n          buyerId:\"${buyerId}\",\n          receiverId:\"${receiverId}\",\n          orderInput:{\n            type:\"${type}\",\n            totalA:${totalA},\n            totalB:${totalB},\n            taxDescription:\"${taxDescription}\",\n            taxAmount:${taxAmount},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            payment:\"${payment}\",\n            shipping:\"${shipping}\",\n            billingAddressNumber:${billingAddressNumber},\n            billingAddressStreet:\"${billingAddressStreet}\",\n            billingAddressTown:\"${billingAddressTown}\",\n            billingAddressCity:\"${billingAddressCity}\",\n            billingAddressCountry:\"${billingAddressCountry}\",\n            billingAddressPostalCode:\"${billingAddressPostalCode}\",\n            shippingAddressNumber:${shippingAddressNumber},\n            shippingAddressStreet:\"${shippingAddressStreet}\",\n            shippingAddressTown:\"${shippingAddressTown}\",\n            shippingAddressCity:\"${shippingAddressCity}\",\n            shippingAddressCountry:\"${shippingAddressCountry}\",\n            shippingAddressPostalCode:\"${shippingAddressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.createOrder).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.createOrder, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  userDeleteOrder = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting order for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const orderId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserOrder(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          orderId:\"${orderId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserOrder).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserOrder, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteReview = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const reviewId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          reviewId:\"${reviewId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserReview).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserReview, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userCreateMessage = (event) => {\n\n    this.setState({ adding: false });\n    const token = this.context.token;\n    const receiver = this.context.receiver;\n    const receiverId = this.context.receiver._id;\n    const receiverRole = this.context.receiver.role;\n    const role = this.context.role;\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const senderName = this.state.user.username;\n    const date = new Date();\n    const timeString1 = date.toISOString().slice(11,16);\n    const timeString2 = date.toLocaleString().slice(11,16);\n    const type = event.target.formGridTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n    const msgObject = {\n      date: date,\n      time: timeString2,\n      type: type,\n      senderName: senderName,\n      subject: subject,\n      message: message,\n    };\n\n    const requestBody = {\n      query:`\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n        {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    this.sendSocketMessage(msgObject);\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"resData\",resData.data.createMessage);\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(2,25);;\n        this.setState({ userAlert: responseAlert, activityA: requestBody});\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  userDeleteMessage = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting message for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const messageId = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteMessage(\n        activityId:\"${activityId}\",\n        messageId:\"${messageId}\",)\n      {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteMessage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteMessage, activityA: requestBody})\n        this.context.user = this.state.user;\n        // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n\n\n  getThisUser() {\n    this.setState({ isLoading: true });\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        let errors = null;\n        if (\n          resData.errors ||\n          JSON.stringify(resData).slice(2,7) === 'error'\n        ) {\n          errors = JSON.stringify({...resData.errors});\n          this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        }\n\n          const thisUser = resData.data.getThisUser;\n          // console.log(thisUser);\n          this.context.user = thisUser;\n          if (this.isActive) {\n          this.setState({ user: thisUser, isLoading: false, activityA: requestBody });\n          }\n          if (sessionStorage.getItem('token')) {\n            this.setState({userAlert: \"Welcome Back...\"})\n          }\n          if (thisUser.name === \"Lord-of-the-Manor\"){\n            this.setState({canDelete: true, userAlert: \"Mi'Lord!!\"})\n          }\n          // logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",message);\n\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n      addMessage(data)\n    })\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  }\n  userDeleteActivity = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const activityDate = args.date;\n    const activityRequest = args.request;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserActivity(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${activityRequest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserActivity).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  modalCancelHandler = () => {\n    this.setState({ updating: false, updatingField: false, adding: false, userAddField: null  });\n  };\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AlertBox\n          authId={this.context.activityId}\n          alert={this.state.userAlert}\n        />\n\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n        <SidebarControl\n          onShowSidebar={this.showSidebar}\n          onHideSidebar={this.hideSidebar}\n        />\n        <Row>\n\n        {this.state.sidebarShow === true &&\n          this.state.user !== null && (\n          <Col md={2} className=\"MasterCol1\">\n          <SidebarPage\n            you={this.state.user}\n            authId={this.context.activityId}\n          />\n          </Col>\n        )}\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n          <div className=\"containerProfile\">\n          {this.state.isLoading ? (\n            <Spinner />\n          ) : (\n            <Row>\n              <Col>\n              {this.state.user !== null && (\n                  <ThisUserProfile\n                    user={this.state.user}\n                    authId={this.context.activityId}\n                    onCancel={this.modalCancelHandler}\n                    canDelete={this.state.canDelete}\n\n                    onStartUpdate={this.onStartUpdate}\n                    onStartUpdateField={this.onStartUpdateField}\n                    onStartAdd={this.onStartAdd}\n\n                    userEditBasic={this.userEditBasic}\n                    userEditField={this.userEditField}\n                    userAddPoints={this.userAddPoints}\n                    userAddAddress={this.userAddAddress}\n                    makeAddressPrimary={this.makeAddressPrimary}\n                    userDeleteAddress={this.userDeleteAddress}\n                    userAddProfileImage={this.userAddProfileImage}\n                    userDeleteProfileImage={this.userDeleteProfileImage}\n\n                    userAddSocialMedia={this.userAddSocialMedia}\n                    userDeleteSocialMedia={this.userDeleteSocialMedia}\n\n                    userAddPaymentInfo={this.userAddPaymentInfo}\n                    userDeletePaymentInfo={this.userDeletePaymentInfo}\n\n                    selectedPerk={this.context.selectedPerk}\n                    userAddPerk={this.userAddPerk}\n                    userDeletePerk={this.userDeletePerk}\n\n                    selectedPromo={this.context.selectedPromo}\n                    userAddPromo={this.userAddPromo}\n                    userDeletePromo={this.userDeletePromo}\n\n                    userAddInterests={this.userAddInterests}\n                    userDeleteInterest={this.userDeleteInterest}\n\n                    userAddTags={this.userAddTags}\n                    userDeleteTag={this.userDeleteTag}\n\n                    userRejectFriendRequest={this.userRejectFriendRequest}\n                    userAcceptFriendRequest={this.userAcceptFriendRequest}\n                    userDeleteFriend={this.userDeleteFriend}\n                    userSelectFriend={this.userSelectFriend}\n                    userAddFriend={this.userAddFriend}\n                    userDeleteFriend={this.userDeleteFriend}\n\n                    userDeleteCartItem={this.userDeleteCartItem}\n                    userDeleteLikedLesson={this.userDeleteLikedLesson}\n                    userDeleteBookedLesson={this.userDeleteBookedLesson}\n                    userDeleteAttendedLesson={this.userDeleteAttendedLesson}\n                    userDeleteTaughtLesson={this.userDeleteTaughtLesson}\n\n                    addAddressToOrder={this.addAddressToOrder}\n                    orderBillingAddress={this.state.orderBillingAddress}\n                    orderShippingAddress={this.state.orderShippingAddress}\n                    startCartCheckout={this.startCartCheckout}\n                    cancelCartCheckout={this.cancelCartCheckout}\n                    createOrder={this.createOrder}\n                    userDeleteOrder={this.userDeleteOrder}\n                    userDeleteReview={this.userDeleteReview}\n                    userDeleteActivity={this.userDeleteActivity}\n\n                    userCreateMessage={this.userCreateMessage}\n                    userDeleteMessage={this.userDeleteMessage}\n\n                    updating={this.state.updating}\n                    updatingField={this.state.updatingField}\n                    userAddField={this.state.userAddField}\n                    creatingOrder={this.state.creatingOrder}\n\n                    selectedUser={this.context.selectedUser}\n                    messageReceiver={this.context.receiver}\n                    requestingFriend={this.state.requestingFriend}\n                  />\n                )}\n\n              </Col>\n            </Row>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport SidebarControl from '../../components/SidebarControl';\nimport VerifyUserForm from '../../components/Forms/user/VerifyUserForm';\n\nimport UserProfile from '../user/UserProfile';\n\nclass AuthPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    model: {},\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    if (sessionStorage.getItem('token')) {\n      this.setState({userAlert: \"sessionStorage found...\",userSeshStore: true });\n      this.getThisUser();\n    }\n  }\n\n  retrieveLogin = () => {\n    // const activityId = sessionStorage.getItem('activityId');\n    // const token = sessionStorage.getItem('token');\n    //\n    // let requestBody = null;\n    //   requestBody = {\n    //     query: `\n    //       mutation {userOnline(\n    //         activityId:\"${activityId}\",\n    //         userId:\"${activityId}\"\n    //       )\n    //       {_id,password,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n    //     `};\n    //\n    // fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //     console.log(resData.data);\n    //     this.context.user = resData.data.userOnline\n    //     console.log(\"retrieving login\");\n    //     this.context.login(\n    //       sessionStorage.getItem('token'),\n    //       sessionStorage.getItem('activityId'),\n    //       sessionStorage.getItem('role'),\n    //       sessionStorage.getItem('tokenExpiration'),\n    //     );\n    //   })\n    //   .catch(err => {\n    //     if (this.isActive) {\n    //       this.setState({userAlert: err});\n    //     }\n    //   });\n\n      console.log(\"retrieving login\");\n      this.context.login(\n        sessionStorage.getItem('token'),\n        sessionStorage.getItem('activityId'),\n        sessionStorage.getItem('role'),\n        sessionStorage.getItem('tokenExpiration'),\n      );\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n\n    this.setState({ userAlert: \"Logging you in...\"})\n    const email = event.target.formBasicEmail.value;\n    const password = event.target.formBasicPassword.value;\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n    let requestBody = null;\n      requestBody = {\n        query: `\n          query {login(email:\"${email}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // let foo = res.json();\n          // console.log(res,res.body,foo);\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // let errors = null;\n        // if (\n        //   resData.errors ||\n        //   JSON.stringify(resData).slice(2,7) === 'error'\n        // ) {\n        //   errors = JSON.stringify({...resData.errors});\n        //   this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        // }\n        console.log(resData.data.login.error);\n        let responseAlert = JSON.stringify(resData.data).slice(2,25);\n        let error = null;\n        if (resData.data.login.error) {\n          error = resData.data.login.error;\n          responseAlert = error;\n        }\n\n        this.setState({userAlert: responseAlert})\n        let sessionStorageLoginInfo = null;\n\n        if (resData.data.login.token !== \"\") {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.activityId,\n            resData.data.login.role,\n            resData.data.login.tokenExpiration\n          );\n         sessionStorage.setItem('token', resData.data.login.token);\n         sessionStorage.setItem('activityId', resData.data.login.activityId);\n         sessionStorage.setItem('role', resData.data.login.role);\n         sessionStorage.setItem('tokenExpiration', resData.data.login.tokenExpiration);\n        }\n      })\n      .catch(err => {\n        if (this.isActive) {\n          this.setState({userAlert: err});\n        }\n        // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n  };\n\n  showSidebar = () => {\n        this.setState({\n          sidebarShow: true,\n          mCol2Size: 9\n        })\n    }\n\n  hideSidebar = () => {\n        this.setState({\n          sidebarShow: false,\n          mCol2Size: 11\n        })\n    }\n\n    getThisUser() {\n      // console.log(\"get this user...\");\n      const activityId = sessionStorage.getItem('activityId');\n      const token = sessionStorage.getItem('token');\n      const requestBody = {\n        query: `\n          query {getThisUser(activityId:\"${activityId}\")\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }})\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          const thisUser = resData.data.getThisUser;\n          this.context.user = thisUser;\n          // check verification herre??\n          this.retrieveLogin();\n        })\n        .catch(err => {\n          this.setState({userAlert: err});\n        });\n    }\n\n    verifyUser = (event) => {\n      event.preventDefault();\n      const contactEmail = event.target.formGridEmail.value;\n      const verificationType = event.target.formGridType.value;\n      const verificationCode = event.target.formGridCode.value;\n\n      const requestBody = {\n        query: `\n        mutation {verifyUser(\n          userInput:{\n            contactEmail:\"${contactEmail}\",\n            verificationType:\"${verificationType}\",\n            verificationCode:\"$verificationCode{}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n        console.log(JSON.stringify(requestBody));\n\n      fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n        }})\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(resData.data.verifyUser);\n          this.setState({userAlert: 'Verified...Please try loggin in again..'});\n        })\n        .catch(err => {\n          this.setState({userAlert: err});\n        });\n    }\n\n    startVerification = () => {\n      this.setState({verifying: true})\n    };\n    closeVerification = () => {\n      this.setState({verifying: false})\n    };\n\n  render() {\n    return (\n      <Container className=\"loginPageContainer\">\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n        <Row className=\"loginPageContainerRow2\">\n        <Col className=\"loginPageContainerCol2\">\n          <Form className=\"auth-form\" onSubmit={this.submitHandler}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n              <Form.Text className=\"text-muted\">\n                User Login\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Button variant=\"outline-success\" type=\"submit\" className=\"loginButton\" size=\"lg\">\n              Login\n            </Button>\n\n            <Button variant=\"outline-warning\" className=\"loginButton\" size=\"lg\">\n              <NavLink to=\"/signup\">Signup</NavLink>\n            </Button>\n          </Form>\n        </Col>\n        </Row>\n        <Row className=\"loginPageContainerRow2\">\n          <Col className=\"loginPageContainerCol2\">\n            <Button variant=\"outline-primary\" onClick={this.startVerification}>Verify</Button>\n            {this.state.verifying === true && (\n              <VerifyUserForm\n                canCancel\n                canConfirm\n                onCancel={this.closeVerification}\n                onConfirm={this.verifyUser}\n              />\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default AuthPage;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateUserForm = (props) => {\n\n  const [dob, setDob] = useState(new Date());\n\n  const handleChangeDob = date => {\n    setDob(date);\n    console.log(`Dob ${dob}`);\n   }\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridRole\">\n  <Form.Label>Role</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Instructor</option>\n  <option>User</option>\n\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone2\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"Date of Birth\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPublicCheckbox\">\n  <Form.Label>Public ?</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n</Form.Row>\n\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control as=\"select\">\n  //   <option>guest</option>\n  //   <option>nurse</option>\n  //   <option>doctor</option>\n  //   <option>staff</option>\n  //\n  //   </Form.Control>\n  // </Form.Group>\n  // </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"\">\n//   <Form.Label>Fancy D.O.B</Form.Label>\n//   <DatePicker className=\"\" id=\"staffCalendarDob\"\n//     selected={dob}\n//     onChange={handleChangeDob}\n//   />\n// </Form.Group>\n// </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridEmploymentDateTodayCheckbox\">\n//   <Form.Label>Today ?</Form.Label>\n//   <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n// </Form.Group>\n// </Form.Row>\n}\n\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Bio\"/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport AlertBox from '../../components/AlertBox';\nimport CreateUserForm from '../../components/Forms/user/CreateUserForm';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport './Auth.css';\n\nclass SignupPage extends Component {\n  state = {\n    role: null,\n    success: \"Signup!!\",\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    creating: false,\n  };\n\n  modalConfirmUserHandler = (event) => {\n    event.preventDefault();\n\n    this.setState({ creating: false, userAlert: \"Signing you up....\" });\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    let role = event.target.formGridRole.value;\n    let publicProfile = false;\n    if (event.target.formGridPublicCheckbox.checked === true) {\n      publicProfile = true;\n    }\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let addressType = event.target.formGridAddressType.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressCity = event.target.formGridAddressCity.value;\n    let addressCountry = event.target.formGridAddressCountry.value;\n    let addressPostalCode = event.target.formGridAddressPostalCode.value;\n    let bio = event.target.formGridBio.value;\n\n    if (\n      contactEmail.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      contactPhone.trim().length === 0 ||\n      contactPhone2.trim().length === 0 ||\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0 ||\n      bio.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return;\n    }\n\n    const token = this.context.token;\n    const requestBody = {\n      query: `\n            mutation {createUser(\n              userInput:{\n                role:\"${role}\",\n                name:\"${name}\",\n                password:\"${password}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                public:${publicProfile},\n                contactEmail:\"${contactEmail}\",\n                contactPhone:\"${contactPhone}\",\n                contactPhone2:\"${contactPhone2}\",\n                addressType:\"${addressType}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\",\n                bio:\"${bio}\"\n              })\n            {_id,password,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const newUser = resData.data.createUser;\n        const errors = JSON.stringify({...resData.errors});\n        if (JSON.stringify(resData).slice(2,7) === 'error') {\n          this.setState({success: \"Something went wrong!!!\", userAlert: \"Something went wrong!!!\"+errors+\"\"  });\n        } else {\n          this.setState({success: \"Signup success...Proceed to login\", userAlert: \"Signup success...Proceed to login... your verification code is..\"+newUser.verification.code+\"\" });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  cancelSignup = () => {\n    this.setState({creating: false, role: null})\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"loginPageContainer\">\n\n      <Row className=\"loginPageContainerRow2\">\n      <Col className=\"loginPageContainerCol2\">\n\n        <CreateUserForm\n          canCancel\n          canConfirm\n          onConfirm={this.modalConfirmUserHandler}\n          onSubmit={this.modalConfirmUserHandler}\n          confirmText=\"Confirm\"\n          successText={this.state.success}\n          onCancel={this.cancelSignup}\n        />\n\n      </Col>\n      </Row>\n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      <Card.Text>\n        role: {props.role}\n      </Card.Text>\n      <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n        Details\n      </Button>\n      {\n      //   <Button variant=\"secondary\" onClick={props.onSelectNoDetail.bind(this, props.user)}>\n      //   Select\n      // </Button>\n    }\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userItem;\n","import React from 'react';\n\nimport UserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst userList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <UserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default userList;\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport './UserItem.css';\n\nconst searchUserItem = props => (\n  <li key={props.authId} className=\"users__list-item_master\">\n    <div>\n      <p className=\"userItemHeading\"> Name:</p>\n      <p className=\"userItemText\">\n        {props.name}\n      </p>\n      <p className=\"userItemHeading\"> Role:</p>\n      <p className=\"userItemText\">\n        {props.role}\n      </p>\n    </div>\n    <div>\n    <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n          Details\n        </Button>\n    </div>\n  </li>\n);\n\nexport default searchUserItem;\n","import React from 'react';\n// import Accordion from 'react-bootstrap/Accordion';\n// import Button from 'react-bootstrap/Button';\n\nimport SearchUserItem from './UserItem/SearchUserItem';\nimport './UserList.css';\n\nconst searchUserList = props => {\n\n  const searchUsers = props.searchUsers.map(user => {\n    return (\n      <React.Fragment>\n      <SearchUserItem\n        key={user._id}\n        userId={props.authUserId}\n        _id={user._id}\n        name={user.name}\n        onDetail={props.onViewDetail}\n      />\n      </React.Fragment>\n    );\n  });\n  return <ul className=\"user__list1_master\">{searchUsers}</ul>;\n};\n\nexport default searchUserList;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst MessageUserListForm = (props) => {\nconst {...receiver} = props.receiver;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <p>Recipient: {receiver.username}</p>\n</Form.Row>\n\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicTypeSelect\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type j</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridSubject\">\n    <Form.Label>Subject </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Subject\"/>\n  </Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMessage\">\n    <Form.Label>Message </Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Message\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default MessageUserListForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport MessageUserListForm from '../Forms/user/MessageUserListForm';\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst UserDetail = (props) => {\n\n  const {...user} = props.user;\n  const profileImages = user.profileImages;\n  // console.log(profileImages);\n  const interests = user.interests;\n\n  // let userDob = new Date(user.dob.substr(0,9) * 1000).toISOString().slice(0,10);\n\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Demographics\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Demographics\" title=\"Demographics\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">User Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Card.Img variant=\"top\" src={user.profileImages[1].path} />\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Role:</span> {user.role}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          </Col>\n\n          <Col className=\"detailCardCol\">\n\n\n\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n        <Button variant=\"secondary\" onClick={props.onFriendRequest.bind(this, props.user)}>\n          RequsetFriend\n        </Button>\n        <Button variant=\"info\" onClick={props.onStartSendMessage.bind(this, props.user)}>\n          Message\n        </Button>\n        <Button variant=\"danger\" onClick={props.onHideUserDetail}>\n          x\n        </Button>\n          <Col className=\"detailCardCol\">\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, user._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, user._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n\n      {props.creatingMessage === true &&\n        props.messageReceiver !== null && (\n        <MessageUserListForm\n          receiver={props.messageReceiver}\n          onCancel={props.cancelMessage}\n          onConfirm={props.sendMessage}\n        />\n      )}\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./AttachmentViewer.css\"\n\nconst AttachmentViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <h5 className=\"attachmentViewerTitle\">AttachmentViewer</h5>\n    <Button variant=\"danger\" className=\"attachmentViewerCloseButton\" onClick={props.onCloseAttachmentView}>\n      close\n    </Button>\n\n    <a href={props.attachmentFile}>\n    <Button variant=\"success\">\n      View the Attachment\n    </Button>\n    </a>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default AttachmentViewer;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport UserDetail from './Users/UserDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst UserDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n\n    <UserDetail\n      authId={props.authId}\n      user={props.user}\n      canReport={props.canReport}\n      onReport={props.onReport}\n      canDelete={props.canDelete}\n      onDelete={props.onDelete}\n      onFriendRequest={props.onFriendRequest}\n      onStartSendMessage={props.onStartSendMessage}\n      onHideUserDetail={props.onHideUserDetail}\n      creatingMessage={props.creatingMessage}\n      messageReceiver={props.messageReceiver}\n      cancelMessage={props.cancelMessage}\n      sendMessage={props.sendMessage}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default UserDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>email</option>\n  <option>password</option>\n  <option>name</option>\n  <option>dob</option>\n  <option>phone</option>\n  <option>address.town</option>\n  <option>address.parish</option>\n  <option>role</option>\n  <option>employmentDate</option>\n  <option>terminationDate</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserForm;\n","import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport UserList from '../../components/Users/UserList/UserList';\nimport SearchUserList from '../../components/Users/UserList/SearchUserList';\nimport UserDetail from '../../components/Users/UserDetail';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport UserDetailViewer from '../../components/UserDetailViewer';\n\nimport SearchUserForm from '../../components/Forms/user/SearchUserForm';\n\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    isSorting: false,\n    selectedUser: null,\n    detailsLoaded: false,\n    creatingMessage: false,\n    messageReceiver: null,\n    userUpdateField: null,\n    userSearchField: null,\n    userSearchQuery: null,\n    canDelete: null,\n    canReport: false,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n\n    if (this.context.user.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedUser) !== \"{}\") {\n      this.setState({ selectedUser: this.context.selectedUser })\n    }\n\n    this.fetchUsersBasic();\n  }\n\n\n\n  modalConfirmSearchHandler = (event) => {\n\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const search = { field, query };\n    const requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\\\"5e815ea627a93c0deab606d0\\\",\n          field:\\\"addresses.town\\\",\n          query:\\\"Test-Town\\\"\n        )\n        {_id,password,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `}\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByField).slice(0,8);\n        const searchUsers = resData.data.getUsersByField;\n        this.setState({ searchUsers: searchUsers, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchUsersBasic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching User Master List...\" });\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getAllUsers(\n            activityId:\"${activityId}\"\n          )\n          {_id,role,username,public,clientConnected}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getAllUsers).slice(0,8);\n        this.setState({userAlert: responseAlert, users: resData.data.getAllUsers, isLoading: false});\n        this.context.users = this.state.users;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteListUser = (userId) => {\n    console.log(\"delete listed user\", userId);\n  }\n\n  reportUser = (userId) => {\n    console.log(\"reporting user\", userId);\n  }\n\n  startSendMessage = (args) => {\n    console.log(\"opening message form...\");\n    this.setState({creatingMessage: true, messageReceiver: {_id: args._id, username: args.username}})\n  }\n  cancelMessage = () => {\n    this.setState({creatingMessage: false})\n  }\n  sendMessage = (event) => {\n    event.preventDefault();\n    console.log(this.state.messageReceiver,event.target);\n    this.setState({creatingMessage: false, userAlert: \"sending message...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = this.state.messageReceiver._id;\n    const type = event.target.formBasicTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n\n    const requestBody = {\n      query: `\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n          {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(JSON.stringify(resData.data.createMessage));\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(0,8);\n        this.setState({userAlert: responseAlert});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\nshowDetailHandler = userId => {\n  this.setState({ isLoading: true, userAlert: \"Fetching User Details...\", showDetail: true });\n  const activityId = this.context.activityId;\n\n  const requestBody = {\n    query: `\n        query {getUserById(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\"\n        )\n        {_id,role,username,public,clientConnected,age,bio,socialMedia{platform,handle,link},profileImages{name,type,path},interests,tags}}\n      `};\n\n  fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        this.setState({userAlert: 'Failed!'});\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      const responseAlert = JSON.stringify(resData.data.getUserById).slice(0,8);\n      this.setState({userAlert: responseAlert, selectedUser: resData.data.getUserById, detailsLoaded:true, isLoading: false});\n      this.context.selectedUser = this.state.selectedUser;\n    })\n    .catch(err => {\n      this.setState({userAlert: err});\n      if (this.isActive) {\n        this.setState({ isLoading: false });\n      }\n    });\n};\n\nselectUserNoDetail = (user) => {\n  this.setState({selectedUser: user});\n  this.context.selectedUser = user;\n}\n\nhideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n}\n\n\n  onFriendRequest = (args) => {\n    console.log(\"sending friend request...\",args._id);\n    this.setState({ userAlert: \"sending friend request...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {sendFriendRequest(\n            activityId:\"${activityId}\",\n            senderId:\"${senderId}\",\n            receiverId:\"${receiverId}\"\n          )\n          {_id,role,username,public,clientConnected,friendRequests{date,sender{_id},receiver{_id}}}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(JSON.stringify(resData.data.sendFriendRequest.friendRequests));\n        const responseAlert = JSON.stringify(resData.data.sendFriendRequest).slice(0,8);\n        this.setState({userAlert: responseAlert});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n\n  }\n\n  onViewAttachment = (attachment) => {\n\n      this.setState({showAttachment: true})\n\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  }\n\n  closeAttachmentView = () => {\n\n      this.setState({showAttachment: false})\n  }\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true &&\n        this.state.detailsLoaded === true && (\n        <UserDetailViewer\n          user={this.state.selectedUser}\n          onHideUserDetail={this.hideDetailHandler}\n          canDelete={this.state.canDelete}\n          onDelete={this.deleteListUser}\n          canReport={this.state.canReport}\n          onReport={this.reportUser}\n          onFriendRequest={this.onFriendRequest}\n          onStartSendMessage={this.startSendMessage}\n          creatingMessage={this.state.creatingMessage}\n          messageReceiver={this.state.messageReceiver}\n          cancelMessage={this.cancelMessage}\n          sendMessage={this.sendMessage}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <UserList\n                            canReport={this.state.canReport}\n                            onReport={this.reportUser}\n                             users={this.state.users}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectUserNoDetail}\n\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchUserForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.userSearchField}  ,   Query: {this.state.userSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchUsers !== [] && (\n                          <SearchUserList\n                            searchUsers={this.state.searchUsers}\n                            authUserId={this.context.userId}\n                            onViewDetail={this.showDetailHandler}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        subtitle: {props.subtitle}\n      </Card.Text>\n      <Card.Text>\n        category: {props.category}\n      </Card.Text>\n      <Card.Text>\n        leadInstructorId: {props.instructors[0]._id}\n      </Card.Text>\n      <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n        Details\n      </Button>\n      {props.canReport === true && (\n        <Button variant=\"danger\" onClick={props.onReport.bind(this, props._id)}>\n        Report\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonItem;\n","import React from 'react';\n\nimport LessonItem from './LessonItem/LessonItem';\nimport './UserList.css';\n\nconst lessonList = props => {\n\n  const lessons = props.lessons.map(lesson => {\n    return (\n      <LessonItem\n        key={lesson._id}\n        lesson={lesson}\n        authId={props.authId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{lessons}</ul>;\n};\n\nexport default lessonList;\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport './UserItem.css';\n\nconst searchLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_master\">\n    <div>\n      <p className=\"userItemHeading\"> ID:</p>\n      <p className=\"userItemText\">\n        {props._id}\n      </p>\n      <p className=\"userItemHeading\"> Title:</p>\n      <p className=\"userItemText\">\n        {props.title}\n      </p>\n    </div>\n    <div>\n    <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n          Details\n        </Button>\n    </div>\n  </li>\n);\n\nexport default searchLessonItem;\n","import React from 'react';\n// import Accordion from 'react-bootstrap/Accordion';\n// import Button from 'react-bootstrap/Button';\n\nimport SearchLessonItem from './LessonItem/SearchLessonItem';\nimport './UserList.css';\n\nconst searchLessonList = props => {\n\n  const searchLessons = props.searchLessons.map(lesson => {\n    return (\n      <React.Fragment>\n      <SearchLessonItem\n        key={lesson._id}\n        userId={props.authUserId}\n        _id={lesson._id}\n        title={lesson.title}\n        \n        onDetail={props.onViewDetail}\n      />\n      </React.Fragment>\n    );\n  });\n  return <ul className=\"user__list1_master\">{searchLessons}</ul>;\n};\n\nexport default searchLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonSessionItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n    </Card.Body>\n\n    <Button variant=\"primary\" onClick={props.onBookSession.bind(this, props.session)}>\n          Book\n        </Button>\n    <Button variant=\"secondary\" onClick={props.onAddCartLesson.bind(this, props.session)}>\n          Cart\n        </Button>\n    </Card>\n\n  </li>\n);\n\nexport default lessonSessionItem;\n","import React from 'react';\n\nimport LessonSessionItem from './LessonItem/LessonSessionItem';\nimport './UserList.css';\n\nconst lessonSessionList = props => {\n\n  const lessons = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <LessonSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        title={session.title}\n        date={sessionDate}\n        onBookSession={props.onBookSession}\n        onAddCartLesson={props.onAddCartLesson}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{lessons}</ul>;\n};\n\nexport default lessonSessionList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonScheduleItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.date.date}, {props.date.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonScheduleItem;\n","import React from 'react';\n\nimport LessonScheduleItem from './LessonItem/LessonScheduleItem';\nimport './UserList.css';\n\nconst lessonScheduleList = props => {\n\n  const dates = props.lessonSchedule.map(date => {\n    // const scheduleDate = new Date (date.substr(0,10)*1000).toISOString().slice(0,10);\n    // console.log(date);\n    return (\n      <LessonScheduleItem\n        key={date}\n        date={date}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{dates}</ul>;\n};\n\nexport default lessonScheduleList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateLessonSessionForm = (props) => {\n\n  const [date, setDate] = useState(new Date());\n\n    const handleChangeDate = date => {\n      setDate(date);\n      console.log(`date ${date}`);\n     }\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"\">\n  <Form.Label>Session Date</Form.Label>\n  <DatePicker className=\"\" id=\"CalendarDate\"\n    selected={date}\n    onChange={handleChangeDate}\n  />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTime\">\n  <Form.Label>Time</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Time\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLimit\">\n  <Form.Label>Limit</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Limit\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n<Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n</Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonSessionForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateLessonBasicForm = (props) => {\nconst {...lesson} = props.lesson;\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.title}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.subtitle}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.duration}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type: {lesson.type}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category: {lesson.category}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.sku} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder={lesson.price} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder={lesson.points} />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={lesson.description}/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder={lesson.notes}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateLessonFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>title</option>\n    <option>subtitle</option>\n    <option>type</option>\n    <option>category</option>\n    <option>sku</option>\n    <option>price</option>\n    <option>description</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonFieldForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './LessonList/LessonSessionList';\nimport LessonScheduleList from './LessonList/LessonScheduleList';\nimport CreateLessonSessionForm from '../Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from '../Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from '../Forms/lesson/UpdateLessonFieldForm';\n\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst LessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  // let userDob = new Date(user.dob.substr(0,9) * 1000).toISOString().slice(0,10);\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {isInstructor === true &&(\n            <Card.Text>\n            Your lesson\n            </Card.Text>\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Sku:</span> {lesson.sku}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n            {lesson.instructors[0]._id}\n            {lesson.instructors[0].username}\n            {lesson.instructors[0].contact.phone}\n            {lesson.instructors[0].contact.email}\n          </Card.Text>\n\n          <Button variant=\"danger\" onClick={props.showSchedule}>\n            See dates\n          </Button>\n          <Button variant=\"danger\" onClick={props.hideSchedule}>\n            Hide dates\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n\n          </Col>\n        </Row>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n            Edit Basic\n          </Button>\n            {props.editingLesson === true && (\n              <UpdateLessonBasicForm\n              lesson={lesson}\n              onCancel={props.cancelEditBasic}\n              onConfirm={props.editLessonBasic}\n              />\n            )}\n          </Col>\n        </Row>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n            Edit Field\n          </Button>\n            {props.editingLessonField === true && (\n              <UpdateLessonFieldForm\n              lesson={lesson}\n              onCancel={props.cancelEditField}\n              onConfirm={props.editLessonField}\n              />\n            )}\n          </Col>\n        </Row>\n\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, lesson._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, lesson._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n        </Row>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          {props.creatingSession === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          Sessions:\n          <Button variant=\"primary\" onClick={props.onSessionLoad.bind(this, lesson._id)}>\n            See Sessions\n          </Button>\n          <Button variant=\"danger\" onClick={props.onHideSessions}>\n            x\n          </Button>\n          {props.sessionsLoaded === true && (\n            <LessonSessionList\n            lessonSessions={lesson.sessions}\n            onBookSession={props.onBookSession}\n            onAddCartLesson={props.onAddCartLesson}\n          />\n        )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default LessonDetail;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport LessonDetail from './Lessons/LessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst LessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <LessonDetail\n      authId={props.authId}\n      lesson={props.lesson}\n      sessionsLoaded={props.sessionsLoaded}\n      onSessionLoad={props.onSessionLoad}\n      onHideSessions={props.onHideSessions}\n      onBookSession={props.onBookSession}\n      onAddCartLesson={props.onAddCartLesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n      startCreateSession={props.startCreateSession}\n      creatingSession={props.creatingSession}\n      cancelCreateSession={props.cancelCreateSession}\n      createLessonSession={props.createLessonSession}\n      onStartEditLessonBasic={props.onStartEditLessonBasic}\n      onStartEditLessonField={props.onStartEditLessonField}\n      editingLesson={props.editingLesson}\n      editingLessonField={props.editingLessonField}\n      cancelEditBasic={props.cancelEditBasic}\n      editLessonBasic={props.editLessonBasic}\n      cancelEditField={props.cancelEditField}\n      editLessonField={props.editLessonField}\n      showSchedule={props.showSchedule}\n      showScheduleState={props.showScheduleState}\n      hideSchedule={props.hideSchedule}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LessonDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>email</option>\n  <option>password</option>\n  <option>name</option>\n  <option>dob</option>\n  <option>phone</option>\n  <option>address.town</option>\n  <option>address.parish</option>\n  <option>role</option>\n  <option>employmentDate</option>\n  <option>terminationDate</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst CreateLessonForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Subtitle\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Duration\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Sku\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder=\"Price\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"Points\" />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Description\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder=\"Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonForm;\n","import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\nimport LessonDetail from '../../components/Lessons/LessonDetail';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport LessonDetailViewer from '../../components/LessonDetailViewer';\n\nimport SearchLessonForm from '../../components/Forms/lesson/SearchLessonForm';\nimport CreateLessonForm from '../../components/Forms/lesson/CreateLessonForm';\n\nimport './Users.css';\n\nclass LessonsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonUpdateField: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    sessionsLoaded: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    showSchedule: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n\n    if (this.context.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (this.context.selectedLesson) {\n      this.setState({ selectedLesson: this.context.selectedLesson })\n    }\n\n    this.fetchLessonsBasic();\n  }\n\n  modalConfirmSearchHandler = (event) => {\n\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    // if (\n    //   field.trim().length === 0 ||\n    //   query.trim().length === 0\n    // ) {\n    //   this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n    //   return;\n    // }\n    //\n    // const search = { field, query };\n    // const requestBody = {\n    //   query: `\n    //\n    //   `}\n    //\n    // fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //     const responseAlert = JSON.stringify(resData.data).slice(0,8);\n    //     const searchLessons = resData.data.;\n    //     this.setState({ searchUsers: searchLessons, userAlert: responseAlert})\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  }\n\n  startCreateLesson = () => {\n    this.setState({creating: true})\n  }\n  createLessonHandler = (event) => {\n    this.setState({creating: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const duration = event.target.formGridDuration.value;\n\n    const requestBody = {\n      query: `\n        mutation {createLesson(\n          activityId:\"${activityId}\",\n          creatorId:\"${creatorId}\",\n          lessonInput:{\n            title:\"${title}\",\n            subtitle:\"${subtitle}\",\n            type:\"${type}\",\n            category:\"${category}\",\n            price:${price},\n            points:${points},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            duration:\"${duration}\",\n            sku:\"${sku}\"\n          })\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n      `}\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.createLesson).slice(0,8);\n        this.setState({ lesson: resData.data.createLesson, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  }\n  onStartEditLessonField = () => {\n    console.log('beep!');\n    this.setState({editingLessonField: true})\n  }\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  }\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  }\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    this.setState({editingLesson: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonBasic, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  editLessonField = (event) => {\n    event.preventDefault();\n    this.setState({editingLessonField: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonByField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchLessonsBasic() {\n    const activityId = this.context.activityId;\n    this.setState({ isLoading: true, userAlert: \"Fetching Lesson Master List...\" });\n    const requestBody = {\n      query: `\n        query {getAllLessons(activityId:\"${activityId}\")\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllLessons, isLoading: false});\n        this.context.lessons = this.state.lessons;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  showSchedule = () => {\n    this.setState({showSchedule: true})\n  };\n  hideSchedule = () => {\n    this.setState({showSchedule: false})\n  };\n\n  loadSessions = (args) => {\n    console.log('retriving sessions for this lesson');\n    this.setState({userAlert: 'retriving sessions for this lesson'})\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requestBody = {\n      query: `\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.getLessonById, isLoading: false, sessionsLoaded: true});\n        this.context.selectedLesson = this.state.selectedLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  };\n  hideSessions = () => {\n    this.setState({sessionsLoaded: false})\n  };\n  addCartLesson = (args) => {\n    console.log('adding lesson to cart');\n    this.setState({userAlert: 'adding lesson to cart'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n    const requestBody = {\n      query: `\n            mutation {addUserCartLesson(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              lessonId:\"${lessonId}\",\n              sessionDate:\"${sessionDate}\")\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, isLoading: false});\n        this.context.selectedUser = resData.data.addUserCartLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  bookSession = (args) => {\n    console.log('booking lesson session');\n    this.setState({userAlert: 'booking lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n    const requestBody = {\n      query: `\n            mutation {addLessonBooking(\n              activityId:\"${activityId}\",\n              lessonId:\"${lessonId}\",\n              userId:\"${userId}\",\n              lessonInput:{\n                sessionTitle:\"${sessionTitle}\",\n                sessionDate:\"${sessionDate}\"\n              })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id},bookedAmount,attended{_id},attendedAmount,inProgress,full},promos{_id}}}\n        `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonBooking, isLoading: false});\n        this.context.selectedLesson = this.state.selectedLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toISOString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toISOString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n        // console.log('xxx',JSON.stringify(requestBody));\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonBooking, isLoading: false});\n        this.context.selectedLesson = this.state.selectedLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  deleteListLesson = (lessonId) => {\n    console.log(\"delete listed lesson\", lessonId);\n  };\n  reportLesson = (lessonId) => {\n    console.log(\"reporting lesson\", lessonId);\n  };\n\n  showDetailHandler = lessonId => {\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  selectLessonNoDetail = (lesson) => {\n    this.setState({selectedLesson: lesson});\n    this.context.selectedLesson = lesson;\n  };\n\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n  onViewAttachment = (attachment) => {\n      this.setState({showAttachment: true})\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  };\n  closeAttachmentView = () => {\n      this.setState({showAttachment: false})\n  };\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true && (\n        <LessonDetailViewer\n          authId={this.context.activityId}\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n          sessionsLoaded={this.state.sessionsLoaded}\n          onSessionLoad={this.loadSessions}\n          onHideSessions={this.hideSessions}\n          onBookSession={this.bookSession}\n          onAddCartLesson={this.addCartLesson}\n          startCreateSession={this.startCreateSession}\n          creatingSession={this.state.creatingSession}\n          cancelCreateSession={this.cancelCreateSession}\n          createLessonSession={this.createLessonSession}\n          onStartEditLessonBasic={this.onStartEditLessonBasic}\n          onStartEditLessonField={this.onStartEditLessonField}\n          editingLesson={this.state.editingLesson}\n          editingLessonField={this.state.editingLessonField}\n          cancelEditBasic={this.cancelEditBasic}\n          cancelEditField={this.cancelEditField}\n          editLessonBasic={this.editLessonBasic}\n          editLessonField={this.editLessonField}\n          showScheduleState={this.state.showSchedule}\n          showSchedule={this.showSchedule}\n          hideSchedule={this.hideSchedule}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"Create\">+ Lesson</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchLessonForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}  ,   Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            searchLessons={this.state.searchLessons}\n                            authId={this.context.activityId}\n                            onViewDetail={this.showDetailHandler}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"Create\">\n                        <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startCreateLesson}>+ Lesson</Button>\n\n                        <Row className=\"userListRow\">\n                          {this.state.creating === true && (\n                            <CreateLessonForm\n                              authId={this.context.activityId}\n                              creator={this.context.user}\n                              canCancel\n                                canConfirm\n                                onCancel={this.modalCancelHandler}\n                                onConfirm={this.createLessonHandler}\n                            />\n                          )}\n                        </Row>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default LessonsPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>My Couch Coach 0.0.1</h1>\n\n          </div>\n          <nav className=\"main-navigation__items\">\n\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Login</NavLink>\n                </li>\n              )}\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/userProfile\">My Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/users\">Users</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/lessons\">Lessons</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/auth/Auth';\nimport SignupPage from './pages/auth/Signup';\n\nimport UserProfile from './pages/user/UserProfile';\nimport UsersPage from './pages/user/Users';\nimport LessonsPage from './pages/lesson/Lessons';\n\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionCookiePresent: false,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n    this.socket = io('http://localhost:7770');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role\n    });\n\n    this.socket.emit('msg_subscribe', {user: activityId, room:'msg'+activityId});\n  };\n\n  logout = () => {\n    this.setState({\n       token: null,\n       activityId: null,\n       role: null,\n       sessionCookiePresent: null\n      });\n    sessionStorage.clear();\n    this.context = {\n      token: null,\n      activityId: null,\n      activityA: null,\n      activityB: null,\n      activityC: null,\n      role: null,\n      userId: null,\n      user: {},\n      users:[],\n      selectedUser: null,\n      lesson: {},\n      lessons: [],\n      selectedLesson: null,\n      selectedPerk: null,\n      selectedPromo: null,\n      selectedReview: null,\n      sender: null,\n      receiver: null,\n      userAlert: \"...\",\n      file: null,\n      fancyDate: null,\n      login: this.login,\n      logout: this.logout,\n    }\n  };\n\n\n  componentDidMount() {\n    console.log(this.socket.connected);\n\n    if (sessionStorage.getItem('login info')) {\n\n      let seshStore = sessionStorage.getItem('login info');\n      this.context.token = seshStore.token;\n      this.context.activityId = seshStore.activityId;\n      this.context.role = seshStore.role;\n      this.setState({\n        sessionCookiePresent: true,\n        token: seshStore.token,\n        });\n    };\n\n    const conversationId = this.context.activityId;\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n    this.socket.on('conversation private post', function(data) {\n      console.log(\"you got a new message..\",data);\n      addMessage(data);\n    });\n    const addMessage = data => {\n      this.setState({\n        userAlert: `New Msg!!\n          Fr:   ${data.message.senderName},\n          Msg:   ${data.message.message}`})\n    };\n\n    // this.userOnline();\n  }\n\n  componentWillUnmount() {\n    // this.UserOffline();\n  }\n\n  userOnline () {\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        mutation{userOnline(\n          activityId:\"${activityId}\",\n          userId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.userOnline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userOffline () {\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n      mutation{userOffline(\n        activityId:\"${activityId}\",\n        userId:\"${activityId}\")\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.userOffline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityB: null,\n              activityC: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: {},\n              lesson: {},\n              lessons: [],\n              selectedLesson: {},\n              selectedPerk: {},\n              selectedPromo: {},\n              selectedReview: {},\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <main className=\"main-content\">\n              <Switch>\n\n                {this.state.token && <Redirect from=\"/\" to=\"/userProfile\" exact />}\n\n                {this.state.token && (<Route path=\"/userProfile\" component={UserProfile} />)}\n\n                {this.state.token && (<Redirect from=\"/auth\" to=\"/userProfile\" exact />)}\n\n                {\n                  this.state.token && (<Route path=\"/users\" component={UsersPage} />)\n                }\n                {\n                  this.state.token && (<Route path=\"/lessons\" component={LessonsPage} />)\n                }\n\n                {!this.state.token && (<Route path=\"/auth\" component={AuthPage} />)}\n                {!this.state.token && (<Route path=\"/signup\" component={SignupPage} />)}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}