{"version":3,"sources":["context/auth-context.js","components/AlertBox.js","components/LoadingOverlay.js","components/Forms/user/VerifyUserForm.js","components/Forms/auth/ForgotPasswordForm.js","pages/auth/Auth.js","components/Forms/user/CreateUserForm.js","pages/auth/Signup.js","components/Spinner/Spinner.js","pages/Sidebar.js","components/SidebarControl.js","components/Users/UserList/UserItem/UserAddressItem.js","components/Users/UserList/UserAddressList.js","components/Users/UserList/UserItem/UserProfileImageItem.js","components/Users/UserList/UserProfileImageList.js","components/Users/UserList/UserItem/UserSocialMediaItem.js","components/Users/UserList/UserSocialMediaList.js","components/Users/UserList/UserItem/UserPerkItem.js","components/Users/UserList/UserPerkList.js","components/Users/UserList/UserItem/UserPromoItem.js","components/Users/UserList/UserPromoList.js","components/Users/UserList/UserItem/UserInterestItem.js","components/Users/UserList/UserInterestList.js","components/Users/UserList/UserItem/UserTagItem.js","components/Users/UserList/UserTagList.js","components/Users/UserList/UserItem/UserFriendItem.js","components/Users/UserList/UserFriendList.js","components/Users/UserList/UserItem/UserFriendRequestItem.js","components/Users/UserList/UserFriendRequestList.js","components/Users/UserList/UserItem/UserCartItemItem.js","components/Users/UserList/UserCartItemList.js","components/Users/UserList/UserItem/UserBookedLessonItem.js","components/Users/UserList/UserBookedLessonList.js","components/Users/UserList/UserItem/UserLikedLessonItem.js","components/Users/UserList/UserLikedLessonList.js","components/Users/UserList/UserItem/UserAttendedLessonItem.js","components/Users/UserList/UserAttendedLessonList.js","components/Users/UserList/UserItem/UserToTeachLessonItem.js","components/Users/UserList/UserToTeachLessonList.js","components/Users/UserList/UserItem/UserTaughtLessonItem.js","components/Users/UserList/UserTaughtLessonList.js","components/Users/UserList/UserItem/UserPaymentInfoItem.js","components/Users/UserList/UserPaymentInfoList.js","components/Users/UserList/UserItem/UserOrderItem.js","components/Users/UserList/UserOrderList.js","components/Users/UserList/UserItem/UserReviewItem.js","components/Users/UserList/UserReviewList.js","components/Users/UserList/UserItem/UserMessageItem.js","components/Users/UserList/UserMessageList.js","components/Users/UserList/UserItem/UserActivityItem.js","components/Users/UserList/UserActivityList.js","components/Forms/user/UpdateUserBasicForm.js","components/Forms/user/UpdateUserFieldForm.js","components/Forms/user/AddUserAddressForm.js","components/Forms/user/AddUserProfileImageForm.js","components/Forms/user/AddUserSocialMediaForm.js","components/Forms/user/AddUserInterestsForm.js","components/Forms/user/AddUserTagsForm.js","components/Forms/user/AddUserPaymentInfoForm.js","components/Forms/user/AddUserPointsForm.js","components/Forms/user/AddUserPerkForm.js","components/Forms/user/AddUserPromoForm.js","components/Forms/user/AddUserFriendForm.js","components/Forms/message/CreateMessageForm.js","components/Forms/order/CreateOrderForm.js","components/Forms/review/CreateReviewForm.js","components/Lessons/LessonList/LessonItem/MeetingSessionItem.js","components/Lessons/LessonList/MeetingSessionList.js","components/Lessons/LessonList/LessonItem/SessionBookedItem.js","components/Lessons/LessonList/SessionBookedList.js","components/Lessons/LessonList/LessonItem/SessionAttendedItem.js","components/Lessons/LessonList/SessionAttendedList.js","components/Forms/lesson/UpdateSessionFieldForm.js","components/SessionDetailViewer.js","components/Users/thisUserProfile.js","components/Lessons/LessonList/LessonItem/LessonSessionItem.js","components/Lessons/LessonList/LessonSessionList.js","components/Lessons/LessonList/LessonItem/LessonScheduleItem.js","components/Lessons/LessonList/LessonScheduleList.js","components/Lessons/LessonList/LessonItem/LessonInstructorItem.js","components/Lessons/LessonList/LessonInstructorList.js","components/Lessons/LessonList/LessonItem/LessonRequirementItem.js","components/Lessons/LessonList/LessonRequirementList.js","components/Lessons/LessonList/LessonItem/LessonMaterialItem.js","components/Lessons/LessonList/LessonMaterialList.js","components/Lessons/LessonList/LessonItem/LessonTagItem.js","components/Lessons/LessonList/LessonTagList.js","components/Lessons/LessonList/LessonItem/LessonImageItem.js","components/Lessons/LessonList/LessonImageList.js","components/Lessons/LessonList/LessonItem/LessonFileItem.js","components/Lessons/LessonList/LessonFileList.js","components/Lessons/LessonList/LessonItem/LessonReviewItem.js","components/Lessons/LessonList/LessonReviewList.js","components/Forms/lesson/CreateLessonSessionForm.js","components/Forms/lesson/UpdateLessonBasicForm.js","components/Forms/lesson/UpdateLessonFieldForm.js","components/Forms/lesson/AddLessonRequirementsForm.js","components/Forms/lesson/AddLessonMaterialsForm.js","components/Forms/lesson/AddLessonTagsForm.js","components/Forms/lesson/AddLessonImageForm.js","components/Forms/lesson/AddLessonFileForm.js","components/Forms/lesson/AddLessonInstructorForm.js","components/ProfileLessonViewer.js","pages/user/UserProfile.js","components/Users/UserList/UserItem/UserItem.js","components/Users/UserList/UserList.js","components/Users/UserList/SearchUserList.js","components/AttachmentViewer.js","components/Forms/user/MessageUserListForm.js","components/Users/UserDetail.js","components/UserDetailViewer.js","components/Forms/user/SearchUserFieldBasicForm.js","components/Forms/user/SearchUserFieldRegexForm.js","pages/user/Users.js","components/Lessons/LessonList/LessonItem/LessonItem.js","components/Lessons/LessonList/LessonList.js","components/Lessons/LessonList/LessonItem/SearchLessonItem.js","components/Lessons/LessonList/SearchLessonList.js","components/Lessons/LessonList/LessonItem/SearchSession.js","components/Lessons/LessonDetail.js","components/LessonDetailViewer.js","components/Forms/lesson/CreateLessonForm.js","components/Forms/lesson/SearchLessonFieldRegexForm.js","components/Forms/lesson/SearchLessonFieldBasicForm.js","components/Forms/lesson/SearchLessonSessionForm.js","pages/lesson/Lessons.js","components/Lessons/PublicLessonDetail.js","components/PublicLessonDetailViewer.js","components/Forms/lesson/SearchPublicLessonForm.js","pages/lesson/PublicLessons.js","components/Forms/user/ResetPasswordForm.js","pages/auth/PasswordReset.js","pages/Landing.js","components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","token","activityId","activityA","activityB","activityC","role","userId","user","users","selectedUser","lesson","lessons","selectedLesson","selectedPerk","selectedPromo","selectedReview","sender","receiver","userAlert","file","fancyDate","login","tokenExpiration","logout","AlertBox","props","alert","className","Alert","variant","LoadingOveray","status","verifyUserForm","Form","onSubmit","onConfirm","Row","Group","as","Col","controlId","Label","Control","type","placeholder","Text","canCancel","Button","onClick","onCancel","canConfirm","ForgotPasswordForm","successText","AuthPage","state","verifying","overlay","overlayStatus","activeTab","userSeshStore","model","requestingPasswordReset","retrieveLogin","console","log","context","sessionStorage","getItem","submitHandler","event","preventDefault","setState","email","target","formBasicEmail","value","password","formBasicPassword","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","Error","json","resData","responseAlert","data","slice","error","setItem","catch","err","isActive","showSidebar","sidebarShow","mCol2Size","hideSidebar","verifyUser","contactEmail","formGridEmail","verificationType","formGridType","verificationCode","formGridCode","startVerification","closeVerification","startForgotPassword","cancelPasswordReset","requestPasswordReset","isLoading","username","formGridUsername","errors","message","this","getThisUser","Authorization","thisUser","_id","request","Container","authId","LoadingOverlay","size","to","VerifyUserForm","Component","contextType","AuthContext","CreateUserForm","title","onChange","e","checked","rows","SignupPage","success","creating","modalConfirmUserHandler","formGridPassword","name","formGridName","formGridRole","publicProfile","formGridPublicCheckbox","dob","formGridDob","contactPhone","formGridPhone","contactPhone2","formGridPhone2","addressType","formGridAddressType","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressCity","formGridAddressCity","addressCountry","formGridAddressCountry","addressPostalCode","formGridAddressPostalCode","bio","formGridBio","newUser","createUser","verification","code","cancelSignup","Fragment","authUserId","confirmText","spinner","SidebarPage","authContext","_currentValue","md","Card","border","Body","Title","Subtitle","SidebarControl","onShowSidebar","onHideSidebar","userAddressItem","key","number","street","town","city","country","postalCode","primary","toString","canDelete","onDelete","bind","address","makeAddressPrimary","orderForm","addToOrder","userAddressList","filter","userAddresses","propsUserAddresses","field","x","map","UserAddressItem","userProfileImageItem","Image","src","path","fluid","profileImage","userProfileImageList","userProfileImages","UserProfileImageItem","userSocialMediaItem","platform","handle","link","socialMediaAccount","userSocialMediaList","userSocialMedia","UserSocialMediaItem","userPerkItem","imageLink","date","description","perk","userPerkList","userPerks","perkDate","Date","substr","toLocaleDateString","UserPerkItem","startDate","endDate","promo","userPromoList","userPromos","promoStartDate","promoEndDate","UserPromoItem","valid","userInterestItem","interest","userInterestList","userInterests","UserInterestItem","userTagItem","tag","userTagList","userTags","UserTagItem","userFriendItem","style","width","profileImages","Img","phone","loggedIn","online","socialMedia","onSelect","friend","userFriendList","userFriends","UserFriendItem","contact","clientConnected","userFriendRequestItem","received","onAccept","friendRequest","onReject","userFriendRequestList","userFriendRequests","requestDate","UserFriendRequestItem","userCartItemItem","dateAdded","sessionDate","sessionTitle","cartItem","UserCartItemList","cart","userCartItems","cartItemDateAdded","toISOString","cartItemSessionDate","UserCartItemItem","userBookedLessonItem","dateBooked","sessionTime","viewLessonDetails","bookedLesson","userBookedLessonList","bookedLessons","userBookedLessons","session","UserBookedLessonItem","ref","time","userLikedLessonItem","likedLesson","userLikedLessonList","likedLessons","userLikedLessons","UserLikedLessonItem","userAttendedLessonItem","attendedLesson","hasReviewed","startCreateReview","userAttendedLessonList","attendedLessons","userAttendedLessons","reviewedLessonIds","includes","attendedLessonDate","userToTeachLessonItem","toTeachLesson","userToTeachLessonList","toTeachLessons","userToTeachLessons","UserToTeachLessonItem","userTaughtLessonItem","taughtLesson","userTaughtLessonList","taughtLessons","userTaughtLessons","taughtLessonDate","UserTaughtLessonItem","userPaymentInfoItem","paymentInfoItem","paymentInfoList","paymentInfo","userPaymentInfo","paymentInfoItemDate","UserPaymentInfoItem","userOrderItem","totals","c","order","userOrderList","userOrders","orderDate","UserOrderItem","buyer","tax","notes","payment","shipping","billingAddress","shippingAddress","feedback","userReviewItem","rating","userReviewList","userReviews","review","reviewDate","UserReviewItem","userMessgeItem","subject","messageMessage","read","onStartReply","userMessageList","userMessages","messageDate","UserMessageItem","userActivityItem","activityDate","userActivityList","activity","userActivity","UserActivityItem","UpdateUserBasicForm","prevDob","phone2","canCancelProfile","UpdateUserFieldForm","AddUserAddressForm","AddUserProfileImageForm","AddUserSocialMediForm","AddUserInterestsForm","AddUserTagsForm","AddUserPaymentInfoForm","useState","payInfoDate","setPayInfoDate","id","selected","AddUserPointsForm","AddUserPerkForm","AddUserPromoForm","AddUserFriendForm","requestingFriendId","CreateMessageForm","replyTo","CreateOrderForm","billingAddresses","addresses","primaryShippingAddresses","primaryBillingAddresses","primaryShippingAddress","primaryBillingAddress","step","subtotal","CreateReviewForm","max","meetingSessionItem","full","limit","amount","url","bookedAmount","attendedAmount","viewSessionDetails","meetingSessionList","sessions","lessonSessions","sessionBookedItem","addSessionAttendance","isInstructor","userAttended","attendance","cancelSessionBooking","sessionBookedList","booked","userAttended2","attended","SessionBookedItem","sessionAttendedItem","sessionAttendedList","SessionAttendedItem","UpdateSessionFieldForm","SessionDetailViewer","lessonInstructors","hideSessionDetails","lessonTitle","showSessionBooked","hideSessionBooked","showSessionAttended","hideSessionAttended","sessionBookedState","SessionBookedList","sessionAttendedState","SessionAttendedList","editSessionField","startEditSessionField","editingSessionField","cancelEditSessionField","thisUserProfile","userDob","sentRequests","receivedRequests","friendRequests","messagesSent","messagesReceived","messages","reviews","hasShippingAddress","orderSubtotal3","price","reduce","a","b","toFixed","cancellations","Tabs","defaultActiveKey","Tab","eventKey","disabled","age","points","public","verified","onStartUpdate","onStartUpdateField","onStartAdd","updating","userAddField","userEditBasic","updatingField","userEditField","userAddPoints","setFilter","userAddAddress","UserAddressList","userDeleteAddress","userAddProfileImage","UserProfileImageList","userDeleteProfileImage","AddUserSocialMediaForm","userAddSocialMedia","UserSocialMediaList","userDeleteSocialMedia","userAddPerk","perks","UserPerkList","userDeletePerk","userAddPromo","promos","UserPromoList","userDeletePromo","userAddInterests","interests","UserInterestList","userDeleteInterest","userAddTags","tags","UserTagList","userDeleteTag","userAddFriend","requestingFriend","friends","UserFriendList","userDeleteFriend","userSelectFriend","UserFriendRequestList","userRejectFriendRequest","userAcceptFriendRequest","startCartCheckout","creatingOrder","cancelCartCheckout","createOrder","addAddressToOrder","orderBillingAddress","orderShippingAddress","userDeleteCartItem","UserLikedLessonList","userDeleteLikedLesson","UserBookedLessonList","userDeleteBookedLesson","creatingReview","reviewLesson","author","cancelCreateReview","createReview","UserAttendedLessonList","userDeleteAttendedLesson","UserToTeachLessonList","UserTaughtLessonList","userDeleteTaughtLesson","userAddPaymentInfo","UserPaymentInfoList","userDeletePaymentInfo","onStartCreateMessage","messageReceiver","userCreateMessage","messageReplying","onCancelReply","onReply","UserMessageList","userDeleteMessage","orders","UserOrderList","userDeleteOrder","UserReviewList","userDeleteReview","loadMeetings","hideMeetings","sessionDetailViewer","meetingsLoaded","MeetingSessionList","meetingSessions","UserActivityList","userDeleteActivity","lessonSessionItem","meetings","onBookSession","onAddCartLesson","lessonSessionList","lessonScheduleItem","lessonScheduleList","dates","lessonSchedule","scheduleDate","LessonScheduleItem","lessonInstructorItem","instructor","lessonInstructorList","instructors","LessonInstructorItem","lessonRequirementItem","requirement","lessonRequirementList","requirements","lessonRequirements","LessonRequirementItem","lessonMaterialItem","material","lessonMaterialList","materials","lessonMaterials","LessonMaterialItem","lessonTagItem","lessonTagList","lessonTags","LessonTagItem","lessonImageItem","image","lessonImageList","images","lessonImages","LessonImageItem","lessonFileItem","lessonFileList","files","lessonFiles","LessonFileItem","lessonReviewItem","isAuthor","lessonReviewList","lessonReviews","CreateLessonSessionForm","setDate","UpdateLessonBasicForm","subtitle","duration","category","sku","UpdateLessonFieldForm","AddLessonRequirementsForm","AddLessonMaterialsForm","AddLessonTagsForm","AddLessonImageForm","AddLessonInstructorForm","selectedInstructor","ProfileLessonViewer","lessonType","profileLesson","toggleSchedule","showScheduleState","LessonScheduleList","schedule","closeProfileLessonView","toggleSessions","showSessionState","LessonSessionList","startCreateSession","creatingSession","cancelCreateSession","createLessonSession","toggleReviews","showReviewsState","LessonReviewList","toggleRequirements","startLessonAdd","lessonAddField","cancelLessonAdd","addLessonRequirements","showRequirementsState","LessonRequirementList","deleteLessonRequirement","toggleMaterials","addLessonMaterials","showMaterialsState","LessonMaterialList","deleteLessonMaterial","toggleImages","addLessonImage","showImagesState","LessonImageList","gallery","deleteLessonImage","toggleFiles","AddLessonFileForm","addLessonFile","showFilesState","LessonFileList","deleteLessonFile","toggleInstructors","addLessonInstructor","showInstructorsState","LessonInstructorList","deleteLessonInstructor","toggleTags","addLessonTags","showTagsState","LessonTagList","deleteLessonTag","onStartEditLessonBasic","editingLesson","cancelEditBasic","editLessonBasic","onStartEditLessonField","editingLessonField","cancelEditField","editLessonField","UserProfile","userCopy","adding","deleting","userUpdateField","showAttachment","showThisAttachmentFile","showThisAttachmentType","mCol1Size","messagesLoaded","finalConfirmation","socketMsg","selectedFriendRequest","userSelectedFriend","profileLessonViewer","profileLessonViewerData","profileLessonType","args","addUserField","startCreateMessage","updatedUser","updateUserBasic","formGridQuery","formGridFieldSelect","updateUserByField","formGridPoints","addUserPoints","addUserAddress","addressPrimary","deleteUserAddress","setUserAddressPrimary","profileImageName","formGridFilename","profileImageType","formGridFiletype","profileImagePath","formGridFilepath","addUserProfileImage","deleteUserProfileImage","socialMediaPlatform","formGridPlatform","socialMediaHandle","formGridHandle","socialMediaLink","formGridLink","addUserSocialMedia","deleteUserSocialMedia","paymentInfoDate","paymentInfoType","formGridPaymentInfoType","paymentInfoDescription","formGridDescription","paymentInfoBody","formGridBody","paymentInfoPrimary","formGridPaymentInfoPrimaryCheckbox","addUserPaymentInfo","paymentInfoValid","deleteUserPaymentInfo","formGridInterests","addUserInterests","deleteUserInterest","formGridTags","addUserTags","deleteUserTag","friendId","addUserFriend","senderId","receiverId","deleteFriendRequest","deleteUserFriend","lessonId","deleteUserCartLesson","deleteUserBookedLesson","deleteUserLikedLesson","orderStripePayment","userCartLessonSkus","addMultipleBookings","buyerId","totalA","formGridTotalA","totalB","formGridTotalB","taxDescription","formGridTaxDescription","taxAmount","formGridTaxAmount","formGridNotes","formGridPayment","formGridShipping","billingAddressNumber","formGridBillingAddressNumber","billingAddressStreet","formGridBillingAddressStreet","billingAddressTown","formGridBillingAddressTown","billingAddressCity","formGridBillingAddressCity","billingAddressCountry","formGridBillingAddressCountry","billingAddressPostalCode","formGridBillingAddressPostalCode","shippingAddressNumber","formGridShippingAddressNumber","shippingAddressStreet","formGridShippingAddressStreet","shippingAddressTown","formGridShippingAddressTown","shippingAddressCity","formGridShippingAddressCity","shippingAddressCountry","formGridShippingAddressCountry","shippingAddressPostalCode","formGridShippingAddressPostalCode","orderId","deleteUserOrder","reviewId","deleteUserReview","senderName","timeString2","formGridTypeSelect","formGridSubject","formGridMessage","msgObject","sendSocketMessage","createMessage","messageId","deleteMessage","activityRequest","deleteUserActivity","modalCancelHandler","useAlert","getLessonById","formGridTitle","CalendarDate","formGridTime","sessionLimit","formGridLimit","addLessonBooking","formGridSubtitle","formGridDuration","formGridCategory","formGridSku","formGridPrice","updateLessonBasic","updateLessonByField","sessionField","sessionQuery","updateSessionField","session2","newSession","inProgress","addLessonAttendance","getUserBookedSessionsToday","getLessonSession","formGridRating","formGridMaterials","formGridRequirements","imageName","formGridImagename","imageType","formGridImagetype","imagePath","formGridImagepath","fileName","fileType","formGridFilesize","fileSize","filePath","instructorId","deleteLessonBooking","clearAddressFilters","socket","io","emit","room","on","addMessage","userOnline","getPocketVars","pocketVariables","addUserActivity","conversationId","undefined","msg","you","userItem","onDetail","onSelectNoDetail","children","Child","useParams","userList","onViewDetail","canReport","onReport","onSelectMessageReceiver","onFriendRequest","searchUserList","AttachmentViewer","onCloseAttachmentView","href","attachmentFile","MessageUserListForm","UserDetail","isFriend","myFriends","onStartSendMessage","onHideUserDetail","creatingMessage","cancelMessage","sendMessage","UserDetailViewer","SearchUserFieldBasicForm","SearchUserFieldRegexForm","UsersPage","searching","searchUsers","isSorting","detailsLoaded","userSearchField","userSearchQuery","showDetail","modalConfirmSearchBasicHandler","formBasicQuery","formBasicFieldSelect","formBasicField","getUsersByField","modalConfirmSearchRegexHandler","getUsersByFieldRegex","deleteListUser","reportUser","startSendMessage","formBasicTypeSelect","showDetailHandler","getUserById","selectUserNoDetail","hideDetailHandler","sendFriendRequest","onViewAttachment","attachment","format","closeAttachmentView","fetchUsersBasic","getAllUsers","attachmentType","Accordion","sm","Nav","Item","Link","Content","Pane","SearchUserList","lesssonItem","lessonList","puplic","searchLessonItem","searchLessonList","searchLessons","SearchLessonItem","searchSession","LessonDetail","hasLiked","onHideLessonDetail","onLikeLesson","onSessionLoad","onHideSessions","sessionsLoaded","LessonDetailViewer","CreateLessonForm","SearchLessonFieldRegexForm","SearchLessonFieldBasicForm","SearchLessonSessionForm","LessonsPage","lessonUpdateField","lessonSearchField","lessonSearchQuery","getLessonsByFieldRegex","getLessonsByField","modalConfirmSearchSessionHandler","formGridSessionDate","formGridSessionTitle","startCreateLesson","createLessonHandler","creatorId","createLesson","loadSessions","hideSessions","addCartLesson","addUserCartLesson","bookSession","addLessonSession","deleteListLesson","reportLesson","prevState","find","selectLessonNoDetail","likeLesson","addUserLikedLesson","fetchLessonsBasic","getAllLessons","LessonList","SearchLessonList","creator","PublicLessonDetail","showSchedule","hideSchedule","PublicLessonDetailViewer","SearchPublicLessonForm","PublicLessonsPage","guestId","modalConfirmPublicSearchHandler","getPublicLessonsByField","fetchLessonsPublic","getAllPublicLessons","ResetPasswordForm","hidden","params","PasswordReset","resetState","passwordReset","LandingPage","isGuest","mainNavigation","Consumer","App","sessionCookiePresent","passwordResetState","logout2","formGridParams","split","sessionStorageAuth","seshStore","clear","Provider","component","render","from","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86372402.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: {},\n    lesson: {},\n    lessons: [],\n    selectedLesson: null,\n    selectedPerk: null,\n    selectedPromo: null,\n    selectedReview: null,\n    sender: null,\n    receiver: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {}\n});\n","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nimport \"./AttachmentViewer.css\"\n\nconst LoadingOveray = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n      <h5 className=\"attachmentViewerTitle\">status : {props.status} ...</h5>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LoadingOveray;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"email\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>email</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridCode\">\n    <Form.Label>Code</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"verification code\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './ForgotPasswordForm.css';\n\nconst ForgotPasswordForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter username\"/>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridEmail\">\n  <Form.Label>Email</Form.Label>\n  <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\n// import { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n// import Tabs from 'react-bootstrap/Tabs';\n// import Tab from 'react-bootstrap/Tab';\n\nimport Col from 'react-bootstrap/Col';\n// import Nav from 'react-bootstrap/Nav';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\n// import SidebarControl from '../../components/SidebarControl';\nimport VerifyUserForm from '../../components/Forms/user/VerifyUserForm';\nimport ForgotPasswordForm from '../../components/Forms/auth/ForgotPasswordForm';\n\n// import UserProfile from '../user/UserProfile';\n\nclass AuthPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    model: {},\n    activityA: null,\n    requestingPasswordReset: false,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...login component mounted...');\n    if (sessionStorage.getItem('token')) {\n      this.setState({userAlert: \"sessionStorage found...\",userSeshStore: true });\n      this.getThisUser();\n    }\n  }\n\n  retrieveLogin = () => {\n    // this.logUserActivity();\n    // const activityId = sessionStorage.getItem('activityId');\n    // const token = sessionStorage.getItem('token');\n    //\n    // let requestBody = null;\n    //   requestBody = {\n    //     query: `\n    //       mutation {userOnline(\n    //         activityId:\"${activityId}\",\n    //         userId:\"${activityId}\"\n    //       )\n    //       {_id,password,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n    //     `};\n    //\n    // fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //     console.log(resData.data);\n    //     this.context.user = resData.data.userOnline\n    //     console.log(\"retrieving login\");\n    //     this.context.login(\n    //       sessionStorage.getItem('token'),\n    //       sessionStorage.getItem('activityId'),\n    //       sessionStorage.getItem('role'),\n    //       sessionStorage.getItem('tokenExpiration'),\n    //     );\n    //   })\n    //   .catch(err => {\n    //     if (this.isActive) {\n    //       this.setState({userAlert: err});\n    //     }\n    //   });\n\n      console.log(\"retrieving login\");\n      this.context.login(\n        sessionStorage.getItem('token'),\n        sessionStorage.getItem('activityId'),\n        sessionStorage.getItem('role'),\n        sessionStorage.getItem('tokenExpiration'),\n      );\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    console.log('...User Login...');\n    this.setState({ userAlert: \"Logging you in...\"})\n    const email = event.target.formBasicEmail.value;\n    const password = event.target.formBasicPassword.value;\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n    let requestBody = null;\n      requestBody = {\n        query: `\n          query {login(email:\"${email}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // let foo = res.json();\n          // console.log(res,res.body,foo);\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        // this.setState({ activityA: JSON.stringify(requestBody)})\n        // this.logUserActivity();\n        // this.logUserActivity();\n        // let errors = null;\n        // if (\n        //   resData.errors ||\n        //   JSON.stringify(resData).slice(2,7) === 'error'\n        // ) {\n        //   errors = JSON.stringify({...resData.errors});\n        //   this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        // }\n        // console.log('*',resData);\n        // console.log('*',resData.data.login.error);\n        let responseAlert = JSON.stringify(resData.data).slice(2,25);\n        let error = null;\n        if (resData.data.login.error) {\n          error = resData.data.login.error;\n          responseAlert = error;\n        }\n\n        this.setState({userAlert: responseAlert})\n        // let sessionStorageLoginInfo = null;\n\n        if (resData.data.login.token !== \"\") {\n\n\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.activityId,\n            resData.data.login.role,\n            resData.data.login.tokenExpiration\n          );\n         sessionStorage.setItem('token', resData.data.login.token);\n         sessionStorage.setItem('activityId', resData.data.login.activityId);\n         sessionStorage.setItem('role', resData.data.login.role);\n         sessionStorage.setItem('tokenExpiration', resData.data.login.tokenExpiration);\n         // this.setState({ activityA: JSON.stringify(requestBody)})\n         // this.logUserActivity();\n        }\n      })\n      .catch(err => {\n        if (this.isActive) {\n          this.setState({userAlert: err});\n        }\n        // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n  };\n\n  showSidebar = () => {\n        this.setState({\n          sidebarShow: true,\n          mCol2Size: 9\n        })\n    }\n\n  hideSidebar = () => {\n        this.setState({\n          sidebarShow: false,\n          mCol2Size: 11\n        })\n    }\n\n  getThisUser() {\n    console.log(\"get this user...\");\n    const activityId = sessionStorage.getItem('activityId');\n    const token = sessionStorage.getItem('token');\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},toTeachLessons{_id,title,category,price},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,sessionTitle,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const thisUser = resData.data.getThisUser;\n        this.context.user = thisUser;\n        this.setState({ activityA: '...autoLogin by '+thisUser._id+''})\n        // this.logUserActivity();\n        this.retrieveLogin();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  logUserActivity() {\n    console.log('logUserActivity...',sessionStorage.getItem('activityId'),this.state.activityA);\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = sessionStorage.getItem('activityId');\n    const token = sessionStorage.getItem('token');\n    const userId = activityId;\n    // const today = new Date().toLocaleDateString();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,lesson{_id},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        // this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        // this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const contactEmail = event.target.formGridEmail.value;\n    const verificationType = event.target.formGridType.value;\n    const verificationCode = event.target.formGridCode.value;\n\n    const requestBody = {\n      query: `\n      mutation {verifyUser(\n        userInput:{\n          contactEmail:\"${contactEmail}\",\n          verificationType:\"${verificationType}\",\n          verificationCode:\"${verificationCode}\"\n        })\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      // console.log(JSON.stringify(requestBody));\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.verifyUser);\n        this.setState({userAlert: 'Verified...Please try loggin in again..'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startVerification = () => {\n    this.setState({verifying: true})\n  };\n  closeVerification = () => {\n    this.setState({verifying: false})\n  };\n\n  startForgotPassword = () => {\n    this.setState({requestingPasswordReset: true})\n  }\n  cancelPasswordReset = () => {\n    this.setState({requestingPasswordReset: false})\n  }\n\n  requestPasswordReset = (event) => {\n    event.preventDefault();\n    console.log('...requesting password reset...');\n    this.setState({isLoading: true})\n\n    const username = event.target.formGridUsername.value;\n    const email = event.target.formGridEmail.value;\n\n    const requestBody = {\n      query: `\n         mutation {requestPasswordReset(\n           userInput:{\n             username:\"${username}\",\n             contactEmail:\"${email}\"\n           })\n           {_id,username,contact{email}verification{verified,type,code}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData)\n        if (resData.errors) {\n          this.setState({userAlert: resData.errors[0].message});\n        } else {\n          this.setState({userAlert: '...password reset email sent...',isLoading: false, requestingPasswordReset: false});\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n\n  render() {\n    return (\n      <Container className=\"loginPageContainer\">\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n        <Row className=\"loginPageContainerRow2\">\n        <Col className=\"loginPageContainerCol2\">\n          <Form className=\"auth-form\" onSubmit={this.submitHandler}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n              <Form.Text className=\"text-muted\">\n                User Login\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Button variant=\"outline-success\" type=\"submit\" className=\"loginButton\" size=\"lg\">\n              Login\n            </Button>\n\n            <Button variant=\"outline-warning\" className=\"loginButton\" size=\"lg\">\n              <NavLink to=\"/signup\">Signup</NavLink>\n            </Button>\n            <Button variant=\"outline-secondary\" className=\"loginButton\" size=\"sm\" onClick={this.startForgotPassword}>\n              ForgotPassword\n            </Button>\n          </Form>\n        </Col>\n        </Row>\n\n        {this.state.requestingPasswordReset === true && (\n        <Row>\n          <Col>\n            <ForgotPasswordForm\n              onCancel={this.cancelPasswordReset}\n              onConfirm={this.requestPasswordReset}\n            />\n          </Col>\n        </Row>\n        )}\n        <Row className=\"loginPageContainerRow2\">\n          <Col className=\"loginPageContainerCol2\">\n            <Button variant=\"outline-primary\" onClick={this.startVerification}>Verify</Button>\n            {this.state.verifying === true && (\n              <VerifyUserForm\n                canCancel\n                canConfirm\n                onCancel={this.closeVerification}\n                onConfirm={this.verifyUser}\n              />\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateUserForm = (props) => {\n\n  // const [dob, setDob] = useState(new Date());\n  //\n  // const handleChangeDob = date => {\n  //   setDob(date);\n  //   console.log(`Dob ${dob}`);\n  //  }\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridRole\">\n  <Form.Label>Role</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Instructor</option>\n  <option>User</option>\n\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone2\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"Date of Birth\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPublicCheckbox\">\n  <Form.Label>Public ?</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n</Form.Row>\n\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control as=\"select\">\n  //   <option>guest</option>\n  //   <option>nurse</option>\n  //   <option>doctor</option>\n  //   <option>staff</option>\n  //\n  //   </Form.Control>\n  // </Form.Group>\n  // </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"\">\n//   <Form.Label>Fancy D.O.B</Form.Label>\n//   <DatePicker className=\"\" id=\"staffCalendarDob\"\n//     selected={dob}\n//     onChange={handleChangeDob}\n//   />\n// </Form.Group>\n// </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridEmploymentDateTodayCheckbox\">\n//   <Form.Label>Today ?</Form.Label>\n//   <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n// </Form.Group>\n// </Form.Row>\n}\n\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Bio\"/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport AlertBox from '../../components/AlertBox';\nimport CreateUserForm from '../../components/Forms/user/CreateUserForm';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport './Auth.css';\n\nclass SignupPage extends Component {\n  state = {\n    role: null,\n    success: \"Signup!!\",\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    creating: false,\n  };\n\n  modalConfirmUserHandler = (event) => {\n    event.preventDefault();\n\n    this.setState({ creating: false, userAlert: \"Signing you up....\" });\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    let role = event.target.formGridRole.value;\n    let publicProfile = false;\n    if (event.target.formGridPublicCheckbox.checked === true) {\n      publicProfile = true;\n    }\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let addressType = event.target.formGridAddressType.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressCity = event.target.formGridAddressCity.value;\n    let addressCountry = event.target.formGridAddressCountry.value;\n    let addressPostalCode = event.target.formGridAddressPostalCode.value;\n    let bio = event.target.formGridBio.value;\n\n    if (\n      contactEmail.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      contactPhone.trim().length === 0 ||\n      contactPhone2.trim().length === 0 ||\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0 ||\n      bio.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return;\n    }\n\n    const token = this.context.token;\n    const requestBody = {\n      query: `\n            mutation {createUser(\n              userInput:{\n                role:\"${role}\",\n                name:\"${name}\",\n                password:\"${password}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                public:${publicProfile},\n                contactEmail:\"${contactEmail}\",\n                contactPhone:\"${contactPhone}\",\n                contactPhone2:\"${contactPhone2}\",\n                addressType:\"${addressType}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\",\n                bio:\"${bio}\"\n              })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const newUser = resData.data.createUser;\n        const errors = JSON.stringify({...resData.errors});\n        if (JSON.stringify(resData).slice(2,7) === 'error') {\n          this.setState({success: \"Something went wrong!!!\", userAlert: \"Something went wrong!!!\"+errors+\"\"  });\n        } else {\n          this.setState({success: \"Signup success...Proceed to login\", userAlert: \"Signup success...Proceed to login... your verification code is..\"+newUser.verification.code+\"\" });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  cancelSignup = () => {\n    this.setState({creating: false, role: null})\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"loginPageContainer\">\n\n      <Row className=\"loginPageContainerRow2\">\n      <Col className=\"loginPageContainerCol2\">\n\n        <CreateUserForm\n          canCancel\n          canConfirm\n          onConfirm={this.modalConfirmUserHandler}\n          onSubmit={this.modalConfirmUserHandler}\n          confirmText=\"Confirm\"\n          successText={this.state.success}\n          onCancel={this.cancelSignup}\n        />\n\n      </Col>\n      </Row>\n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../context/auth-context';\n// import LoadingOverlay from '../components/LoadingOverlay';\n\nimport './Sidebar.css';\n\nclass SidebarPage extends Component {\n  state = {\n    authContext: AuthContext._currentValue,\n    overlay: false,\n    overlayStatus: \"test\",\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <Container className=\"sidebarContainer\">\n      <Row className=\"sidebarRow1\">\n      <Col md={12} className=\"\">\n\n      <Card border=\"primary\" className=\"sidebarCard\">\n      <Card.Body>\n\n        <NavLink to=\"/userProfile\">My Profile (User)</NavLink>\n\n        <Card.Title className=\"cardTitle\">You</Card.Title>\n        <Card.Subtitle className=\"mb-2\">ID:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user._id}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Name:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.name}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Role:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.role}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n      <Card border=\"secondary\" className=\"sidebarCard\">\n      <Card.Body>\n        <Card.Title className=\"cardTitle\">Selection</Card.Title>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedUser._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedUser.username}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedLesson._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedLesson.title}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n      </Col>\n      </Row>\n      </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SidebarPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./SidebarControl.css\"\n\nconst SidebarControl = (props) =>{\n  return (\n    <div className=\"SidebarControl\">\n      <Button className=\"sidebarButton\" variant=\"success\" onClick={props.onShowSidebar}>+</Button>\n      <Button className=\"sidebarButton\" variant=\"danger\" onClick={props.onHideSidebar}>-</Button>\n    </div>\n  )\n}\n\nexport default SidebarControl;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userAddressItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        number: {props.number}\n      </Card.Text>\n      <Card.Text>\n        street: {props.street}\n      </Card.Text>\n      <Card.Text>\n        town: {props.town}\n      </Card.Text>\n      <Card.Text>\n        city: {props.city}\n      </Card.Text>\n      <Card.Text>\n        country: {props.country}\n      </Card.Text>\n      <Card.Text>\n        postalCode: {props.postalCode}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.address)}>\n            Delete\n          </Button>\n        )}\n\n\n          <Button variant=\"danger\" onClick={props.makeAddressPrimary.bind(this, props.address)}>\n            Make Primary\n          </Button>\n\n\n        { props.orderForm === true && (\n          <Button variant=\"danger\" value={JSON.stringify(props.address)} onClick={props.addToOrder.bind('x')}>\n            Add to order\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userAddressItem;\n","import React from 'react';\n\nimport UserAddressItem from './UserItem/UserAddressItem';\nimport './UserList.css';\n\nconst userAddressList = props => {\n\n  const {...filter} = props.filter;\n  // let userAddresses = [];\n  let userAddresses = props.userAddresses;\n  let propsUserAddresses = [];\n\n  if (filter.field === 'addresses' && filter.key === 'primary') {\n    propsUserAddresses = userAddresses.filter(x => x.primary === filter.value);\n    // userAddresses = propsUserAddresses;\n    console.log('...filter addresses...by...'+filter.key+'...'+filter.value);\n    console.log('...propsUserAddresses...'+propsUserAddresses.length,JSON.stringify(propsUserAddresses));\n    // console.log('...propsUserAddresses.filter stringify...',JSON.stringify(propsUserAddresses.filter(x => x.primary === filter.value)));\n    // console.log('...filter addresses...by...'+filter.key+'...'+filter.value+'...result length...'+propsUserAddresses.filter(x => x.primary === filter.value).length,'...result...',JSON.stringify(propsUserAddresses.filter(x => x.primary === filter.value)));\n    // console.log('...props.userAddresses filter ...',props.userAddresses.filter(x => x.primary === filter.value));\n    console.log('...props.userAddresses length...',props.userAddresses.length);\n    console.log('props.userAddresses',props.userAddresses);\n    console.log('let userAddresses',userAddresses);\n\n  }\n  if (filter.field === 'addresses' && filter.key === 'type') {\n    propsUserAddresses = props.userAddresses.filter(x => x.type === filter.value);\n  }\n  if (filter.field !== 'addresses') {\n    console.log('...no address filter...'+filter.key+'...'+filter.value);\n    console.log('let userAddresses',userAddresses);\n    console.log('propsUserAddresses',propsUserAddresses);\n    console.log('props.userAddresses',props.userAddresses);\n    // userAddresses = props.userAddresses;\n    // propsUserAddresses = userAddresses;\n    // propsUserAddresses = props.userAddresses;\n  }\n\n  userAddresses =  propsUserAddresses.map(address => {\n    return (\n      <UserAddressItem\n        key={address.postalCode}\n        authId={props.authId}\n        type={address.type}\n        number={address.number}\n        street={address.street}\n        town={address.town}\n        city={address.city}\n        country={address.country}\n        postalCode={address.postalCode}\n        primary={address.primary}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        orderForm={props.orderForm}\n        addToOrder={props.addToOrder}\n        makeAddressPrimary={props.makeAddressPrimary}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userAddresses}</ul>;\n};\n\nexport default userAddressList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userProfileImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li>\n          <Image src={props.path} className=\"profileImageImg\" fluid />\n\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n        </ul>\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.profileImage)}>\n            Delete\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userProfileImageItem;\n","import React from 'react';\n\nimport UserProfileImageItem from './UserItem/UserProfileImageItem';\nimport './UserList.css';\n\nconst userProfileImageList = props => {\n  const userProfileImages = props.userProfileImages.map(profileImage => {\n\n    return (\n      <UserProfileImageItem\n        key={profileImage.path}\n        authId={props.authId}\n        name={profileImage.name}\n        type={profileImage.type}\n        path={profileImage.path}\n        profileImage={profileImage}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userProfileImages}</ul>;\n};\n\nexport default userProfileImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userSocialMediaItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.platform}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.handle}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.link}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.socialMediaAccount)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userSocialMediaItem;\n","import React from 'react';\n\nimport UserSocialMediaItem from './UserItem/UserSocialMediaItem';\nimport './UserList.css';\n\nconst userSocialMediaList = props => {\n  const userSocialMedia = props.userSocialMedia.map(socialMediaAccount => {\n\n    return (\n      <UserSocialMediaItem\n        key={socialMediaAccount.path}\n        authId={props.authId}\n        platform={socialMediaAccount.platform}\n        handle={socialMediaAccount.handle}\n        link={socialMediaAccount.link}\n        socialMediaAccount={socialMediaAccount}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userSocialMedia}</ul>;\n};\n\nexport default userSocialMediaList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> createOrder:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.perk)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPerkItem from './UserItem/UserPerkItem';\nimport './UserList.css';\n\nconst userPerkList = props => {\n  const userPerks = props.userPerks.map(perk => {\n\n    let perkDate = 0;\n    if (perk.date !== null && perk.date !== \"\") {\n      perkDate = new Date (perk.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n\n    return (\n      <UserPerkItem\n        key={perk.description}\n        authId={props.authId}\n        name={perk.name}\n        date={perkDate}\n        description={perk.description}\n        code={perk.code}\n        imageLink={perk.imageLink}\n        perk={perk}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPerks}</ul>;\n};\n\nexport default userPerkList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> start/end Dates:</p>\n          <p className=\"userItemText\">\n          {props.startDate}\n          </p>\n          <p className=\"userItemText\">\n          {props.endDate}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> code:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.promo)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPromoItem from './UserItem/UserPromoItem';\nimport './UserList.css';\n\nconst userPromoList = props => {\n  const userPromos = props.userPromos.map(promo => {\n    let promoStartDate = 0;\n    if (promo.startDate !== null && promo.startDate !== \"\") {\n      promoStartDate = new Date (promo.startDate.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n    let promoEndDate = 0;\n    if (promo.endDate !== null && promo.endDate !== \"\") {\n      promoEndDate = new Date (promo.endDate.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n\n    return (\n      <UserPromoItem\n        key={promo._id}\n        authId={props.authId}\n        _id={promo._id}\n        name={promo.name}\n        type={promo.type}\n        valid={promo.valid}\n        startDate={promoStartDate}\n        endDate={promoEndDate}\n        description={promo.description}\n        code={promo.code}\n        imageLink={promo.imageLink}\n        promo={promo}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPromos}</ul>;\n};\n\nexport default userPromoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userInterestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail2 users__list-item_detail\">\n    <div className=\"tag_card_body\">\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.interest}\n        </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.interest)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userInterestItem;\n","import React from 'react';\n\nimport UserInterestItem from './UserItem/UserInterestItem';\nimport './UserList.css';\n\nconst userInterestList = props => {\n  const userInterests = props.userInterests.map(interest => {\n\n    return (\n      <UserInterestItem\n        key={interest}\n        authId={props.authId}\n        interest={interest}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userInterests}</ul>;\n};\n\nexport default userInterestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.tag}\n        </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userTagItem;\n","import React from 'react';\n\nimport UserTagItem from './UserItem/UserTagItem';\nimport './UserList.css';\n\nconst userTagList = props => {\n  const userTags = props.userTags.map(tag => {\n\n    return (\n      <UserTagItem\n        key={tag}\n        authId={props.authId}\n        tag={tag}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userTags}</ul>;\n};\n\nexport default userTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.username}</Card.Title>\n      {props.profileImages.length !== 0 && (\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      )}\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      <Card.Text>\n        phone: {props.phone}\n      </Card.Text>\n      <Card.Text>\n        email: {props.email}\n      </Card.Text>\n      <Card.Text>\n        loggedIn: {props.loggedIn.toString()}\n      </Card.Text>\n      <Card.Text>\n        online: {props.online.toString()}\n      </Card.Text>\n      {props.socialMedia.length !== 0 && (\n      <Card.Text>\n        SocialMedia: {props.socialMedia[0].platform} - {props.socialMedia[0].handle}\n      </Card.Text>\n      )}\n\n        <Button variant=\"primary\" onClick={props.onSelect.bind(this, props.friend)}>\n          Select\n        </Button>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.friend)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendItem;\n","import React from 'react';\n\nimport UserFriendItem from './UserItem/UserFriendItem';\nimport './UserList.css';\n\nconst userFriendList = props => {\n\n  const userFriends = props.userFriends.map(friend=> {\n    return (\n      <UserFriendItem\n        key={friend._id}\n        friend={friend}\n        _id={friend._id}\n        name={friend.name}\n        username={friend.username}\n        phone={friend.contact.phone}\n        email={friend.contact.email}\n        loggedIn={friend.loggedIn}\n        online={friend.clientConnected}\n        profileImages={friend.profileImages}\n        socialMedia={friend.socialMedia}\n        onSelect={props.onSelect}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriends}</ul>;\n};\n\nexport default userFriendList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendRequestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Sender: {props.sender.username}\n      </Card.Text>\n      <Card.Text>\n        Receiver: {props.receiver.username}\n      </Card.Text>\n\n        {props.received && (\n          <Button variant=\"primary\" onClick={props.onAccept.bind(this, props.friendRequest)}>\n          Accept\n          </Button>\n        )}\n        {props.received && (\n          <Button variant=\"danger\" onClick={props.onReject.bind(this, props.friendRequest)}>\n            Reject\n          </Button>\n        )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendRequestItem;\n","import React from 'react';\n\nimport UserFriendRequestItem from './UserItem/UserFriendRequestItem';\nimport './UserList.css';\n\nconst userFriendRequestList = props => {\n\n  const userFriendRequests = props.userFriendRequests.map(friendRequest=> {\n    const requestDate = new Date (friendRequest.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    // console.log(friendRequest.date,friendRequest.sender,friendRequest.receiver);\n    return (\n      <UserFriendRequestItem\n        key={friendRequest.sender._id}\n        friendRequest={friendRequest}\n        date={requestDate}\n        sender={friendRequest.sender}\n        receiver={friendRequest.receiver}\n        onAccept={props.onAccept}\n        onReject={props.onReject}\n        received={props.received}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriendRequests}</ul>;\n};\n\nexport default userFriendRequestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userCartItemItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateAdded: {props.dateAdded}\n      </Card.Text>\n      <Card.Text>\n        sessionDate: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        sessionTitle: {props.sessionTitle}\n      </Card.Text>\n      <Card.Text>\n        Lesson ID: {props.lesson._id}\n      </Card.Text>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.cartItem)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userCartItemItem;\n","import React from 'react';\n\nimport UserCartItemItem from './UserItem/UserCartItemItem';\nimport './UserList.css';\n\nconst UserCartItemList = props => {\n\n  const cart = props.userCartItems.map(cartItem => {\n    // console.log(cartItem);\n    const cartItemDateAdded = new Date (cartItem.dateAdded.substr(0,10)*1000).toISOString().slice(0,10);;\n    const cartItemSessionDate = new Date (cartItem.sessionDate.substr(0,10)*1000).toISOString().slice(0,10);;\n\n    return (\n      <UserCartItemItem\n        key={cartItem.lesson}\n        cartItem={cartItem}\n        authId={props.authId}\n        lesson={cartItem.lesson}\n        dateAdded={cartItemDateAdded}\n        sessionDate={cartItemSessionDate}\n        sessionTitle={cartItem.sessionTitle}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{cart}</ul>;\n};\n\nexport default UserCartItemList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userBookedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateBooked: {props.dateBooked}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n      <Card.Text>\n        Session:\n      </Card.Text>\n      <Card.Text>\n        Title: {props.sessionTitle}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        Time: {props.sessionTime}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'booked', lesson: props.bookedLesson})}>\n        View Details\n      </Button>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.bookedLesson)}>\n          Delete\n        </Button>\n\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userBookedLessonItem;\n","import React from 'react';\n\nimport UserBookedLessonItem from './UserItem/UserBookedLessonItem';\nimport './UserList.css';\n\nconst userBookedLessonList = props => {\n\n  const bookedLessons = props.userBookedLessons.map(bookedLesson => {\n\n    const dateBooked = new Date (bookedLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    const sessionDate = new Date (bookedLesson.session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <UserBookedLessonItem\n        key={bookedLesson.ref}\n        bookedLesson={bookedLesson}\n        dateBooked={dateBooked}\n        sessionDate={sessionDate}\n        sessionTime={bookedLesson.session.time}\n        sessionTitle={bookedLesson.session.title}\n        lesson={bookedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{bookedLessons}</ul>;\n};\n\nexport default userBookedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userLikedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'liked', lesson: props.likedLesson})}>\n        View Details\n      </Button>\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.likedLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userLikedLessonItem;\n","import React from 'react';\n\nimport UserLikedLessonItem from './UserItem/UserLikedLessonItem';\nimport './UserList.css';\n\nconst userLikedLessonList = props => {\n  // console.log(props.userLikedLessons)\n  const likedLessons = props.userLikedLessons.map(likedLesson => {\n    return (\n      <UserLikedLessonItem\n        key={likedLesson}\n        likedLesson={likedLesson}\n        _id={likedLesson._id}\n        title={likedLesson.title}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{likedLessons}</ul>;\n};\n\nexport default userLikedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function userAttendedLessonItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'attended', lesson: props.attendedLesson})}>\n        View Details\n      </Button>\n      {props.hasReviewed !== true && (<Button variant=\"primary\" onClick={props.startCreateReview.bind(this, props.attendedLesson)}>\n        Review\n      </Button>)}\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.attendedLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\n}\n","import React from 'react';\n\nimport UserAttendedLessonItem from './UserItem/UserAttendedLessonItem';\nimport './UserList.css';\n\nconst userAttendedLessonList = props => {\n\n  const attendedLessons = props.userAttendedLessons.map(attendedLesson => {\n    // console.log(attendedLesson.ref._id);\n    // console.log(props.reviewedLessonIds);\n    // console.log(props.reviewedLessonIds.includes(attendedLesson.ref._id.toString()));\n    const hasReviewed = props.reviewedLessonIds.includes(attendedLesson.ref._id.toString());\n    const attendedLessonDate = new Date (attendedLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <UserAttendedLessonItem\n        key={attendedLesson.ref}\n        attendedLesson={attendedLesson}\n        date={attendedLessonDate}\n        lesson={attendedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        hasReviewed={hasReviewed}\n        viewLessonDetails={props.viewLessonDetails}\n        startCreateReview={props.startCreateReview}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attendedLessons}</ul>;\n};\n\nexport default userAttendedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userToTeachLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'toTeach', lesson: props.toTeachLesson})}>\n        View Details\n      </Button>\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userToTeachLessonItem;\n","import React from 'react';\n\nimport UserToTeachLessonItem from './UserItem/UserToTeachLessonItem';\nimport './UserList.css';\n\nconst userToTeachLessonList = props => {\n  // console.log(props.userToTeachLessons)\n  const toTeachLessons = props.userToTeachLessons.map(toTeachLesson => {\n    return (\n      <UserToTeachLessonItem\n        key={toTeachLesson}\n        toTeachLesson={toTeachLesson}\n        _id={toTeachLesson._id}\n        title={toTeachLesson.title}\n        authId={props.authId}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{toTeachLessons}</ul>;\n};\n\nexport default userToTeachLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userTaughtLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'taught', lesson: props.taughtLesson})}>\n        View Details\n      </Button>\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.taughtLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userTaughtLessonItem;\n","import React from 'react';\n\nimport UserTaughtLessonItem from './UserItem/UserTaughtLessonItem';\nimport './UserList.css';\n\nconst userTaughtLessonList = props => {\n\n  const taughtLessons = props.userTaughtLessons.map(taughtLesson => {\n    const taughtLessonDate = new Date (taughtLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    // console.log(taughtLesson.ref);\n    return (\n      <UserTaughtLessonItem\n        key={taughtLesson.ref}\n        taughtLesson={taughtLesson}\n        date={taughtLessonDate}\n        lesson={taughtLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{taughtLessons}</ul>;\n};\n\nexport default userTaughtLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPaymentInfoItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        description: {props.description}\n      </Card.Text>\n      <Card.Text>\n        body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n      <Card.Text>\n        valid: {props.valid.toString()}\n      </Card.Text>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.paymentInfoItem)}>\n          Delete\n        </Button>\n      )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPaymentInfoItem;\n","import React from 'react';\n\nimport UserPaymentInfoItem from './UserItem/UserPaymentInfoItem';\nimport './UserList.css';\n\nconst paymentInfoList = props => {\n\n  const paymentInfo = props.userPaymentInfo.map(paymentInfoItem => {\n    const paymentInfoItemDate = new Date (paymentInfoItem.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    // console.log(paymentInfoItemDate);\n    return (\n      <UserPaymentInfoItem\n        key={paymentInfoItem.description}\n        paymentInfoItem={paymentInfoItem}\n        date={paymentInfoItemDate}\n        type={paymentInfoItem.type}\n        description={paymentInfoItem.description}\n        body={paymentInfoItem.body}\n        valid={paymentInfoItem.valid}\n        primary={paymentInfoItem.primary}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{paymentInfo}</ul>;\n};\n\nexport default paymentInfoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userOrderItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        total: {props.totals.c}\n      </Card.Text>\n      \n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.order)}>\n          Delete\n        </Button>\n      )}\n      \n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userOrderItem;\n","import React from 'react';\n\nimport UserOrderItem from './UserItem/UserOrderItem';\nimport './UserList.css';\n\nconst userOrderList = props => {\n\n  const userOrders = props.userOrders.map(order => {\n    // console.log(order.date);\n    const orderDate = new Date (order.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    // console.log(order.totals);\n    return (\n      <UserOrderItem\n        key={order._id}\n        order={order}\n        _id={order._id}\n        date={orderDate}\n        time={order.time}\n        type={order.type}\n        buyer={order.buyer}\n        receiver={order.receiver}\n        lessons={order.lessons}\n        totals={order.totals}\n        tax={order.tax}\n        description={order.description}\n        notes={order.notes}\n        payment={order.payment}\n        shipping={order.shipping}\n        billingAddress={order.billingAddress}\n        shippingAddress={order.shippingAddress}\n        status={order.status}\n        feedback={order.feedback}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userOrders}</ul>;\n};\n\nexport default userOrderList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userReviewItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        Rating: {props.rating}\n      </Card.Text>\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userReviewItem;\n","import React from 'react';\n\nimport UserReviewItem from './UserItem/UserReviewItem';\nimport './UserList.css';\n\nconst userReviewList = props => {\n\n  const userReviews = props.userReviews.map(review => {\n    const reviewDate = new Date (review.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    return (\n      <UserReviewItem\n        key={review._id}\n        authId={props.authId}\n        _id={review._id}\n        date={reviewDate}\n        type={review.type}\n        body={review.body}\n        rating={review.rating}\n        review={review}\n        lesson={review.lesson}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userReviews}</ul>;\n};\n\nexport default userReviewList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userMessgeItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Title>\n          Message\n        </Card.Title>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> sender:</p>\n          <p className=\"userItemText\">\n          {props.sender.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> receiver:</p>\n          <p className=\"userItemText\">\n          {props.receiver.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> time:</p>\n          <p className=\"userItemText\">\n          {props.time}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> subject:</p>\n          <p className=\"userItemText\">\n          {props.subject}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> message:</p>\n          <p className=\"userItemText\">\n          {props.messageMessage}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> read:</p>\n          <p className=\"userItemText\">\n          {props.read.toString()}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props._id)}>\n            Delete\n          </Button>\n        )}\n\n        {props.received && (\n          <Button variant=\"info\" onClick={props.onStartReply.bind(this, props.message)}>\n            Reply\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userMessgeItem;\n","import React from 'react';\n\nimport UserMessageItem from './UserItem/UserMessageItem';\nimport './UserList.css';\n\nconst userMessageList = props => {\n  const userMessages = props.userMessages.map(message => {\n    const messageDate = new Date (message.date.substr(0,10)*1000).toISOString().slice(0,10);;\n      // console.log('msg',props.authId,message.sender._id,message.receiver._id);\n    return (\n      <UserMessageItem\n        key={message.path}\n        authId={props.authId}\n        _id={message._id}\n        date={messageDate}\n        time={message.time}\n        type={message.type}\n        subject={message.subject}\n        messageMessage={message.message}\n        sender={message.sender}\n        receiver={message.receiver}\n        read={message.read}\n        message={message}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        received={props.received}\n        onStartReply={props.onStartReply}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userMessages}</ul>;\n};\n\nexport default userMessageList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userActivityItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.activityDate}\n      </Card.Text>\n      <Card.Text>\n        Request: {props.request}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userActivityItem;\n","import React from 'react';\n\nimport UserActivityItem from './UserItem/UserActivityItem';\nimport './UserList.css';\n\nconst userActivityList = props => {\n\n  const activity = props.userActivity.map(activity => {\n    const activityDate = new Date (activity.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    return (\n      <UserActivityItem\n        key={activity.request}\n        activity={activity}\n        date={activityDate}\n        request={activity.request}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{activity}</ul>;\n};\n\nexport default userActivityList;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport './CreateUserForm.css';\n\nconst UpdateUserBasicForm = (props) => {\n\n  const {...user} = props.user;\n  // const [dob, setDob] = useState(new Date());\n  const prevDob = new Date(user.dob.substr(0,9)*1000).toLocaleDateString().slice(0,10)\n\n  // const handleChangeDob = date => {\n  //   setDob(date);\n  //   console.log(`Dob ${dob}`);\n  //  }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder={user.contact.email}/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder={user.password}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.name}/>\n</Form.Group>\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control type=\"text\" placeholder={user.role}/>\n  // </Form.Group>\n}\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.username} />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone2}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B: {prevDob}</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.dob}/>\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={user.bio}/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateUserFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>contact.email</option>\n    <option>password</option>\n    <option>name</option>\n    <option>username</option>\n    <option>dob</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>bio</option>\n    <option>points</option>\n    <option>verification.type</option>\n    <option>verification.verified</option>\n    <option>verification.code</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserAddressForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserAddressForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserProfileImageForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilename\">\n    <Form.Label>Filename</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filename\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFiletype\">\n    <Form.Label>Filetype</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilepath\">\n    <Form.Label>Link Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"link address\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserProfileImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserSocialMediForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPlatform\">\n    <Form.Label>Platform</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Platform\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridHandle\">\n    <Form.Label>Handle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Handle\"/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridLink\">\n    <Form.Label>Link</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Link\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserSocialMediForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserInterestsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridInterests\">\n    <Form.Label>Interests</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"interest, interest, interests\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserInterestsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserTagsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Tags</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"tag, tag, tags\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserTagsForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst AddUserPaymentInfoForm = (props) => {\n\n  const [payInfoDate, setPayInfoDate] = useState(new Date());\n  const handleChangePayInfoDate = date => {\n    setPayInfoDate(date);\n    console.log(`PayInfoDate ${payInfoDate}`);\n   }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"\">\n    <Form.Label>Date</Form.Label>\n    <DatePicker className=\"\" id=\"paymentInfoDate\"\n      selected={payInfoDate}\n      onChange={handleChangePayInfoDate}\n    />\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control as=\"select\">\n    <option>type a</option>\n    <option>type 2</option>\n    </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Description\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridBody\">\n    <Form.Label>Body</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Body\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoPrimaryCheckbox\">\n    <Form.Label>Primary</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPaymentInfoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPointsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPoints\">\n    <Form.Label>Points</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"point amount\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPointsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPerkForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Perk Id: {props.selectedPerk._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPerkForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPromoForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Promo Id: {props.selectedPromo._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPromoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserFriendForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Friend Id: {props.requestingFriendId} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserFriendForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateMessageForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Message Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n{props.receiver && (<Form.Group as={Col} controlId=\"formGridSubject\">\n  <Form.Label>Subject</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Subject\" />\n</Form.Group>)}\n\n{props.replyTo && (<Form.Group as={Col} controlId=\"formGridSubject\">\n  <Form.Label>Subject</Form.Label>\n  <Form.Control type=\"text\" value={props.replyTo.subject} />\n</Form.Group>)}\n\n{props.receiver && (<Form.Group as={Col} controlId=\"formGridReceiver\">\n  <Form.Label>Receiver: {props.receiver.username}</Form.Label>\n</Form.Group>)}\n\n{props.replyTo && (<Form.Group as={Col} controlId=\"formGridReceiver\">\n  <Form.Label>replyTo: {props.replyTo.sender.username}</Form.Label>\n</Form.Group>)}\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridMessage\">\n  <Form.Label>Message</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Message\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateMessageForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n// import UserAddressList from '../../Users/UserList/UserAddressList';\n\nconst CreateOrderForm = (props) => {\n  const {...user} = props.user;\n  // const userCartLessonSkus = user.cart.map(x => x.lesson.sku);\n    // const addressTypes = user.addresses.map(address => console.log(address.type));\n    const billingAddresses = user.addresses.filter(address => address.type === 'Billing');\n    const shippingAddresses = user.addresses.filter(address => address.type === 'Shipping')\n    const primaryShippingAddresses = shippingAddresses.filter(address => address.primary === true)\n    const primaryBillingAddresses = billingAddresses.filter(address => address.primary === true)\n    const primaryShippingAddress = primaryShippingAddresses[0];\n    const primaryBillingAddress = primaryBillingAddresses[0];\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTotalA\">\n  <Form.Label>TotalA</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" value={props.subtotal}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTotalB\">\n  <Form.Label>TotalB</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" value={0}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTotalC\">\n  <Form.Label>TotalC</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" value={0}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTaxDescription\">\n  <Form.Label>TaxDescription</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"3\" placeholder='tax description'/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTaxAmount\">\n  <Form.Label>TaxAmount</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\"value={0}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Description\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPayment\">\n  <Form.Label>Payment</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Payment\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridShipping\">\n  <Form.Label>Shipping</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Shipping\"/>\n</Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressNumber\">\n    <Form.Label>BillingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryBillingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressStreet\">\n    <Form.Label>BillingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressTown\">\n    <Form.Label>BillingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCity\">\n    <Form.Label>BillingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCountry\">\n    <Form.Label>BillingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressPostalCode\">\n    <Form.Label>BillingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressNumber\">\n    <Form.Label>ShippingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryShippingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressStreet\">\n    <Form.Label>ShippingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressTown\">\n    <Form.Label>ShippingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCity\">\n    <Form.Label>ShippingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCountry\">\n    <Form.Label>ShippingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressPostalCode\">\n    <Form.Label>ShippingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateOrderForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateReviewForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridTitle\">\n  <Form.Label>Title</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Title\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBody\">\n  <Form.Label>Body</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Body\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridRating\">\n  <Form.Label>Rating</Form.Label>\n  <Form.Control type=\"number\" max=\"5\" placeholder=\"Rating\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateReviewForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import SessionBookedList from '../SessionBookedList';\n// import SessionAttendedList from '../SessionAttendedList';\n\nimport './UserItem.css';\n\nexport default function meetingSessionItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        full: {props.full}\n      </Card.Text>\n      <Card.Text>\n        limit: {props.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {props.amount}\n      </Card.Text>\n      <Card.Text>\n        url: {props.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {props.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {props.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n    <Button variant=\"primary\" onClick={props.viewSessionDetails.bind(this, props.session)}>\n      Details\n    </Button>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport MeetingSessionItem from './LessonItem/MeetingSessionItem';\nimport './UserList.css';\n\nconst meetingSessionList = props => {\n\n  const sessions = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <MeetingSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        title={session.title}\n        date={sessionDate}\n        time={session.time}\n        full={session.full}\n        limit={session.limit}\n        amount={session.amount}\n        url={session.url}\n        bookedAmount={session.bookedAmount}\n        attendedAmount={session.attendedAmount}\n        viewSessionDetails={props.viewSessionDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{sessions}</ul>;\n};\n\nexport default meetingSessionList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst sessionBookedItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      {props.addSessionAttendance &&\n        props.isInstructor === true &&\n        props.userAttended === false && (\n        <Button variant=\"primary\" onClick={props.addSessionAttendance.bind(this, props.attendance)}>\n          Add Attendance\n        </Button>\n      )}\n      {props.isInstructor === true &&\n        props.addSessionAttendance && (\n        <Button variant=\"danger\" onClick={props.cancelSessionBooking.bind(this, {session: props.session, user: props.user})}>\n          Cancel Booking\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default sessionBookedItem;\n","import React from 'react';\n\nimport SessionBookedItem from './LessonItem/SessionBookedItem';\nimport './UserList.css';\n\nconst sessionBookedList = props => {\n\n  const booked = props.booked.map(user => {\n\n    let userAttended = false;\n    const userAttended2 = props.attended.filter(x => x._id === user._id);\n    if (userAttended2.length === 0) {\n      userAttended = false;\n    }\n    if (userAttended2.length !== 0) {\n      userAttended = true;\n    }\n    // console.log(userAttended2);\n    const attendance = {\n      user: user,\n      sessionDate: props.session.date,\n      sessionTitle: props.session.title,\n    };\n    return (\n      <SessionBookedItem\n        session={props.session}\n        key={user._id}\n        attendance={attendance}\n        user={user}\n        _id={user._id}\n        username={user.username}\n        isInstructor={props.isInstructor}\n        userAttended={userAttended}\n        addSessionAttendance={props.addSessionAttendance}\n        cancelSessionBooking={props.cancelSessionBooking}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{booked}</ul>;\n};\n\nexport default sessionBookedList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst sessionAttendedItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default sessionAttendedItem;\n","import React from 'react';\n\nimport SessionAttendedItem from './LessonItem/SessionAttendedItem';\nimport './UserList.css';\n\nconst sessionAttendedList = props => {\n\n  const attended = props.attended.map(user => {\n    return (\n      <SessionAttendedItem\n        key={user._id}\n        user={user}\n        _id={user._id}\n        username={user.username}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attended}</ul>;\n};\n\nexport default sessionAttendedList;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateSessionFieldForm = (props) => {\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n{\n//   <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridSessionTitle\">\n//   <Form.Label>SessionTitle</Form.Label>\n//   <Form.Control type=\"text\" placeholder='session title' />\n// </Form.Group>\n// <Form.Group as={Col} controlId=\"formGridQuery\">\n//   <Form.Label>Query</Form.Label>\n//   <Form.Control type=\"text\" placeholder='query' />\n// </Form.Group>\n// </Form.Row>\n\n}\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n    <Form.Label>Field: </Form.Label>\n    <Form.Control as=\"select\">\n    <option>url</option>\n    <option>time</option>\n    <option>limit</option>\n    </Form.Control>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query</Form.Label>\n    <Form.Control type=\"text\" placeholder='query' />\n  </Form.Group>\n</Form.Row>\n\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Edit\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateSessionFieldForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from './Lessons/LessonList/SessionBookedList';\nimport SessionAttendedList from './Lessons/LessonList/SessionAttendedList';\nimport UpdateSessionFieldForm from './Forms/lesson/UpdateSessionFieldForm';\n\nimport \"./AttachmentViewer.css\"\n\nconst SessionDetailViewer = (props) =>{\n  const {...session} = props.session\n  // console.log(\"beep\",session, session.booked,props.sessionBookedState,session.attended);\n  const sessionDate = new Date (session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n  let isInstructor = false;\n  if ( session.lessonInstructors.includes(props.authId) === true) {\n    isInstructor = true\n  }\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <p>SessionDetailViewer</p>\n\n    <Card>\n    <Card.Body>\n    <Button variant=\"primary\" onClick={props.hideSessionDetails}>\n      Hide\n    </Button>\n\n      <Card.Title>{session.title}</Card.Title>\n      <Card.Text>\n        isInstructor: {isInstructor.toString()}\n      </Card.Text>\n      <Card.Text>\n        lesson: {session.lessonTitle}\n      </Card.Text>\n      <Card.Text>\n        date: {sessionDate}\n      </Card.Text>\n      <Card.Text>\n        time: {session.time}\n      </Card.Text>\n      <Card.Text>\n        limit: {session.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {session.amount}\n      </Card.Text>\n      <Card.Text>\n        full: {session.full}\n      </Card.Text>\n      <Card.Text>\n        url: {session.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {session.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {session.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n\n\n    </Card>\n\n\n    <Button variant=\"primary\" onClick={props.showSessionBooked}>\n      Show Booked\n    </Button>\n    <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n      Hide Booked\n    </Button>\n    <Button variant=\"primary\" onClick={props.showSessionAttended}>\n      Show Attended\n    </Button>\n    <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n      Hide Attended\n    </Button>\n\n    {props.sessionBookedState === true && (\n      <SessionBookedList\n      session={props.session}\n      isInstructor={isInstructor}\n      booked={session.booked}\n      attended={session.attended}\n      addSessionAttendance={props.addSessionAttendance}\n    />)}\n    {props.sessionAttendedState === true && (\n      <SessionAttendedList\n      attended={session.attended}\n    />)}\n\n\n\n    {props.editSessionField && (\n      <Button variant=\"primary\" onClick={props.startEditSessionField.bind(this, props.session)}>\n          Edit\n        </Button>\n      )}\n    {props.editingSessionField === true && (\n      <UpdateSessionFieldForm\n        authId={props.authId}\n        session={props.session}\n        onConfirm={props.editSessionField}\n        onCancel={props.cancelEditSessionField}\n      />\n    )}\n    {\n      // <p>{props.authId}</p>\n\n    // {props.editSessionField && (\n    //   <Button variant=\"primary\" onClick={props.editSessionField.bind(this, props.session)}>\n    //       Edit\n    //     </Button>\n    //   )}\n    // {props.editingSessionField === true && (\n    //   <UpdateSessionFieldForm\n    //     authId={props.authId}\n    //     session={props.session}\n    //     onConfirm={props.editSessionField}\n    //     onCancel={props.cancelEditSessionField}\n    //   />\n    // )}\n\n    // <Button variant=\"primary\" onClick={props.showSessionBooked}>\n    //   Show Booked\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n    //   Hide Booked\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.showSessionAttended}>\n    //   Show Attended\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n    //   Hide Attended\n    // </Button>\n    //\n    // {props.sessionBookedState === true && (\n    //   <SessionBookedList\n    //   session={props.session}\n    //   isInstructor={props.isInstructor}\n    //   booked={props.booked}\n    //   attended={props.attended}\n    //   addSessionAttendance={props.addSessionAttendance}\n    // />)}\n    // {props.sessionAttendedState === true && (\n    //   <SessionAttendedList\n    //   attended={props.attended}\n    // />)}\n    //\n\n\n    }\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default SessionDetailViewer;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Form from 'react-bootstrap/Form';\n\nimport UserAddressList from './UserList/UserAddressList';\nimport UserProfileImageList from './UserList/UserProfileImageList';\nimport UserSocialMediaList from './UserList/UserSocialMediaList';\n\nimport UserPerkList from './UserList/UserPerkList';\nimport UserPromoList from './UserList/UserPromoList';\n\nimport UserInterestList from './UserList/UserInterestList';\nimport UserTagList from './UserList/UserTagList';\n\nimport UserFriendList from './UserList/UserFriendList';\nimport UserFriendRequestList from './UserList/UserFriendRequestList';\nimport UserCartItemList from './UserList/UserCartItemList';\nimport UserBookedLessonList from './UserList/UserBookedLessonList';\nimport UserLikedLessonList from './UserList/UserLikedLessonList';\nimport UserAttendedLessonList from './UserList/UserAttendedLessonList';\nimport UserToTeachLessonList from './UserList/UserToTeachLessonList';\nimport UserTaughtLessonList from './UserList/UserTaughtLessonList';\nimport UserPaymentInfoList from './UserList/UserPaymentInfoList';\n\nimport UserOrderList from './UserList/UserOrderList';\nimport UserReviewList from './UserList/UserReviewList';\nimport UserMessageList from './UserList/UserMessageList';\nimport UserActivityList from './UserList/UserActivityList';\n\nimport UpdateUserBasicForm from '../Forms/user/UpdateUserBasicForm';\nimport UpdateUserFieldForm from '../Forms/user/UpdateUserFieldForm';\n\nimport AddUserAddressForm from '../Forms/user/AddUserAddressForm';\nimport AddUserProfileImageForm from '../Forms/user/AddUserProfileImageForm';\nimport AddUserSocialMediaForm from '../Forms/user/AddUserSocialMediaForm';\n\nimport AddUserInterestsForm from '../Forms/user/AddUserInterestsForm';\nimport AddUserTagsForm from '../Forms/user/AddUserTagsForm';\n\nimport AddUserPaymentInfoForm from '../Forms/user/AddUserPaymentInfoForm';\n\nimport AddUserPointsForm from '../Forms/user/AddUserPointsForm';\nimport AddUserPerkForm from '../Forms/user/AddUserPerkForm';\nimport AddUserPromoForm from '../Forms/user/AddUserPromoForm';\n\nimport AddUserFriendForm from '../Forms/user/AddUserFriendForm';\nimport CreateMessageForm from '../Forms/message/CreateMessageForm';\nimport CreateOrderForm from '../Forms/order/CreateOrderForm';\nimport CreateReviewForm from '../Forms/review/CreateReviewForm';\n\nimport MeetingSessionList from '../Lessons/LessonList/MeetingSessionList';\nimport SessionDetailViewer from '../SessionDetailViewer';\n\n\n\nimport './thisUserProfile.css';\n\nconst thisUserProfile = (props) => {\nconst {...user} = props.user;\n\n// const userAddress = user.address;\nconst userDob = new Date(user.dob.substr(0,9)*1000).toLocaleDateString().slice(0,10);\n\nlet sentRequests = [];\nlet receivedRequests = [];\nif (user.friendRequests !== []) {\n  // console.log('!!!',user._id, user.friendRequests, user.friendRequests[0].sender._id, user.friendRequests[0].receiver._id);\n  sentRequests = user.friendRequests.filter(request => request.sender._id === user._id);\n  receivedRequests = user.friendRequests.filter(request => request.receiver._id === user._id);\n}\n// console.log('sentRequests',sentRequests,'receivedRequests',receivedRequests);\n// const publicUser = user.public.toString();\n// const today = new Date().toLocaleDateString().slice(0,10);\n// const today2 = new Date(today);\n\n// console.log('today',today2,user.bookedLessons.map(x=> console.log(x.date)));\n// console.log('today',today,user.bookedLessons.filter(x=> x.date === today ));\n// get todays booked lessons, filter for sessions today, result = meeting list, to each, add get session and if isInstructor, update session componts & reqs\n\n// const bookedLessonSessions = user.bookedLessons\nlet messagesSent = [];\nlet messagesReceived = [];\nmessagesSent = user.messages.filter(x => x.sender._id === props.authId);\nmessagesReceived = user.messages.filter(x => x.receiver._id === props.authId);\nconst reviewedLessonIds = user.reviews.map(x => x.lesson._id);\n// console.log(user.reviews.map(x => x.lesson._id));\nlet hasShippingAddress = user.addresses.filter(x => x.type === 'Shipping' && x.primary === true).length === 0;\n// console.log(user.addresses,user.addresses.filter(x => x.type === 'Shipping'),hasShippingAddress);\n\nlet userAddresses = user.addresses;\n\n// const setFilter2 = (args) => {\n//   console.log('...setFilter2...',args);\n//   if (args.key === 'primary') {\n//     let test2 = userAddresses.filter(x => x.primary === true)\n//     userAddresses = test2;\n//     console.log(user.addresses,userAddresses,test2,args.value);\n//   }\n//   if (args.key === 'type') {\n//     let test2 = userAddresses.filter(x => x.type === args.value)\n//     userAddresses = test2;\n//     console.log(user.addresses,userAddresses,test2,args.value);\n//   }\n// }\n\n\n// - filters\n//   - address\n//     - type\n//     - primary\n//   - friend\n//     -\n//   - message\n//     - asc/desc by date\n//     - by sender/receiver name\n//   - likedlesson\n//     - title\n//   - bookedLesson/attendedLesson/taughtLesson/wishlist\n//     - date\n//     - lesson title\n//   - order\n//     - date\n//   - paymentinfo\n//     - date\n//     - Type\n//     - valid\n//     - primary\n//   - friendRequests\n//     - date\n//     - sender/receiver name\n//   - review\n//     - date\n//     - lesson title\n\n\nconst orderSubtotal = user.cart.map(x => x.lesson);\nconst orderSubtotal2 = orderSubtotal.map(x => x.price )\nconst orderSubtotal3 = orderSubtotal2.reduce((a, b) => a + b, 0).toFixed(2);\n// console.log(orderSubtotal,orderSubtotal2,orderSubtotal3);\n\nconsole.log('user.cancellations',user.cancellations);\n\n  return (\n\n  <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\">\n    <Tab eventKey=\"\" title=\"Details:\" disabled>\n    </Tab>\n    <Tab eventKey=\"Basic\" title=\"Basic\">\n    <Card className=\"UserDetailCard\">\n    <Card.Body>\n      <Card.Title><span className=\"ul\">Your Profile Details</span></Card.Title>\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Name:</span> {user.name}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">D.O.B:</span> {userDob}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Age:</span> {user.age}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone:</span> {user.contact.phone}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone 2:</span> {user.contact.phone2}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Email:</span> {user.contact.email}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Points :</span> {user.points}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Public :</span> {user.public.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn :</span> {user.loggedIn.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">online :</span> {user.clientConnected.toString()}\n          </Card.Text>\n\n          <Card.Text>\n            <span className=\"bold\">Verification :</span> {user.verification.type}, {user.verification.verified.toString()}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdate}>Edit</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdateField}>Edit 1 Field</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"points\")}>+ Points</Button>\n\n      {props.updating === true &&\n        props.userAddField === \"basic\" && (\n        <UpdateUserBasicForm\n          canCancelProfile\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditBasic}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.updating === true &&\n        props.updatingField === true && (\n        <UpdateUserFieldForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditField}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.userAddField === \"points\" &&\n        user.role === 'Admin' && (\n        <AddUserPointsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPoints}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n    </Card.Body>\n    </Card>\n    </Tab>\n\n    <Tab eventKey=\"address\" title=\"address\">\n\n\n    <Button variant=\"primary\" onClick={props.setFilter.bind(this, {field: 'addresses', key: 'primary', value: true})}>\n      Filter by primary\n    </Button>\n    <Button variant=\"primary\" onClick={props.setFilter.bind(this, {field: 'addresses', key: 'type', value: 'Billing'})}>\n      Filter by type: Billing\n    </Button>\n    <Button variant=\"primary\" onClick={props.setFilter.bind(this, {field: 'addresses', key: 'type', value: 'Shipping'})}>\n      Filter by type: Shipping\n    </Button>\n    <Button variant=\"danger\" onClick={props.setFilter.bind(this, {field: null, key: null, value: null })}>\n      clearFilter\n    </Button>\n\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"address\")}>+ Address</Button>\n    {props.userAddField === \"address\" && (\n        <AddUserAddressForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddAddress}\n          confirmText=\"Confirm\"\n        />\n    )}\n    {user.addresses !== null &&\n      user.addresses !== [] && (\n        <UserAddressList\n          filter={props.filter}\n          userAddresses={userAddresses}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAddress}\n          makeAddressPrimary={props.makeAddressPrimary}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"profileImages\" title=\"profileImages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"profileImage\")}>+ Image</Button>\n    {props.userAddField === \"profileImage\" && (\n        <AddUserProfileImageForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddProfileImage}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.profileImages !== null &&\n      user.profileImages !== [] && (\n        <UserProfileImageList\n          userProfileImages={user.profileImages}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteProfileImage}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"socialMedia\" title=\"socialMedia\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"socialMedia\")}>+ Social Media</Button>\n    {props.userAddField === \"socialMedia\" && (\n        <AddUserSocialMediaForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddSocialMedia}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.socialMedia !== null &&\n      user.socialMedia !== [] && (\n        <UserSocialMediaList\n          userSocialMedia={user.socialMedia}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteSocialMedia}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"perks\" title=\"perks\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"perk\")}>+ Perk</Button>\n\n    {props.userAddField === \"perk\" &&\n    props.selectedPerk !== null && (\n        <AddUserPerkForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPerk}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          perk={props.selectedPerk}\n        />\n      )}\n\n    {user.perks !== null &&\n      user.perks !== [] && (\n        <UserPerkList\n          userPerks={user.perks}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePerk}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"promos\" title=\"promos\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"promo\")}>+ Promo</Button>\n\n    {props.userAddField === \"promo\" &&\n      props.selectedPromo !== null && (\n        <AddUserPromoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPromo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          promo={props.selectedPromo}\n        />\n    )}\n\n    {user.promos !== null &&\n      user.promos !== [] && (\n        <UserPromoList\n          userPromos={user.promos}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePromo}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"interests\" title=\"interests\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"interests\")}>+ Interests</Button>\n\n    {props.userAddField === \"interests\" && (\n        <AddUserInterestsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddInterests}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.interests !== null &&\n      user.interests !== [] && (\n        <UserInterestList\n          userInterests={user.interests}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteInterest}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"tags\" title=\"tags\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"tags\")}>+ Tags</Button>\n\n    {props.userAddField === \"tags\" && (\n        <AddUserTagsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddTags}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.tags !== null &&\n      user.tags !== [] && (\n        <UserTagList\n          userTags={user.tags}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteTag}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"friends\" title=\"friends\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"friend\")}>+ Friend</Button>\n\n    {props.userAddField === \"friend\" && (\n        <AddUserFriendForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddFriend}\n          confirmText=\"Confirm\"\n          requestingFriend={props.requestingFriend}\n          user={props.user}\n        />\n      )}\n\n    {user.friends !== null &&\n      user.friends !== [] && (\n        <UserFriendList\n          userFriends={user.friends}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteFriend}\n          onSelect={props.userSelectFriend}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"friendRequests\" title=\"friendRequests\">\n\n      <Tabs defaultActiveKey=\"received\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"received\" title=\"received\">\n          <p>Received</p>\n          {user.friendRequests !== null &&\n            user.friendRequests !== [] && (\n              <UserFriendRequestList\n                received\n                userFriendRequests={receivedRequests}\n                authId={props.authId}\n                onReject={props.userRejectFriendRequest}\n                onAccept={props.userAcceptFriendRequest}\n              />\n            )}\n        </Tab>\n        <Tab eventKey=\"sent\" title=\"sent\">\n          <p>Sent</p>\n          {user.friendRequests !== null &&\n            user.friendRequests !== [] && (\n              <UserFriendRequestList\n                userFriendRequests={sentRequests}\n                authId={props.authId}\n                onReject={props.userRejectFriendRequest}\n                onAccept={props.userAcceptFriendRequest}\n              />\n            )}\n        </Tab>\n      </Tabs>\n\n    </Tab>\n\n    <Tab eventKey=\"cart\" title=\"cart\">\n\n    {user.cart !== null &&\n      user.cart !== [] &&\n      hasShippingAddress === false && (\n    <Button variant=\"primary\" onClick={props.startCartCheckout.bind(this, user.cart)}>\n      Checkout\n    </Button>\n    )}\n\n    {hasShippingAddress === true && (\n    <Button variant=\"warning\">\n      Can't Checkout...Add a shipping address 1st...and make sure it's a primary address...\n    </Button>\n    )}\n\n    {props.creatingOrder === true && (\n      <CreateOrderForm\n        user={user}\n        subtotal={orderSubtotal3}\n        onCancel={props.cancelCartCheckout}\n        onConfirm={props.createOrder}\n        addAddressToOrder={props.addAddressToOrder}\n        orderBillingAddress={props.orderBillingAddress}\n        orderShippingAddress={props.orderShippingAddress}\n      />\n    )}\n\n    {user.cart !== null &&\n      user.cart !== [] && (\n        <UserCartItemList\n          userCartItems={user.cart}\n          authId={props.authId}\n          canDelete={true}\n          onDelete={props.userDeleteCartItem}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"likedLessons\" title=\"likedLessons\">\n\n    {user.likedLessons !== null &&\n      user.likedLessons!== [] && (\n        <UserLikedLessonList\n          userLikedLessons={user.likedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteLikedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"bookedLessons\" title=\"bookedLessons\">\n\n    {user.bookedLessons !== null &&\n      user.bookedLessons!== [] && (\n        <UserBookedLessonList\n          userBookedLessons={user.bookedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteBookedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"attendedLessons\" title=\"attendedLessons\">\n\n    {props.creatingReview === true &&\n      props.reviewLesson !== null && (\n      <CreateReviewForm\n      authId={props.authId}\n      author={user}\n      lesson={props.reviewLesson}\n      canConfirm\n      canCancel\n      onCancel={props.cancelCreateReview}\n      onConfirm={props.createReview}\n      />\n    )}\n\n    {user.attendedLessons !== null &&\n      user.attendedLessons!== [] && (\n        <UserAttendedLessonList\n          userAttendedLessons={user.attendedLessons}\n          reviewedLessonIds={reviewedLessonIds}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAttendedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n          startCreateReview={props.startCreateReview}\n        />\n      )}\n\n    </Tab>\n\n    {user.role === \"Instructor\" ||\n      user.role === 'Admin' && (\n      <Tab eventKey=\"toTeachLessons\" title=\"toTeachLessons\">\n\n      {user.toTeachLessons !== null &&\n        user.toTeachLessons!== [] && (\n          <UserToTeachLessonList\n            userToTeachLessons={user.toTeachLessons}\n            authId={props.authId}\n            viewLessonDetails={props.viewLessonDetails}\n          />\n        )}\n\n      </Tab>\n    )}\n\n    {user.role === \"Instructor\" ||\n      user.role === 'Admin' && (\n      <Tab eventKey=\"taughtLessons\" title=\"taughtLessons\">\n      {\n        user.taughtLessons !== null &&\n        user.taughtLessons!== [] && (\n          <UserTaughtLessonList\n            userTaughtLessons={user.taughtLessons}\n            authId={props.authId}\n            canDelete={props.canDelete}\n            onDelete={props.userDeleteTaughtLesson}\n            viewLessonDetails={props.viewLessonDetails}\n          />\n        )}\n\n      </Tab>\n    )}\n\n    <Tab eventKey=\"paymentInfo\" title=\"paymentInfo\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"paymentInfo\")}>+ PaymentInfo</Button>\n\n    {props.userAddField === \"paymentInfo\" && (\n        <AddUserPaymentInfoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPaymentInfo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.paymentInfo !== null &&\n      user.paymentInfo !== [] && (\n        <UserPaymentInfoList\n          userPaymentInfo={user.paymentInfo}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePaymentInfo}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"messages\" title=\"messages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartCreateMessage}>+ Message</Button>\n\n    {props.messageReceiver === null && (\n      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\" >Select someone to message</Button>\n    )}\n\n    {props.userAddField === \"message\" &&\n      props.messageReceiver !== null && (\n        <CreateMessageForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userCreateMessage}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          receiver={props.messageReceiver}\n        />\n      )}\n\n      <Tabs defaultActiveKey=\"received\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"received\" title=\"received\">\n          <p>Received</p>\n\n          {props.messageReplying === true && (\n            <CreateMessageForm\n              canCancel\n              canConfirm\n              onCancel={props.onCancelReply}\n              onConfirm={props.onReply}\n              confirmText=\"Confirm\"\n              user={props.user}\n              authId={props.authId}\n              replyTo={props.replyTo}\n            />\n          )}\n\n          {messagesReceived !== null &&\n            messagesReceived !== [] && (\n              <UserMessageList\n                userMessages={messagesReceived}\n                authId={props.authId}\n                canDelete={props.canDelete}\n                onDelete={props.userDeleteMessage}\n                received\n                onStartReply={props.onStartReply}\n              />\n            )}\n        </Tab>\n        <Tab eventKey=\"sent\" title=\"sent\">\n          <p>Sent</p>\n          {messagesSent !== null &&\n            messagesSent !== [] && (\n              <UserMessageList\n                userMessages={messagesSent}\n                authId={props.authId}\n                canDelete={props.canDelete}\n                onDelete={props.userDeleteMessage}\n              />\n            )}\n        </Tab>\n      </Tabs>\n\n    </Tab>\n\n    <Tab eventKey=\"orders\" title=\"orders\">\n\n    {user.orders !== null &&\n      user.orders !== [] && (\n        <UserOrderList\n          userOrders={user.orders}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteOrder}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"reviews\" title=\"reviews\">\n\n    {user.reviews !== null &&\n      user.reviews !== [] && (\n        <UserReviewList\n          userReviews={user.reviews}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteReview}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"meeting\" title=\"meeting\">\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.loadMeetings}>Load Today's</Button>\n      <Button variant=\"outline-danger\" size=\"lg\" className=\"confirmEditButton\" onClick={props.hideMeetings}>Hide</Button>\n\n\n      {props.sessionDetailViewer === true && (\n        <SessionDetailViewer\n        authId={props.authId}\n        session={props.session}\n        startEditSessionField={props.startEditSessionField}\n        cancelEditSessionField={props.cancelEditSessionField}\n        editingSessionField={props.editingSessionField}\n        editSessionField={props.editSessionField}\n        showSessionBooked={props.showSessionBooked}\n        showSessionAttended={props.showSessionAttended}\n        hideSessionBooked={props.hideSessionBooked}\n        hideSessionAttended={props.hideSessionAttended}\n        sessionBookedState={props.sessionBookedState}\n        sessionAttendedState={props.sessionAttendedState}\n        hideSessionDetails={props.hideSessionDetails}\n        addSessionAttendance={props.addSessionAttendance}\n        />\n      )}\n\n      {props.meetingsLoaded === true && (\n      <MeetingSessionList\n        authId={props.authId}\n        lessonSessions={props.meetingSessions}\n        viewSessionDetails={props.viewSessionDetails}\n      />\n      )}\n\n      <p>zoom mtg create button, dom element etc </p>\n    </Tab>\n\n    <Tab eventKey=\"activity\" title=\"activity\">\n\n    {user.activity !== null &&\n      user.activity !== [] && (\n        <UserActivityList\n          userActivity={user.activity}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteActivity}\n        />\n      )}\n\n    </Tab>\n  </Tabs>\n  );\n}\n\nexport default thisUserProfile;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from '../SessionBookedList';\nimport SessionAttendedList from '../SessionAttendedList';\n\nimport './UserItem.css';\n\nexport default function lessonSessionItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        full: {props.full}\n      </Card.Text>\n      <Card.Text>\n        limit: {props.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {props.amount}\n      </Card.Text>\n      <Card.Text>\n        url: {props.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {props.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {props.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n    {!props.meetings && (\n      <Button variant=\"primary\" onClick={props.showSessionBooked}>\n        Show Booked\n      </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n      Hide Booked\n    </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.showSessionAttended}>\n      Show Attended\n    </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n      Hide Attended\n    </Button>\n    )}\n    {props.meetings && (\n      <Button variant=\"primary\" >\n        Details\n      </Button>\n    )}\n\n    {props.sessionBookedState === true && (\n      <SessionBookedList\n      session={props.session}\n      isInstructor={props.isInstructor}\n      booked={props.booked}\n      attended={props.attended}\n      addSessionAttendance={props.addSessionAttendance}\n      cancelSessionBooking={props.cancelSessionBooking}\n    />)}\n    {props.sessionAttendedState === true && (\n      <SessionAttendedList\n      attended={props.attended}\n    />)}\n\n    {props.onBookSession && (<Button variant=\"primary\" onClick={props.onBookSession.bind(this, props.session)}>\n          Book\n        </Button>)}\n    {props.editSessionField &&\n      props.isInstructor === true && (<Button variant=\"primary\" onClick={props.editSessionField.bind(this, props.session)}>\n          Edit\n        </Button>)}\n    {props.onAddCartLesson && (<Button variant=\"secondary\" onClick={props.onAddCartLesson.bind(this, props.session)}>\n          Cart\n        </Button>)}\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport LessonSessionItem from './LessonItem/LessonSessionItem';\nimport './UserList.css';\n\nconst lessonSessionList = props => {\n\n  const sessions = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <LessonSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        isInstructor={props.isInstructor}\n        title={session.title}\n        date={sessionDate}\n        time={session.time}\n        full={session.full}\n        limit={session.limit}\n        amount={session.amount}\n        url={session.url}\n        booked={session.booked}\n        bookedAmount={session.bookedAmount}\n        attended={session.attended}\n        attendedAmount={session.attendedAmount}\n        onBookSession={props.onBookSession}\n        onAddCartLesson={props.onAddCartLesson}\n        editSessionField={props.editSessionField}\n        showSessionBooked={props.showSessionBooked}\n        showSessionAttended={props.showSessionAttended}\n        hideSessionBooked={props.hideSessionBooked}\n        hideSessionAttended={props.hideSessionAttended}\n        sessionBookedState={props.sessionBookedState}\n        sessionAttendedState={props.sessionAttendedState}\n        addSessionAttendance={props.addSessionAttendance}\n        cancelSessionBooking={props.cancelSessionBooking}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{sessions}</ul>;\n};\n\nexport default lessonSessionList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonScheduleItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      Date: {props.date}, Time: {props.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonScheduleItem;\n","import React from 'react';\n\nimport LessonScheduleItem from './LessonItem/LessonScheduleItem';\nimport './UserList.css';\n\nconst lessonScheduleList = props => {\n\n  const dates = props.lessonSchedule.map(date => {\n    // console.log(date);\n    const scheduleDate = new Date (date.date.substr(0,10)*1000).toISOString().slice(0,10);;\n\n    return (\n      <LessonScheduleItem\n        key={date}\n        date={scheduleDate}\n        time={date.time}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{dates}</ul>;\n};\n\nexport default lessonScheduleList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonInstructorItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      <Card.Text>\n      ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n      username: {props.username}\n      </Card.Text>\n      <Card.Text>\n      socialMedia\n      </Card.Text>\n      <Card.Text>\n      {props.socialMedia[0].platform} @ {props.socialMedia[0].handle}\n      </Card.Text>\n      <Card.Text>\n      Email: {props.contact.email}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.instructor)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonInstructorItem;\n","import React from 'react';\n\nimport LessonInstructorItem from './LessonItem/LessonInstructorItem';\nimport './UserList.css';\n\nconst lessonInstructorList = props => {\n\n  const instructors = props.lessonInstructors.map(instructor => {\n    return (\n      <LessonInstructorItem\n        key={instructor}\n        instructor={instructor}\n        _id={instructor._id}\n        username={instructor.username}\n        contact={instructor.contact}\n        socialMedia={instructor.socialMedia}\n        profileImages={instructor.profileImages}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{instructors}</ul>;\n};\n\nexport default lessonInstructorList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonRequirementItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.requirement}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.requirement)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonRequirementItem;\n","import React from 'react';\n\nimport LessonRequirementItem from './LessonItem/LessonRequirementItem';\nimport './UserList.css';\n\nconst lessonRequirementList = props => {\n\n  const requirements = props.lessonRequirements.map(requirement => {\n    return (\n      <LessonRequirementItem\n        public={props.public}\n        key={requirement}\n        requirement={requirement}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{requirements}</ul>;\n};\n\nexport default lessonRequirementList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonMaterialItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.material}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.material)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonMaterialItem;\n","import React from 'react';\n\nimport LessonMaterialItem from './LessonItem/LessonMaterialItem';\nimport './UserList.css';\n\nconst lessonMaterialList = props => {\n\n  const materials = props.lessonMaterials.map(material => {\n    return (\n      <LessonMaterialItem\n        key={material}\n        material={material}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{materials}</ul>;\n};\n\nexport default lessonMaterialList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.tag}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonTagItem;\n","import React from 'react';\n\nimport LessonTagItem from './LessonItem/LessonTagItem';\nimport './UserList.css';\n\nconst lessonTagList = props => {\n\n  const tags = props.lessonTags.map(tag => {\n    return (\n      <LessonTagItem\n        public={props.public}\n        key={tag}\n        tag={tag}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{tags}</ul>;\n};\n\nexport default lessonTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n    <Card.Img variant=\"top\" src={props.path} />\n      <Card.Text>\n        Name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Path: {props.path}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.image)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonImageItem;\n","import React from 'react';\n\nimport LessonImageItem from './LessonItem/LessonImageItem';\nimport './UserList.css';\n\nconst lessonImageList = props => {\n\n  const images = props.lessonImages.map(image => {\n    return (\n      <LessonImageItem\n        public={props.public}\n        key={image}\n        image={image}\n        name={image.name}\n        type={image.type}\n        path={image.path}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{images}</ul>;\n};\n\nexport default lessonImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonFileItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Size: {props.size}\n      </Card.Text>\n      <Card.Text>\n        Path: {props.path}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.file)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonFileItem;\n","import React from 'react';\n\nimport LessonFileItem from './LessonItem/LessonFileItem';\nimport './UserList.css';\n\nconst lessonFileList = props => {\n\n  const files = props.lessonFiles.map(file => {\n    return (\n      <LessonFileItem\n        key={file}\n        file={file}\n        name={file.name}\n        type={file.type}\n        size={file.size}\n        path={file.path}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{files}</ul>;\n};\n\nexport default lessonFileList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function lessonReviewItem (props) {\n  let isAuthor = false;\n  if (props.authId === props.author._id) {\n    isAuthor = true;\n  }\nreturn (\n    <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n      <Card style={{ width: '18rem' }}>\n\n      <Card.Body>\n        <Card.Text>\n        ID: {props._id}\n        </Card.Text>\n        <Card.Text>\n        Title: {props.title}\n        </Card.Text>\n        <Card.Text>\n        Type: {props.type}\n        </Card.Text>\n        <Card.Text>\n        isAuthor?: {isAuthor.toString()}\n        </Card.Text>\n        <Card.Text>\n        Author: {props.type}\n        </Card.Text>\n        <Card.Text>\n        ID: {props.author._id}\n        </Card.Text>\n        <Card.Text>\n        Body: {props.body}\n        </Card.Text>\n        <Card.Text>\n        Rating: {props.rating}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n    </li>\n  );\n}\n","import React from 'react';\n\nimport LessonReviewItem from './LessonItem/LessonReviewItem';\nimport './UserList.css';\n\nconst lessonReviewList = props => {\n\n  const reviews = props.lessonReviews.map(review => {\n    return (\n      <LessonReviewItem\n        key={review}\n        review={review}\n        _id={review._id}\n        title={review.title}\n        type={review.type}\n        author={review.author}\n        body={review.body}\n        rating={review.rating}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{reviews}</ul>;\n};\n\nexport default lessonReviewList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateLessonSessionForm = (props) => {\n\n  const [date, setDate] = useState(new Date());\n\n    const handleChangeDate = date => {\n      setDate(date);\n      console.log(`date ${date}`);\n     }\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"\">\n  <Form.Label>Session Date</Form.Label>\n  <DatePicker className=\"\" id=\"CalendarDate\"\n    selected={date}\n    onChange={handleChangeDate}\n  />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTime\">\n  <Form.Label>Time</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Time\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLimit\">\n  <Form.Label>Limit</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Limit\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n<Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n</Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonSessionForm;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateLessonBasicForm = (props) => {\nconst {...lesson} = props.lesson;\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.title}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.subtitle}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.duration}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type: {lesson.type}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category: {lesson.category}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.sku} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder={lesson.price} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder={lesson.points} />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={lesson.description}/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder={lesson.notes}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateLessonFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>title</option>\n    <option>subtitle</option>\n    <option>type</option>\n    <option>category</option>\n    <option>sku</option>\n    <option>price</option>\n    <option>description</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonRequirementsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridRequirements\">\n  <Form.Label>Requirements</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"requirement, requirement, requirement\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonRequirementsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonMaterialsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMaterials\">\n  <Form.Label>Materials</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"material, material, material\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonMaterialsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonTagsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTags\">\n  <Form.Label>Tags</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"tags, tags, tags\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonTagsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonImageForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagename\">\n  <Form.Label>Filename</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filename\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagetype\">\n  <Form.Label>Filetype</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagepath\">\n  <Form.Label>Link Address</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"link address\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonRequirementsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilename\">\n  <Form.Label>Filename</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filename\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilesize\">\n  <Form.Label>Filesize</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filesize\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFiletype\">\n  <Form.Label>Filetype</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilepath\">\n  <Form.Label>Link Address</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"link address\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonRequirementsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonInstructorForm = (props) => {\n// const {...user} = props.user;\nconsole.log('props.selectedInstructor',props.selectedInstructor.role);\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n{props.selectedInstructor.role !== 'Instructor' && (\n<Form.Row>\n  <Form.Group as={Col} controlId=\"\">\n  <Form.Label> {props.selectedInstructor.username} is not an Instructor! </Form.Label>\n</Form.Group>\n</Form.Row>\n)}\n{props.selectedInstructor.role === 'Instructor' && (\n<Form.Row>\n  <Form.Group as={Col} controlId=\"\">\n  <Form.Label>Add Instructor: {props.selectedInstructor.username} to this lesson...?</Form.Label>\n</Form.Group>\n</Form.Row>\n)}\n<Form.Row>\n\n{props.selectedInstructor.role === 'Instructor' && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.selectedInstructor.role === 'Instructor' && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonInstructorForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './Lessons/LessonList/LessonSessionList';\nimport LessonScheduleList from './Lessons/LessonList/LessonScheduleList';\nimport LessonInstructorList from './Lessons/LessonList/LessonInstructorList';\nimport LessonRequirementList from './Lessons/LessonList/LessonRequirementList';\nimport LessonMaterialList from './Lessons/LessonList/LessonMaterialList';\nimport LessonTagList from './Lessons/LessonList/LessonTagList';\nimport LessonImageList from './Lessons/LessonList/LessonImageList';\nimport LessonFileList from './Lessons/LessonList/LessonFileList';\nimport LessonReviewList from './Lessons/LessonList/LessonReviewList';\nimport CreateLessonSessionForm from './Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from './Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from './Forms/lesson/UpdateLessonFieldForm';\nimport UpdateSessionFieldForm from './Forms/lesson/UpdateSessionFieldForm';\n\nimport AddLessonRequirementsForm from './Forms/lesson/AddLessonRequirementsForm';\nimport AddLessonMaterialsForm from './Forms/lesson/AddLessonMaterialsForm';\nimport AddLessonTagsForm from './Forms/lesson/AddLessonTagsForm';\nimport AddLessonImageForm from './Forms/lesson/AddLessonImageForm';\nimport AddLessonFileForm from './Forms/lesson/AddLessonFileForm';\nimport AddLessonInstructorForm from './Forms/lesson/AddLessonInstructorForm';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './AttachmentViewer.css';\n\nconst ProfileLessonViewer = (props) => {\n\n  const lessonType = props.lessonType;\n  const {...lesson} = props.profileLesson;\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  // let canDelete = false;\n  // if (isInstructor === true ) {\n  //   canDelete = true\n  // }\n  console.log(lesson);\n  return (\n\n      <div className=\"attachmentViewerBg\">\n      <div className=\"attachmentViewer\">\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n        <Tab eventKey=\"Basic\" title=\"Basic\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n          <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n          <Row className=\"detailCardRow\">\n            <Col className=\"detailCardCol\">\n            {isInstructor === true &&(\n              <Card.Text>\n              Your lesson\n              </Card.Text>\n            )}\n            <Card.Text>\n              <span className=\"bold\">ID:</span> {lesson._id}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Title:</span> {lesson.title}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Type:</span> {lesson.type}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Category:</span> {lesson.category}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Sku:</span> {lesson.sku}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Price:</span> {lesson.price}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Description:</span> {lesson.description}\n            </Card.Text>\n\n            </Col>\n\n            <Col className=\"detailCardCol\">\n            <Card.Text>\n              <span className=\"bold\">Main Instructor:</span>\n            </Card.Text>\n\n            <Card.Text>\n            ID: {lesson.instructors[0]._id}\n            </Card.Text>\n            <Card.Text>\n            Username: {lesson.instructors[0].username}\n            </Card.Text>\n            <Card.Text>\n              Contact\n            </Card.Text>\n            <Card.Text>\n              Email: {lesson.instructors[0].contact.email}\n            </Card.Text>\n\n            </Col>\n\n          </Row>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Schedule\n            </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleSchedule}>\n              show/hide\n            </Button>\n            {props.showScheduleState === true && (\n              <LessonScheduleList\n                lessonSchedule={lesson.schedule}\n              />\n            )}\n            </Col>\n          </Row>\n\n            <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.closeProfileLessonView}>\n                  x\n                </Button>\n              </Col>\n            </Row>\n\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"sessions\" title=\"sessions\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n        <Row className=\"detailCardRow\">\n\n          <Col>\n          <p>Sessions:</p>\n\n          {lesson.sessions !== [] && (\n          <Button variant=\"primary\" onClick={props.toggleSessions}>\n            Show/Hide\n          </Button>\n          )}\n          {lesson.sessions !== [] &&\n            props.showSessionState === true && (\n            <LessonSessionList\n            isInstructor={isInstructor}\n            lessonSessions={lesson.sessions}\n            editSessionField={props.startEditSessionField}\n            showSessionBooked={props.showSessionBooked}\n            showSessionAttended={props.showSessionAttended}\n            hideSessionBooked={props.hideSessionBooked}\n            hideSessionAttended={props.hideSessionAttended}\n            sessionBookedState={props.sessionBookedState}\n            sessionAttendedState={props.sessionAttendedState}\n            addSessionAttendance={props.addSessionAttendance}\n            cancelSessionBooking={props.cancelSessionBooking}\n            />\n          )}\n          </Col>\n\n\n          {isInstructor === true &&\n            lessonType === 'booked' && (\n\n          <Col className=\"detailCardCol\">\n          {props.editingSessionField === true && (\n            <UpdateSessionFieldForm\n              authId={props.authId}\n              session={props.session}\n              onConfirm={props.editSessionField}\n              onCancel={props.cancelEditSessionField}\n            />\n          )}\n\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          {props.creatingSession === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n          )}\n\n        </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"reviews\" title=\"reviews\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Reviews\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleReviews}>\n                Show/Hide\n              </Button>\n              {props.showReviewsState === true && (\n                <LessonReviewList\n                  lessonReviews={lesson.reviews}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"materials/requirements\" title=\"materials/requirements\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Requirements\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleRequirements}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'requirements')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'requirements' && (\n                <AddLessonRequirementsForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonRequirements}\n                />\n              )}\n              {props.showRequirementsState === true && (\n                <LessonRequirementList\n                  lessonRequirements={lesson.requirements}\n                  canDelete\n                  onDelete={props.deleteLessonRequirement}\n                />\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Materials\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleMaterials}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'materials')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'materials' && (\n                <AddLessonMaterialsForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonMaterials}\n                />\n              )}\n              {props.showMaterialsState === true && (\n                <LessonMaterialList\n                  lessonMaterials={lesson.materials}\n                  canDelete\n                  onDelete={props.deleteLessonMaterial}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"images\" title=\"images\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Images\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleImages}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'images')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'images' && (\n                <AddLessonImageForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonImage}\n                />\n              )}\n              {props.showImagesState === true && (\n                <LessonImageList\n                  lessonImages={lesson.gallery}\n                  canDelete\n                  onDelete={props.deleteLessonImage}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"files\" title=\"files\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Files\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleFiles}>\n                Show/Hide\n              </Button>\n              {isInstructor === true &&  (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'files')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'files' && (\n                <AddLessonFileForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonFile}\n                />\n              )}\n              {props.showFilesState === true && (\n                <LessonFileList\n                  lessonFiles={lesson.files}\n                  canDelete\n                  onDelete={props.deleteLessonFile}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"instructors\" title=\"instructors\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Instructors\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleInstructors}>\n                Show/Hide\n              </Button>\n              {isInstructor === true &&\n                JSON.stringify(props.selectedInstructor) === \"{}\" && (\n              <Button variant=\"warning\">\n                Select an Instructor to Add\n              </Button>\n              )}\n              {isInstructor === true &&\n                JSON.stringify(props.selectedInstructor) !== \"{}\" && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'instructors')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'instructors' &&  (\n                <AddLessonInstructorForm\n                selectedInstructor={props.selectedInstructor}\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonInstructor}\n                />\n              )}\n              {props.showInstructorsState === true && (\n                <LessonInstructorList\n                  lessonInstructors={lesson.instructors}\n                  canDelete\n                  onDelete={props.deleteLessonInstructor}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"tags\" title=\"tags\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Tags\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleTags}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'tags')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'tags' && (\n              <AddLessonTagsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonTags}\n              />\n            )}\n            {props.showTagsState === true && (\n              <LessonTagList\n                lessonTags={lesson.tags}\n                canDelete\n                onDelete={props.deleteLessonTag}\n              />\n            )}\n          </Col>\n        </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"edit\" title=\"edit\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n            {isInstructor === true && (\n                <Row className=\"detailCardRow\">\n                <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n                  Edit Basic\n                </Button>\n                  {props.editingLesson === true && (\n                    <UpdateLessonBasicForm\n                    lesson={lesson}\n                    onCancel={props.cancelEditBasic}\n                    onConfirm={props.editLessonBasic}\n                    />\n                  )}\n                </Col>\n\n              </Row>\n            )}\n\n              {isInstructor === true && (\n                <Row className=\"detailCardRow\">\n                <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n                  Edit Field\n                </Button>\n                  {props.editingLessonField === true && (\n                    <UpdateLessonFieldForm\n                    lesson={lesson}\n                    onCancel={props.cancelEditField}\n                    onConfirm={props.editLessonField}\n                    />\n                  )}\n                </Col>\n\n              </Row>\n            )}\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n      </Tabs>\n      </div>\n      </div>\n\n  );\n}\n\nexport default ProfileLessonViewer;\n\n\n//   <div className=\"attachmentViewerBg\">\n//   <div className=\"attachmentViewer\">\n//\n// <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n//\n//   <Tab eventKey=\"Basic\" title=\"Basic\">\n//   <Card className=\"UserDetailCard\">\n//   <Card.Body>\n//     <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//       {isInstructor === true &&(\n//         <Card.Text>\n//         Your lesson\n//         </Card.Text>\n//       )}\n//       <Card.Text>\n//         <span className=\"bold\">ID:</span> {lesson._id}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Title:</span> {lesson.title}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Type:</span> {lesson.type}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Category:</span> {lesson.category}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Sku:</span> {lesson.sku}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Price:</span> {lesson.price}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Description:</span> {lesson.description}\n//       </Card.Text>\n//\n//       </Col>\n//\n//       <Col className=\"detailCardCol\">\n//       <Card.Text>\n//         <span className=\"bold\">Main Instructor:</span>\n//       </Card.Text>\n//\n//       <Card.Text>\n//       ID: {lesson.instructors[0]._id}\n//       </Card.Text>\n//       <Card.Text>\n//       Username: {lesson.instructors[0].username}\n//       </Card.Text>\n//       <Card.Text>\n//         Contact\n//       </Card.Text>\n//       <Card.Text>\n//         Email: {lesson.instructors[0].contact.email}\n//       </Card.Text>\n//\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Instructors\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleInstructors}>\n//           Show/Hide\n//         </Button>\n//         {props.showInstructorsState === true && (\n//           <LessonInstructorList\n//             lessonInstructors={lesson.instructors}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Schedule\n//       </Card.Text>\n//       <Button variant=\"danger\" onClick={props.toggleSchedule}>\n//         show/hide\n//       </Button>\n//       {props.showScheduleState === true && (\n//         <LessonScheduleList\n//           lessonSchedule={lesson.schedule}\n//         />\n//       )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Requirements\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleRequirements}>\n//           Show/Hide\n//         </Button>\n//         {props.showRequirementsState === true && (\n//           <LessonRequirementList\n//             lessonRequirements={lesson.requirements}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Materials\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleMaterials}>\n//           Show/Hide\n//         </Button>\n//         {props.showMaterialsState === true && (\n//           <LessonMaterialList\n//             lessonMaterials={lesson.materials}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Reviews\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleReviews}>\n//           Show/Hide\n//         </Button>\n//         {props.showReviewsState === true && (\n//           <LessonReviewList\n//             lessonReviews={lesson.reviews}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//         <Button variant=\"danger\" onClick={props.closeProfileLessonView}>\n//           x\n//         </Button>\n//       </Col>\n//     </Row>\n//\n//\n// <Row className=\"detailCardRow\">\n//\n//   <Col>\n//   <p>Sessions:</p>\n//\n//   <Button variant=\"primary\" onClick={props.toggleSessions}>\n//     Show/Hide\n//   </Button>\n//   {lesson.sessions !== [] &&\n//     props.showSessionState === true && (\n//     <LessonSessionList\n//     isInstructor={isInstructor}\n//     lessonSessions={lesson.sessions}\n//     editSessionField={props.startEditSessionField}\n//     showSessionBooked={props.showSessionBooked}\n//     showSessionAttended={props.showSessionAttended}\n//     hideSessionBooked={props.hideSessionBooked}\n//     hideSessionAttended={props.hideSessionAttended}\n//     sessionBookedState={props.sessionBookedState}\n//     sessionAttendedState={props.sessionAttendedState}\n//     addSessionAttendance={props.addSessionAttendance}\n//     />\n//   )}\n//   </Col>\n//\n//\n//   {isInstructor === true && (\n//\n//   <Col className=\"detailCardCol\">\n//   {props.editingSessionField === true && (\n//     <UpdateSessionFieldForm\n//       authId={props.authId}\n//       session={props.session}\n//       onConfirm={props.editSessionField}\n//       onCancel={props.cancelEditSessionField}\n//     />\n//   )}\n//\n//   <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n//     New Session\n//   </Button>\n//   {props.creatingSession === true && (\n//     <CreateLessonSessionForm\n//       authId={props.authId}\n//       onCancel={props.cancelCreateSession}\n//       onConfirm={props.createLessonSession}\n//     />\n//   )}\n//   </Col>\n//\n//   )}\n//\n// </Row>\n//\n//     {isInstructor === true && (\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//\n//       <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n//         Edit Basic\n//       </Button>\n//         {props.editingLesson === true && (\n//           <UpdateLessonBasicForm\n//           lesson={lesson}\n//           onCancel={props.cancelEditBasic}\n//           onConfirm={props.editLessonBasic}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//     )}\n//\n//     {isInstructor === true && (\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//       <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n//         Edit Field\n//       </Button>\n//         {props.editingLessonField === true && (\n//           <UpdateLessonFieldForm\n//           lesson={lesson}\n//           onCancel={props.cancelEditField}\n//           onConfirm={props.editLessonField}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//     )}\n//\n//   </Card.Body>\n//   </Card>\n//   </Tab>\n//\n// </Tabs>\n//\n// </div>\n// </div>\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Tab from 'react-bootstrap/Tab';\n// import Nav from 'react-bootstrap/Nav';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport Spinner from '../../components/Spinner/Spinner';\n// import AttachmentViewer from '../../components/AttachmentViewer';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\n\nimport ThisUserProfile from '../../components/Users/thisUserProfile';\nimport ProfileLessonViewer from '../../components/ProfileLessonViewer';\n\nimport './Users.css';\nimport io from 'socket.io-client';\n\nclass UserProfile extends Component {\n  state = {\n    user: null,\n    userCopy: null,\n    users: [],\n    updating: false,\n    adding: false,\n    deleting: false,\n    updatingField: false,\n    isLoading: false,\n    userUpdateField: null,\n    userAddField: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    canDelete: null,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    messagesLoaded: false,\n    userMessages: null,\n    finalConfirmation: false,\n    socketMsg: \"\",\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    selectedFriendRequest: null,\n    requestingFriend: null,\n    userSelectedFriend: null,\n    orderBillingAddress: null,\n    orderShippingAddress: null,\n    profileLessonViewer: false,\n    profileLessonViewerData: null,\n    profileLessonType: null,\n    showSessionState: false,\n    showScheduleState: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    editingSessionField: false,\n    session: null,\n    sessionBookedState: false,\n    sessionAttendedState: false,\n    meetingsLoaded: false,\n    meetingSessions: [],\n    sessionDetailViewer: false,\n    showInstructorsState: false,\n    showRequirementsState: false,\n    showMaterialsState: false,\n    showTagsState: false,\n    showFilesState: false,\n    showImagesState: false,\n    showReviewsState: false,\n    creatingReview: false,\n    reviewLesson: null,\n    messageReplying: false,\n    replyTo: null,\n    filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n  };\n\n  isActive = true;\n  static contextType = AuthContext;\n\n  constructor(props){\n      super(props);\n      this.socket = io('http://localhost:9099');\n      this.userCopy = null;\n    }\n\n  componentDidMount() {\n    console.log('...user profile component mounted...');\n    this.getThisUser();\n\n    this.socket.emit('msg_subscribe', {user: this.context.activityId, room:'msg'+this.context.activityId});\n    // this.socket.emit('msg_subscribe', 'msg'+conversationId);\n    console.log(\"listening for pms...\");\n    this.socket.on('conversation private post', function(data) {\n      console.log(\"you got a new message..\",data);\n      addMessage(data);\n    });\n    const addMessage = data => {\n      this.setState({\n        userAlert: `New Msg!!\n          Fr:   ${data.message.senderName},\n          Msg:   ${data.message.message}`})\n    };\n\n    this.userOnline();\n\n  };\n\n  getPocketVars () {\n    console.log('...retriving pocketVars..');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n          query:`\n            query {getPocketVars(\n              activityId:\"${activityId}\")\n            {pocketVariables}}\n          `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('beep',resData.data.getPocketVars.pocketVariables,JSON.parse(resData.data.getPocketVars.pocketVariables));\n        this.setState({userAlert: resData.data.getPocketVars.pocketVariables})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  getThisUser() {\n    this.setState({ isLoading: true });\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},toTeachLessons{_id,title,category,price},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,sessionTitle,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        let errors = null;\n        if (\n          resData.errors ||\n          JSON.stringify(resData).slice(2,7) === 'error'\n        ) {\n          errors = JSON.stringify({...resData.errors});\n          this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        }\n\n          const thisUser = resData.data.getThisUser;\n          // console.log(thisUser);\n          this.context.user = thisUser;\n          this.userCopy = thisUser;\n          if (this.isActive) {\n          this.setState({ user: thisUser, userCopy: thisUser, isLoading: false, activityA: JSON.stringify(requestBody) });\n          }\n          if (sessionStorage.getItem('token')) {\n            this.setState({userAlert: \"Welcome Back...\"})\n          }\n          if (thisUser.name === \"Lord-of-the-Manor\"){\n            this.setState({canDelete: true, userAlert: \"Mi'Lord!!\"})\n          }\n          // this.getPocketVars();\n          // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    // const today = new Date().toLocaleDateString();\n    const request = this.state.activityA;\n    // console.log(activityId,userId,request);\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",'message',message,'this.socket',this.socket);\n    this.setState({userAlert: \"sending socket message  \"+'message'+message+'this.socket'+this.socket})\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n\n      addMessage(data)\n    })\n\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  };\n  userOnline () {\n    console.log('...bringing user online...');\n    this.setState({userAlert: 'bringing user online...'})\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        mutation{userOnline(\n          activityId:\"${activityId}\",\n          userId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data.userOnline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  onStartUpdate = () => {\n    this.setState({ updating: true, userAddField: 'basic' });\n  };\n  onStartUpdateField = () => {\n    this.setState({ updating: true, updatingField: true });\n  };\n  onStartAdd = (args) => {\n    this.setState({adding: true, userAddField: args})\n  };\n  addUserField = (args) => {\n    this.setState({adding: true, userAddField: args})\n  };\n  startCreateMessage = () => {\n    if (this.context.receiver === null) {\n      this.setState({userAlert: \"select a receiver 1st...\"});\n    }\n    this.setState({adding: true, userAddField: \"message\"})\n  };\n\n  startCartCheckout = () => {\n    this.setState({creatingOrder: true})\n  };\n  cancelCartCheckout = () => {\n    this.setState({creatingOrder: false})\n  };\n\n  userEditBasic = (event) => {\n    this.setState({ updating: false, userAlert: \"Updating selected Staff ...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    // let role = this.context.user.role;\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let bio = event.target.formGridBio.value;\n\n    if (contactEmail.trim().length === 0 ) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      contactEmail = this.context.user.contact.email;\n    }\n    if (password.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      password = this.context.user.password;\n    }\n    if (name.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      name = this.context.user.name;\n    }\n    if (username.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      username = this.context.user.username;\n    }\n    // if (role.trim().length === 0) {\n    //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n    //   role = this.state.user.role;\n    // }\n    if (dob.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      dob = this.context.user.dob;\n    }\n    if (bio.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      bio = this.context.user.bio;\n    }\n\n    const requestBody = {\n      query: `\n          mutation {updateUserBasic(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              name:\"${name}\",\n              password:\"${password}\",\n              username:\"${username}\",\n              dob:\"${dob}\",\n              contactEmail:\"${contactEmail}\",\n              contactPhone:\"${contactPhone}\",\n              contactPhone2:\"${contactPhone2}\",\n              bio:\"${bio}\"\n            })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const updatedUser = resData.data.updateUserBasic;\n        this.context.user = updatedUser;\n        const responseAlert = JSON.stringify(resData.data.updateUserBasic).slice(2,25);\n\n        this.setState({ userAlert: responseAlert, user: updatedUser, activityA: JSON.stringify(requestBody)})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    };\n  userEditField = (event) => {\n      this.setState({ updatingField: false, userAlert: \"Updating selected Staff by Field...\" });\n      const token = this.context.token;\n      const activityId = this.context.activityId;\n      let userId = activityId;\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        // field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      const requestBody = {\n        query:`\n          mutation {updateUserByField(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            field:\"${field}\",\n            query:\"${query}\")\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          const responseAlert = JSON.stringify(resData.data.updateUserByField).slice(2,25);\n          this.setState({ userAlert: responseAlert, user: resData.data.updateUserByField, activityA: JSON.stringify(requestBody)})\n          this.context.user = this.state.user;\n          // this.logUserActivity();\n        })\n        .catch(err => {\n          this.setState({userAlert: err});\n        });\n    };\n  userAddPoints = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding points for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        let userId = activityId;\n        const points = event.target.formGridPoints.value;\n\n        const requestBody = {\n          query:`\n            mutation {addUserPoints(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              userInput:{\n                points:${points}\n              })\n              {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n        fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n            }\n            return res.json();\n          })\n          .then(resData => {\n\n            const responseAlert = JSON.stringify(resData.data.addUserPoints).slice(2,25);\n            this.setState({userAlert: responseAlert, user: resData.data.addUserPoints, activityA: JSON.stringify(requestBody)})\n            this.context.user = this.state.user;\n            // this.logUserActivity();\n          })\n          .catch(err => {\n            this.setState({userAlert: err});\n          });\n      };\n  userAddAddress = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = event.target.formGridAddressType.value;\n    const addressNumber = event.target.formGridAddressNumber.value;\n    const addressStreet = event.target.formGridAddressStreet.value;\n    const addressTown = event.target.formGridAddressTown.value;\n    const addressCity = event.target.formGridAddressCity.value;\n    const addressCountry = event.target.formGridAddressCountry.value;\n    const addressPostalCode = event.target.formGridAddressPostalCode.value;\n\n    if (\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0\n    ) {\n      console.log('blank fields detected.. please check your info and try again..');\n      this.setState({userAlert: 'blank fields detected.. please check your info and try again..'})\n      return\n    }\n\n    const requestBody = {\n      query:`\n        mutation {addUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserAddress).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserAddress, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAddress = (args) => {\n    console.log('userDeleteAddress...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n            addressPrimary:${addressPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserAddress).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserAddress, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  makeAddressPrimary = (args) => {\n    console.log('makeAddressPrimary...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    // const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {setUserAddressPrimary(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.setUserAddressPrimary).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.setUserAddressPrimary, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddProfileImage = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = event.target.formGridFilename.value;\n    const profileImageType = event.target.formGridFiletype.value;\n    const profileImagePath = event.target.formGridFilepath.value;\n    const requestBody = {\n      query:`\n        mutation {addUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserProfileImage).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserProfileImage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteProfileImage = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = args.name;\n    const profileImageType = args.type;\n    const profileImagePath = args.path;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserProfileImage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserProfileImage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddSocialMedia = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = event.target.formGridPlatform.value;\n    const socialMediaHandle = event.target.formGridHandle.value;\n    const socialMediaLink = event.target.formGridLink.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserSocialMedia).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserSocialMedia, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteSocialMedia = (args) => {\n    console.log('userDeleteSocialMedia');\n    this.setState({ deleting: true, userAlert: \"deleting socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = args.platform;\n    const socialMediaHandle = args.handle;\n    const socialMediaLink = args.link\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserSocialMedia).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserSocialMedia, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPaymentInfo = (event) => {\n    console.log('userAddPaymentInfo');\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n\n    const paymentInfoDate = event.target.paymentInfoDate.value;\n    const paymentInfoType = event.target.formGridPaymentInfoType.value;\n    const paymentInfoDescription = event.target.formGridDescription.value;\n    const paymentInfoBody = event.target.formGridBody.value;\n    let paymentInfoPrimary = event.target.formGridPaymentInfoPrimaryCheckbox.checked;\n    const paymentInfoValid = true;\n\n    const requestBody = {\n      query:`\n        mutation {addUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary},\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserPaymentInfo).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserPaymentInfo, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeletePaymentInfo = (args) => {\n    console.log('userDeletePaymentInfo',JSON.stringify(args));\n    this.setState({ deleting: true, userAlert: \"deleting paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const paymentInfoDate = args.date;\n    const paymentInfoType = args.type;\n    const paymentInfoDescription = args.description;\n    const paymentInfoBody = args.body;\n    const paymentInfoValid = args.valid;\n    const paymentInfoPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserPaymentInfo).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPaymentInfo, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddInterests = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interests = event.target.formGridInterests.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserInterests(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interests:\"${interests}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const activityLog = 'mutation_addUserInterests_origin_'+activityId+'_target_'+userId+'_body_'+interests+'';\n        const responseAlert = JSON.stringify(resData.data.addUserInterests).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserInterests, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteInterest = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interest = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserInterest(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interest:\"${interest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserInterest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserInterest, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddTags = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding tags for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query:`\n      mutation {addUserTags(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tags:\"${tags}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserTags).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserTags, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteTag = (args) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"deleting tag for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tag = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteUserTag(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tag:\"${tag}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserTag).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.deleteUserTag, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPerk  = (event) => {\n        // this.setState({ adding: false, userAddField: null, userAlert: \"adding perk for user...\" });\n        // const token = this.context.token;\n        // const activityId = this.context.activityId;\n        // const perkId = this.context.selectedPerk._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPerk).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPerk, activityA: JSON.stringify(requestBody)})\n        //     this.context.user = this.state.user;\n        //     // this.logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      };\n  userDeletePerk = (args) => {\n    // this.setState({ deleting: true, userAlert: \"deleting perk for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.deleteUserPerk).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPerk, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAddPromo  = (event) => {\n        // this.setState({ adding: false, userAddField: null, userAlert: \"adding promo for user...\" });\n        // const token = this.context.token;\n        // const activityId = this.context.activityId;\n        // const promoId = this.context.selectedPromo._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPromo).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPromo, activityA: JSON.stringify(requestBody)})\n        //     this.context.user = this.state.user;\n        //     // this.logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      }\n  userDeletePromo = (args) => {\n    // this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.userDeletePromo).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.userDeletePromo, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAcceptFriendRequest = (args) => {\n    console.log('userAcceptFriendRequest...');\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = args.receiver._id;\n    const friendId = args.sender._id;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    // let requestingFriend = event;\n    // let requestingFriend = null;\n    // if (args.sender._id === this.context.activityId) {\n    //   requestingFriend = args.receiver;\n    // }\n    // if (args.receiver._id === this.context.activityId) {\n    //   requestingFriend = args.sender;\n    // }\n    // return\n    // this.setState({requestingFriend: requestingFriend});\n  };\n  userRejectFriendRequest = (args) => {\n    console.log('userRejectFriendRequest...');\n    this.setState({ deleting: true, userAlert: \"deleting friend request for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const senderId = args.sender._id;\n    const receiverId = args.receiver._id;\n    // const date = args.date;\n\n    const requestBody = {\n      query:`\n      mutation {deleteFriendRequest(\n        activityId:\"${activityId}\",\n        senderId:\"${senderId}\",\n        receiverId:\"${receiverId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteFriendRequest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteFriendRequest, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddFriend = (event) => {\n    console.log(\"...adding friend for user...\");\n    this.setState({ adding: false, userAddField: null, userAlert: \"...adding friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.requestingFriend;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userSelectFriend = (args) => {\n    this.setState({userSelectedFriend: args});\n    this.context.receiver = args;\n  };\n  userDeleteFriend = (args) => {\n    console.log(\"...deleting friend for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.userSelectedFriend._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserFriend(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          friendId:\"${friendId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteCartItem = (args) => {\n    console.log(\"...deleting cart item for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting cart item for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const lessonId = args.lesson._id;\n    const dateAdded = args.dateAdded;\n    const sessionDate = args.sessionDate;\n    const sessionTitle = args.sessionTitle;\n    // console.log(sessionDate,lessonId,sessionTitle);\n    const requestBody = {\n      query:`\n        mutation {deleteUserCartLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          dateAdded:\"${dateAdded}\",\n          sessionDate:\"${sessionDate}\",\n          sessionTitle:\"${sessionTitle}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserCartLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserCartLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteBookedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting booked kesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const date = args.date;\n    const lessonId = args.ref;\n    const requestBody = {\n      query:`\n        mutation {deleteUserBookedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          date:\"${date}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('resData',resData);\n        const responseAlert = JSON.stringify(resData.data.deleteUserBookedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserBookedLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteLikedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting likeLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = args._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserLikedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserLikedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserLikedLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAttendedLesson = (args) => {\n    console.log(\"...deleting attendedLesson for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting attendedLesson for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n  };\n  userDeleteTaughtLesson = (args) => {\n    console.log(\"...deleting taughtLesson for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting taughtLesson for user...\" });\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n  };\n  addAddressToOrder = (event) => {\n    console.log('...add address to order...');\n    event.preventDefault();\n    // const address = JSON.stringify(event);\n    console.log(event.target.value.slice(9,16));\n    let type = event.target.value.slice(9,16);\n    if (type === 'Billing') {\n      this.setState({orderBillingAddress: event.target.value})\n    }\n    if (type === 'Shipping') {\n      this.setState({orderShippingAddress: event.target.value})\n    }\n  };\n  orderStripePayment = () => {\n    const userCartLessonSkus = this.state.user.cart.map(x => x.lesson.sku)\n    console.log(userCartLessonSkus);\n    // on failure returnor throw error\n  }\n  addMultipleBookings = () => {\n    console.log(\"...adding multiple bookings...\");\n    this.setState({ userAlert: \"...adding multiple bookings...\", isLoading: true });\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        mutation {addMultipleBookings(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n          // console.log(resData);\n          if (resData.errors) {\n            this.setState({userAlert: resData.errors[0].message, isLoading: false})\n          }\n          if (resData.data.addMultipleBookings !== null) {\n            this.setState({user: resData.data.addMultipleBookings, isLoading: false})\n          }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n\n  };\n  createOrder = (event) => {\n    event.preventDefault();\n    console.log(\"creating order for user...\");\n    this.setState({ creatingOrder: false, userAlert: \"creating order for user...\" });\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    // let userId = activityId;\n    const buyerId = activityId;\n    const receiverId = activityId;\n\n    const type = event.target.formGridType.value;\n    const totalA = event.target.formGridTotalA.value;\n    const totalB = event.target.formGridTotalB.value;\n    // const totalC = event.target.formGridTotalC.value;\n    const taxDescription = event.target.formGridTaxDescription.value;\n    const taxAmount = event.target.formGridTaxAmount.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const payment = event.target.formGridPayment.value;\n    const shipping = event.target.formGridShipping.value;\n    const billingAddressNumber = event.target.formGridBillingAddressNumber.value;\n    const billingAddressStreet = event.target.formGridBillingAddressStreet.value;\n    const billingAddressTown = event.target.formGridBillingAddressTown.value;\n    const billingAddressCity = event.target.formGridBillingAddressCity.value;\n    const billingAddressCountry = event.target.formGridBillingAddressCountry.value;\n    const billingAddressPostalCode = event.target.formGridBillingAddressPostalCode.value;\n    const shippingAddressNumber = event.target.formGridShippingAddressNumber.value;\n    const shippingAddressStreet = event.target.formGridShippingAddressStreet.value;\n    const shippingAddressTown = event.target.formGridShippingAddressTown.value;\n    const shippingAddressCity = event.target.formGridShippingAddressCity.value;\n    const shippingAddressCountry = event.target.formGridShippingAddressCountry.value;\n    const shippingAddressPostalCode = event.target.formGridShippingAddressPostalCode.value;\n\n    const requestBody = {\n      query:`\n        mutation {createOrder(\n          activityId:\"${activityId}\",\n          buyerId:\"${buyerId}\",\n          receiverId:\"${receiverId}\",\n          orderInput:{\n            type:\"${type}\",\n            totalA:${totalA},\n            totalB:${totalB},\n            taxDescription:\"${taxDescription}\",\n            taxAmount:${taxAmount},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            payment:\"${payment}\",\n            shipping:\"${shipping}\",\n            billingAddressNumber:${billingAddressNumber},\n            billingAddressStreet:\"${billingAddressStreet}\",\n            billingAddressTown:\"${billingAddressTown}\",\n            billingAddressCity:\"${billingAddressCity}\",\n            billingAddressCountry:\"${billingAddressCountry}\",\n            billingAddressPostalCode:\"${billingAddressPostalCode}\",\n            shippingAddressNumber:${shippingAddressNumber},\n            shippingAddressStreet:\"${shippingAddressStreet}\",\n            shippingAddressTown:\"${shippingAddressTown}\",\n            shippingAddressCity:\"${shippingAddressCity}\",\n            shippingAddressCountry:\"${shippingAddressCountry}\",\n            shippingAddressPostalCode:\"${shippingAddressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        // const responseAlert = JSON.stringify(resData.data.createOrder).slice(2,25);\n        // this.setState({userAlert: responseAlert, user: resData.data.createOrder, activityA: JSON.stringify(requestBody)})\n        // this.context.user = this.state.user;\n        // this.logUserActivity();\n        this.addMultipleBookings();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteOrder = (args) => {\n    console.log(\"...deleting order for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting order for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const orderId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserOrder(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          orderId:\"${orderId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserOrder).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserOrder, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteReview = (args) => {\n    console.log(\"...deleting promo for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const reviewId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          reviewId:\"${reviewId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserReview).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserReview, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userCreateMessage = (event) => {\n    event.preventDefault();\n    console.log('...user create message ...');\n    this.setState({ adding: false });\n    const token = this.context.token;\n    // const receiver = this.context.receiver;\n    const receiverId = this.context.receiver._id;\n    // const receiverRole = this.context.receiver.role;\n    // const role = this.context.role;\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const senderName = this.state.user.username;\n    const date = new Date();\n    // const timeString1 = date.toLocaleDateString().slice(11,16);\n    const timeString2 = date.toLocaleDateString().slice(11,16);\n    const type = event.target.formGridTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n    const msgObject = {\n      date: date,\n      time: timeString2,\n      type: type,\n      senderName: senderName,\n      subject: subject,\n      message: message,\n    };\n\n    const requestBody = {\n      query:`\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n        {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    this.sendSocketMessage(msgObject);\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(\"createMessage\",resData.data.createMessage);\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(2,25);;\n        this.setState({ userAlert: responseAlert, activityA: JSON.stringify(requestBody), userAddField: null});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteMessage = (args) => {\n    console.log(\"...deleting message for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting message for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const messageId = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteMessage(\n        activityId:\"${activityId}\",\n        messageId:\"${messageId}\",)\n      {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteMessage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteMessage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  onStartReply = (args) => {\n    this.setState({messageReplying: true, replyTo: args});\n  };\n  onCancelReply = () => {\n    this.setState({messageReplying: false, replyTo: null});\n  };\n  onReply = (event) => {\n    event.preventDefault();\n    console.log('...replying to message...', this.state.replyTo,event.target);\n    this.setState({userAlert: '...replying to message...', messageReplying: false})\n\n    const token = this.context.token;\n    // const receiver = this.state.replyTo.sender;\n    const receiverId = this.state.replyTo.sender._id;\n    // const role = this.context.role;\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const senderName = this.state.user.username;\n    const date = new Date();\n    // const timeString1 = date.toLocaleDateString().slice(11,16);\n    const timeString2 = date.toLocaleDateString().slice(11,16);\n    const type = event.target.formGridTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n    const msgObject = {\n      date: date,\n      time: timeString2,\n      type: type,\n      senderName: senderName,\n      subject: subject,\n      message: message,\n    };\n\n    const requestBody = {\n      query:`\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n        {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    this.sendSocketMessage(msgObject);\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"reply Message\",resData.data.createMessage);\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(2,25);;\n        this.setState({ userAlert: responseAlert, activityA: JSON.stringify(requestBody), replyTo: null});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userDeleteActivity = (args) => {\n    console.log(\"...deleting activity for user...\");\n    this.setState({ deleting: true, userAlert: \"...deleting activity for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const activityDate = args.date;\n    const activityRequest = args.request;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserActivity(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${activityRequest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserActivity).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  modalCancelHandler = () => {\n    this.setState({ updating: false, updatingField: false, adding: false, userAddField: null  });\n  };\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  };\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  };\n  viewLessonDetails = (args) => {\n    console.log('...retriving lesson details...');\n    this.setState({useAlert: 'retriving lesson details', isLoading: true})\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let lessonId = null;\n    if (args.lesson._id) {\n      lessonId = args.lesson._id;\n    }\n    if (args.lesson.ref) {\n      lessonId = args.lesson.ref._id;\n    }\n\n    const requestBody = {\n      query:`\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},sessions{title,date,time,limit,amount,booked{_id,username,bio,profileImages{name,type,path},socialMedia{platform,handle,link}},bookedAmount,attended{_id,username,bio,profileImages{name,type,path},socialMedia{platform,handle,link}},attendedAmount,inProgress,full,url},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonById).slice(2,25);\n        this.setState({userAlert: responseAlert, isLoading: false, profileLessonViewer: true, profileLessonViewerData: resData.data.getLessonById, profileLessonType: args.type})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  closeProfileLessonView = () => {\n    this.setState({profileLessonViewer: false, profileLessonViewerData: null})\n  };\n\n  toggleSessions = () => {\n    if (this.state.showSessionState === false) {\n      this.setState({showSessionState: true})\n    } else {\n      this.setState({showSessionState: false})\n    }\n  }\n  toggleInstructors = () => {\n    if (this.state.showInstructorsState === false) {\n      this.setState({showInstructorsState: true})\n    } else {\n      this.setState({showInstructorsState: false})\n    }\n  }\n  toggleSchedule = () => {\n    if (this.state.showScheduleState === false) {\n      this.setState({showScheduleState: true})\n    } else {\n      this.setState({showScheduleState: false})\n    }\n  }\n  toggleRequirements = () => {\n    if (this.state.showRequirementsState === false) {\n      this.setState({showRequirementsState: true})\n    } else {\n      this.setState({showRequirementsState: false})\n    }\n  }\n  toggleMaterials = () => {\n    if (this.state.showMaterialsState === false) {\n      this.setState({showMaterialsState: true})\n    } else {\n      this.setState({showMaterialsState: false})\n    }\n  }\n  toggleReviews = () => {\n    if (this.state.showReviewsState === false) {\n      this.setState({showReviewsState: true})\n    } else {\n      this.setState({showReviewsState: false})\n    }\n  }\n  toggleTags = () => {\n    if (this.state.showTagsState === false) {\n      this.setState({showTagsState: true})\n    } else {\n      this.setState({showTagsState: false})\n    }\n  }\n  toggleImages = () => {\n    if (this.state.showImagesState === false) {\n      this.setState({showImagesState: true})\n    } else {\n      this.setState({showImagesState: false})\n    }\n  }\n  toggleFiles = () => {\n    if (this.state.showFilesState === false) {\n      this.setState({showFilesState: true})\n    } else {\n      this.setState({showFilesState: false})\n    }\n  }\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    // const userId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toLocaleDateString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonBooking, isLoading: false});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  };\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  };\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    console.log('...editing lesson basic...');\n    this.setState({editingLesson: false, userAlert: '...editing lesson basic...'})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ profileLessonViewerData: resData.data.updateLessonBasic, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  onStartEditLessonField = () => {\n    this.setState({editingLessonField: true})\n  };\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  };\n  editLessonField = (event) => {\n    event.preventDefault();\n    console.log('...editing lesson field...');\n    this.setState({editingLessonField: false, userAlert: '...editing lesson field...'})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ profileLessonViewer: resData.data.updateLessonByField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  startEditSessionField = (args) => {\n    this.setState({editingSessionField: true, session: args})\n  };\n  cancelEditSessionField = () => {\n    this.setState({editingSessionField: false})\n  };\n  editSessionField = (event) => {\n    event.preventDefault();\n    console.log(event, '...updating session by field...');\n    this.setState({editingSessionField: false, userAlert: '...updating session by field...'})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    // const lessonId = this.state.session.lessonId;\n    let lessonId = null;\n    if (this.state.sessionDetailViewer === true ) {\n      lessonId = this.state.session.lessonId;\n    } else {\n      lessonId = this.state.profileLessonViewerData._id;\n    }\n    const token = this.context.token;\n\n    const sessionTitle = this.state.session.title;\n    const sessionDate = this.state.session.date;\n\n    const sessionField = event.target.formGridFieldSelect.value;\n    const sessionQuery = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n        mutation {updateSessionField(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\",\n            sessionField:\"${sessionField}\",\n            sessionQuery:\"${sessionQuery}\"\n          })\n         {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n          `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const lesson = resData.data.updateSessionField;\n        const sessions = resData.data.updateSessionField.sessions;\n        const session = sessions.filter(x => x.title === sessionTitle)\n        const session2 = session[0];\n        console.log(session);\n        const newSession = {\n            title: session2.title,\n            date: session2.date,\n            time: session2.time,\n            limit: session2.limit,\n            amount: session2.amount,\n            bookedAmount: session2.bookedAmount,\n            booked: session2.booked,\n            attended: session2.attended,\n            attendedAmount: session2.attendedAmount,\n            inProgress: session2.inProgress,\n            full: session2.full,\n            url: session2.url,\n            lessonId: lesson._id,\n            lessonTitle: lesson.title,\n            lessonInstructors: lesson.instructors,\n          };\n        const responseAlert = JSON.stringify(resData.data.updateSessionField).slice(0,8);\n        this.setState({ sessionDetailViewer: true, session: newSession, profileLessonViewerData: resData.data.updateSessionField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n\n  };\n\n  showSessionBooked = () => {\n    this.setState({sessionBookedState: true})\n  };\n  showSessionAttended = () => {\n    console.log(\"...attended session attendance...\");\n    this.setState({sessionAttendedState: true})\n  };\n  hideSessionBooked = () => {\n    this.setState({sessionBookedState: false})\n  };\n  hideSessionAttended = () => {\n    this.setState({sessionAttendedState: false})\n  };\n  addSessionAttendance = (attendance) => {\n    console.log('...adding session attendance...');\n    this.setState({userAlert: '...adding session attendance...'})\n    const activityId = this.context.activityId;\n    const userId = attendance.user._id;\n    let lessonId = null;\n    if (this.state.sessionDetailViewer === true ) {\n      lessonId = this.state.session.lessonId;\n    } else {\n      lessonId = this.state.profileLessonViewerData._id;\n    }\n\n    const sessionDate = attendance.sessionDate;\n    const sessionTitle = attendance.sessionTitle;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonAttendance(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            userId:\"${userId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\"\n            })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonAttendance});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  loadMeetings = () => {\n    console.log('...retriving todays sessions...');\n    this.setState({userAlert: '...retriving todays sessions...'})\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getUserBookedSessionsToday(\n            activityId:\"${activityId}\"\n          )\n          {title,date,time,limit,amount,bookedAmount,attendedAmount,inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.getUserBookedSessionsToday);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, meetingSessions: resData.data.getUserBookedSessionsToday, meetingsLoaded: true});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  hideMeetings = () => {\n    this.setState({ meetingsLoaded: false, meetingSessions: []})\n  };\n  viewSessionDetails = (session) => {\n    console.log('...rerieving session details...');\n    this.setState({userAlert: '...retriving todays sessions...'})\n    const activityId = this.context.activityId;\n    const lessonId = session.lessonId;\n    const sessionTitle = session.title;\n    const sessionDate = session.date;\n\n      const requestBody = {\n        query: `\n          query {getLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\"\n            })\n            {title,date,time,limit,amount,bookedAmount,booked{_id,username},attendedAmount,attended{_id,username},inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n        `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.getLessonSession);\n        const newSession = {\n          title: resData.data.getLessonSession.title,\n          date: resData.data.getLessonSession.date,\n          time: resData.data.getLessonSession.time,\n          limit: resData.data.getLessonSession.limit,\n          amount: resData.data.getLessonSession.amount,\n          bookedAmount: resData.data.getLessonSession.bookedAmount,\n          booked: resData.data.getLessonSession.booked,\n          attended: resData.data.getLessonSession.attended,\n          attendedAmount: resData.data.getLessonSession.attendedAmount,\n          inProgress: resData.data.getLessonSession.inProgress,\n          full: resData.data.getLessonSession.full,\n          url: resData.data.getLessonSession.url,\n          lessonId: session.lessonId,\n          lessonTitle: session.lessonTitle,\n          lessonInstructors: session.lessonInstructors,\n        };\n        // console.log('beep',newSession);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, session: newSession, sessionDetailViewer: true});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  hideSessionDetails = () => {\n    this.setState({session: null, sessionDetailViewer: false})\n  };\n\n  startCreateReview = (args) => {\n    console.log('startCreateReview', args);\n    this.setState({creatingReview: true, reviewLesson: args.ref})\n  }\n  cancelCreateReview = () => {\n    this.setState({creatingReview: false, reviewLesson: null})\n  }\n  createReview = (event) => {\n    event.preventDefault();\n    console.log('...createing review...');\n    this.setState({userAlert: '...createing review...', creatingReview: false})\n    const lessonId = this.state.reviewLesson._id;\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const type = event.target.formGridTypeSelect.value;\n    const title = event.target.formGridTitle.value;\n    const body = event.target.formGridBody.value;\n    const rating = event.target.formGridRating.value;\n    //\n    const requestBody = {\n      query: `\n        mutation {createReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          reviewInput:{\n            type:\"${type}\",\n            title:\"${title}\",\n            body:\"${body}\",\n            rating:${rating}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.createReview);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, user: resData.data.createReview, reviewLesson: null});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startLessonAdd = (args) => {\n    // console.log(args);\n    this.setState({lessonAddField: args})\n  }\n  cancelLessonAdd = (args) => {\n    this.setState({lessonAddField: null})\n  }\n\n  addLessonMaterials = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson materials...');\n    this.setState({userAlert: '...adding lesson materials...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const materials = event.target.formGridMaterials.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonMaterials(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              materials: \"${materials}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonMaterials});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonTags = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson tags...');\n    this.setState({userAlert: '...adding lesson tags...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonTags(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tags:\"${tags}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonTags});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonRequirements = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson requirements ...');\n    this.setState({userAlert: '...adding lesson requirements ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const requirements = event.target.formGridRequirements.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonRequirements(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirements: \"${requirements}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonRequirements});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonImage = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Image ...');\n    this.setState({userAlert: '...adding lesson Images ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const imageName = event.target.formGridImagename.value;\n    const imageType = event.target.formGridImagetype.value;\n    const imagePath = event.target.formGridImagepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName:\"${imageName}\",\n              imageType:\"${imageType}\",\n              imagePath:\"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log('resData.data.addLessonImage',resData.data.addLessonImage);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonImage, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n        // this.getThisUser();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonFile = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Files ...');\n    this.setState({userAlert: '...adding lesson Files ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const fileName = event.target.formGridFilename.value;\n    const fileType = event.target.formGridFilesize.value;\n    const fileSize = event.target.formGridFiletype.value;\n    const filePath = event.target.formGridFilepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\"\n              fileType: \"${fileType}\"\n              fileSize: \"${fileSize}\"\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonFile});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonInstructor = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson instructor ...');\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const instructorId = this.context.selectedUser._id;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\"\n            instructorId: \"${instructorId}\")\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonInstructor});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n  deleteLessonTag = (args) => {\n    console.log('...deleting lesson tag...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const tag = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonTag(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tag:\"${tag}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.deleteLessonTag);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonTag, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonRequirement = (args) => {\n    console.log('...deleting lesson requirement...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const requirement = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonRequirement(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirement:\"${requirement}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonRequirement, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonMaterial = (args) => {\n    console.log('...deleting lesson material...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const material = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonMaterial(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              material:\"${material}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonMaterial, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonImage = (args) => {\n    console.log('...deleting lesson image...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const imageName = args.name;\n    const imageType = args.type;\n    const imagePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\",\n              imageType: \"${imageType}\",\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonImage, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonFile = (args) => {\n    console.log('...deleting lesson file...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const fileName = args.name;\n    const fileType = args.type;\n    const fileSize = args.size;\n    const filePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\",\n              fileType: \"${fileType}\",\n              fileSize: \"${fileSize}\",\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonFile, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonInstructor = (args) => {\n    console.log('...deleting lesson instructor...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const instructorId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            instructorId: \"${instructorId}\"\n          )\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonInstructor, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  cancelSessionBooking = (args) => {\n    console.log('...cancelling session...',args);\n\n    this.setState({userAlert: '...cancelling lesson booking ...' });\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const sessionTitle = args.session.title;\n    const sessionDate = args.session.date;\n    const cancellationReason = 'none';\n\n    const requestBody = {\n      query: `\n        mutation {deleteLessonBooking(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          userId:\"${userId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\",\n            cancellationReason:\"${cancellationReason}\"\n          })\n          {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id},reviews{date,type,title,body,author{_id,username},body,rating},cancellations{date,reason,sessionDate,sessionTitle,user{_id,username}}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonBooking, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n\n  clearAddressFilters = () => {\n    this.setState({filter: {\n      field: null,\n      key: null,\n      value: null\n    },\n      userAlert: '..filters cleared..'\n  })\n}\n  setFilter = (args) => {\n    // console.log('...set filter...',{...args});\n    this.setState({filter: {\n      field: args.field,\n      key: args.key,\n      value: args.value\n    }});\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AlertBox\n          authId={this.context.activityId}\n          alert={this.state.userAlert}\n        />\n\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n\n        <SidebarControl\n          onShowSidebar={this.showSidebar}\n          onHideSidebar={this.hideSidebar}\n        />\n\n        <Row>\n        {this.state.sidebarShow === true &&\n          this.state.user !== null && (\n          <Col md={2} className=\"MasterCol1\">\n          <SidebarPage\n            you={this.state.user}\n            authId={this.context.activityId}\n          />\n          </Col>\n        )}\n\n        {this.state.profileLessonViewer === true &&\n          this.state.profileLessonViewerData !== null && (\n          <ProfileLessonViewer\n            authId={this.context.activityId}\n            lessonType={this.state.profileLessonType}\n            profileLesson={this.state.profileLessonViewerData}\n            closeProfileLessonView={this.closeProfileLessonView}\n\n            toggleSessions={this.toggleSessions}\n            showSessionState={this.state.showSessionState}\n\n            showScheduleState={this.state.showScheduleState}\n            toggleSchedule={this.toggleSchedule}\n\n            toggleInstructors={this.toggleInstructors}\n            showInstructorsState={this.state.showInstructorsState}\n            toggleRequirements={this.toggleRequirements}\n            showRequirementsState={this.state.showRequirementsState}\n            toggleMaterials={this.toggleMaterials}\n            showMaterialsState={this.state.showMaterialsState}\n            toggleReviews={this.toggleReviews}\n            showReviewsState={this.state.showReviewsState}\n\n            toggleTags={this.toggleTags}\n            showTagsState={this.state.showTagsState}\n            toggleImages={this.toggleImages}\n            showImagesState={this.state.showImagesState}\n            toggleFiles={this.toggleFiles}\n            showFilesState={this.state.showFilesState}\n\n            startCreateSession={this.startCreateSession}\n            creatingSession={this.state.creatingSession}\n            cancelCreateSession={this.cancelCreateSession}\n            createLessonSession={this.createLessonSession}\n\n            startEditSessionField={this.startEditSessionField}\n            editingSessionField={this.state.editingSessionField}\n            editSessionField={this.editSessionField}\n            cancelEditSessionField={this.cancelEditSessionField}\n            session={this.state.session}\n\n            showSessionBooked={this.showSessionBooked}\n            showSessionAttended={this.showSessionAttended}\n            hideSessionBooked={this.hideSessionBooked}\n            hideSessionAttended={this.hideSessionAttended}\n            sessionBookedState={this.state.sessionBookedState}\n            sessionAttendedState={this.state.sessionAttendedState}\n            addSessionAttendance={this.addSessionAttendance}\n            cancelSessionBooking={this.cancelSessionBooking}\n\n            editingLesson={this.state.editingLesson}\n            onStartEditLessonBasic={this.onStartEditLessonBasic}\n            editLessonBasic={this.editLessonBasic}\n            cancelEditBasic={this.cancelEditBasic}\n\n            editingLessonField={this.state.editingLessonField}\n            onStartEditLessonField={this.onStartEditLessonField}\n            editLessonField={this.editLessonField}\n            cancelEditField={this.cancelEditField}\n\n            startLessonAdd={this.startLessonAdd}\n            cancelLessonAdd={this.cancelLessonAdd}\n            lessonAddField={this.state.lessonAddField}\n            addLessonMaterials={this.addLessonMaterials}\n            addLessonRequirements={this.addLessonRequirements}\n            addLessonTags={this.addLessonTags}\n            addLessonInstructor={this.addLessonInstructor}\n            addLessonImage={this.addLessonImage}\n            addLessonFile={this.addLessonFile}\n            selectedInstructor={this.context.selectedUser}\n\n            deleteLessonTag={this.deleteLessonTag}\n            deleteLessonRequirement={this.deleteLessonRequirement}\n            deleteLessonMaterial={this.deleteLessonMaterial}\n            deleteLessonImage={this.deleteLessonImage}\n            deleteLessonFile={this.deleteLessonFile}\n            deleteLessonInstructor={this.deleteLessonInstructor}\n          />\n        )}\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n          <div className=\"containerProfile\">\n          {this.state.isLoading ? (\n            <Spinner />\n          ) : (\n            <Row>\n              <Col>\n              {this.state.user !== null && (\n                  <ThisUserProfile\n                    user={this.userCopy}\n                    authId={this.context.activityId}\n                    onCancel={this.modalCancelHandler}\n                    canDelete={this.state.canDelete}\n\n                    onStartUpdate={this.onStartUpdate}\n                    onStartUpdateField={this.onStartUpdateField}\n                    onStartAdd={this.onStartAdd}\n\n                    userEditBasic={this.userEditBasic}\n                    userEditField={this.userEditField}\n                    userAddPoints={this.userAddPoints}\n                    userAddAddress={this.userAddAddress}\n                    makeAddressPrimary={this.makeAddressPrimary}\n                    userDeleteAddress={this.userDeleteAddress}\n                    userAddProfileImage={this.userAddProfileImage}\n                    userDeleteProfileImage={this.userDeleteProfileImage}\n\n                    userAddSocialMedia={this.userAddSocialMedia}\n                    userDeleteSocialMedia={this.userDeleteSocialMedia}\n\n                    userAddPaymentInfo={this.userAddPaymentInfo}\n                    userDeletePaymentInfo={this.userDeletePaymentInfo}\n\n                    selectedPerk={this.context.selectedPerk}\n                    userAddPerk={this.userAddPerk}\n                    userDeletePerk={this.userDeletePerk}\n\n                    selectedPromo={this.context.selectedPromo}\n                    userAddPromo={this.userAddPromo}\n                    userDeletePromo={this.userDeletePromo}\n\n                    userAddInterests={this.userAddInterests}\n                    userDeleteInterest={this.userDeleteInterest}\n\n                    userAddTags={this.userAddTags}\n                    userDeleteTag={this.userDeleteTag}\n\n                    userRejectFriendRequest={this.userRejectFriendRequest}\n                    userAcceptFriendRequest={this.userAcceptFriendRequest}\n                    userDeleteFriend={this.userDeleteFriend}\n                    userSelectFriend={this.userSelectFriend}\n                    userAddFriend={this.userAddFriend}\n\n                    userDeleteCartItem={this.userDeleteCartItem}\n                    userDeleteLikedLesson={this.userDeleteLikedLesson}\n                    userDeleteBookedLesson={this.userDeleteBookedLesson}\n                    userDeleteAttendedLesson={this.userDeleteAttendedLesson}\n                    userDeleteTaughtLesson={this.userDeleteTaughtLesson}\n\n                    addAddressToOrder={this.addAddressToOrder}\n                    orderBillingAddress={this.state.orderBillingAddress}\n                    orderShippingAddress={this.state.orderShippingAddress}\n                    startCartCheckout={this.startCartCheckout}\n                    cancelCartCheckout={this.cancelCartCheckout}\n                    createOrder={this.createOrder}\n                    userDeleteOrder={this.userDeleteOrder}\n                    userDeleteReview={this.userDeleteReview}\n                    userDeleteActivity={this.userDeleteActivity}\n\n                    userCreateMessage={this.userCreateMessage}\n                    userDeleteMessage={this.userDeleteMessage}\n\n                    updating={this.state.updating}\n                    updatingField={this.state.updatingField}\n                    userAddField={this.state.userAddField}\n                    creatingOrder={this.state.creatingOrder}\n\n                    selectedUser={this.context.selectedUser}\n                    messageReceiver={this.context.receiver}\n                    requestingFriend={this.state.requestingFriend}\n                    onStartCreateMessage={this.startCreateMessage}\n\n                    viewLessonDetails={this.viewLessonDetails}\n\n                    loadMeetings={this.loadMeetings}\n                    hideMeetings={this.hideMeetings}\n                    meetingsLoaded={this.state.meetingsLoaded}\n                    meetingSessions={this.state.meetingSessions}\n                    viewSessionDetails={this.viewSessionDetails}\n                    hideSessionDetails={this.hideSessionDetails}\n                    sessionDetailViewer={this.state.sessionDetailViewer}\n\n                    startEditSessionField={this.startEditSessionField}\n                    editingSessionField={this.state.editingSessionField}\n                    editSessionField={this.editSessionField}\n                    cancelEditSessionField={this.cancelEditSessionField}\n                    session={this.state.session}\n\n                    showSessionBooked={this.showSessionBooked}\n                    showSessionAttended={this.showSessionAttended}\n                    hideSessionBooked={this.hideSessionBooked}\n                    hideSessionAttended={this.hideSessionAttended}\n                    sessionBookedState={this.state.sessionBookedState}\n                    sessionAttendedState={this.state.sessionAttendedState}\n                    addSessionAttendance={this.addSessionAttendance}\n\n                    startCreateReview={this.startCreateReview}\n                    cancelCreateReview={this.cancelCreateReview}\n                    creatingReview={this.state.creatingReview}\n                    reviewLesson={this.state.reviewLesson}\n                    createReview={this.createReview}\n\n                    messageReplying={this.state.messageReplying}\n                    onStartReply={this.onStartReply}\n                    onCancelReply={this.onCancelReply}\n                    onReply={this.onReply}\n                    replyTo={this.state.replyTo}\n\n                    filter={this.state.filter}\n                    setFilter={this.setFilter}\n                  />\n                )}\n\n              </Col>\n            </Row>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport './UserItem.css';\n\nexport default function userItem (props) {\n  return (\n    <Router>\n    <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n      <Card style={{ width: '18rem' }}>\n\n      <Card.Body>\n        <Card.Text>\n          ID: {props._id}\n        </Card.Text>\n        <Card.Text>\n          username: {props.username}\n        </Card.Text>\n        <Card.Text>\n          role: {props.role}\n        </Card.Text>\n        <Link to={'users/'+props.user.username+''}>\n          <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n            Details\n          </Button>\n        </Link>\n\n          <Button variant=\"secondary\" onClick={props.onSelectNoDetail.bind(this, props.user)}>\n          Select\n        </Button>\n\n\n      </Card.Body>\n      </Card>\n\n    </li>\n    <Switch>\n      <Route path=\"users/:id\" children={<Child />} />\n    </Switch>\n    </Router>\n  )\n};\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    id\n  );\n}\n","import React from 'react';\n\nimport UserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst userList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <UserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default userList;\n","import React from 'react';\n\nimport SearchUserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst searchUserList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <SearchUserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default searchUserList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./AttachmentViewer.css\"\n\nconst AttachmentViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <h5 className=\"attachmentViewerTitle\">AttachmentViewer</h5>\n    <Button variant=\"danger\" className=\"attachmentViewerCloseButton\" onClick={props.onCloseAttachmentView}>\n      close\n    </Button>\n\n    <a href={props.attachmentFile}>\n    <Button variant=\"success\">\n      View the Attachment\n    </Button>\n    </a>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default AttachmentViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst MessageUserListForm = (props) => {\nconst {...receiver} = props.receiver;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <p>Recipient: {receiver.username}</p>\n</Form.Row>\n\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicTypeSelect\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type j</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridSubject\">\n    <Form.Label>Subject </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Subject\"/>\n  </Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMessage\">\n    <Form.Label>Message </Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Message\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default MessageUserListForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport MessageUserListForm from '../Forms/user/MessageUserListForm';\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst UserDetail = (props) => {\n\n  const {...user} = props.user;\n  const profileImages = user.profileImages;\n  const isFriend = props.myFriends.filter(x => x === user._id).length > 0;\n  console.log(props.myFriends,isFriend);\n  console.log('user.clientConnected',user.clientConnected,'user.loggedIn',user.loggedIn);\n  // const interests = user.interests;\n\n  // let userDob = new Date(user.dob.substr(0,9) * 1000).toLocaleDateString().slice(0,10);\n\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Demographics\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Demographics\" title=\"Demographics\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">User Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {profileImages.length !== 0 && (\n            <Card.Img variant=\"top\" src={profileImages[0].path} />\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Role:</span> {user.role}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn:</span> {user.loggedIn.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">online:</span> {user.clientConnected.toString()}\n          </Card.Text>\n          </Col>\n\n          <Col className=\"detailCardCol\">\n\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n\n        {isFriend === false && (\n        <Button variant=\"secondary\" onClick={props.onFriendRequest.bind(this, props.user)}>\n          RequsetFriend\n        </Button>\n        )}\n        {isFriend === true && (\n        <Button variant=\"info\" onClick={props.onStartSendMessage.bind(this, props.user)}>\n          Message\n        </Button>\n        )}\n\n        <Button variant=\"danger\" onClick={props.onHideUserDetail}>\n          x\n        </Button>\n          <Col className=\"detailCardCol\">\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, user._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, user._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n\n      {props.creatingMessage === true &&\n        props.messageReceiver !== null && (\n        <MessageUserListForm\n          receiver={props.messageReceiver}\n          onCancel={props.cancelMessage}\n          onConfirm={props.sendMessage}\n        />\n      )}\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default UserDetail;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport UserDetail from './Users/UserDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst UserDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n\n    <UserDetail\n      authId={props.authId}\n      user={props.user}\n      canReport={props.canReport}\n      onReport={props.onReport}\n      canDelete={props.canDelete}\n      onDelete={props.onDelete}\n      onFriendRequest={props.onFriendRequest}\n      onStartSendMessage={props.onStartSendMessage}\n      onHideUserDetail={props.onHideUserDetail}\n      creatingMessage={props.creatingMessage}\n      messageReceiver={props.messageReceiver}\n      cancelMessage={props.cancelMessage}\n      sendMessage={props.sendMessage}\n      myFriends={props.myFriends}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default UserDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserFieldBasicForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n\n  <Form.Row>\n  {\n    <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n    <Form.Label>Basic Field</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>public</option>\n    <option>loggedIn</option>\n    <option>clientConnected</option>\n    <option>dob</option>\n    <option>age</option>\n    <option>points</option>\n    <option>friends</option>\n    <option>bookedLessons.ref</option>\n    <option>likedLessons.ref</option>\n    <option>attendedLessons.ref</option>\n    </Form.Control>\n    <Form.Text className=\"text-muted\">\n    </Form.Text>\n    </Form.Group>\n}\n\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Basic Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserFieldBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserFieldRegexForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n\n  <Form.Row>\n  {\n    <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n    <Form.Label>Regex Field</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>_id</option>\n    <option>username</option>\n    <option>role</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>contact.email</option>\n    <option>socialMedia.platform</option>\n    <option>socialMedia.handle</option>\n    <option>tags</option>\n    <option>interests</option>\n    <option>bookedLessons.session.title</option>\n    </Form.Control>\n    <Form.Text className=\"text-muted\">\n    </Form.Text>\n    </Form.Group>\n}\n\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserFieldRegexForm;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport UserList from '../../components/Users/UserList/UserList';\nimport SearchUserList from '../../components/Users/UserList/SearchUserList';\n// import UserDetail from '../../components/Users/UserDetail';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport UserDetailViewer from '../../components/UserDetailViewer';\n\nimport SearchUserFieldBasicForm from '../../components/Forms/user/SearchUserFieldBasicForm';\nimport SearchUserFieldRegexForm from '../../components/Forms/user/SearchUserFieldRegexForm';\n\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    isSorting: false,\n    selectedUser: null,\n    detailsLoaded: false,\n    creatingMessage: false,\n    messageReceiver: null,\n    userUpdateField: null,\n    userSearchField: null,\n    userSearchQuery: null,\n    canDelete: null,\n    canReport: false,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    activityA: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...users component mounted...');\n    if (this.context.user.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedUser) !== \"{}\") {\n      this.setState({ selectedUser: this.context.selectedUser })\n    }\n\n    this.fetchUsersBasic();\n  }\n\n\n\n  modalConfirmSearchBasicHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,role,username,public,clientConnected}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByField).slice(0,8);\n        const searchUsers = resData.data.getUsersByField;\n        this.setState({ searchUsers: searchUsers, userAlert: responseAlert, activityA: requestBody})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchRegexHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,role,username,public,clientConnected}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByFieldRegex).slice(0,8);\n        const searchUsers = resData.data.getUsersByFieldRegex;\n        if (searchUsers === [] ) {\n          this.setState({ userAlert: '... nothing found soz...', activityA: requestBody})\n        } else {\n          this.setState({ searchUsers: searchUsers, userAlert: responseAlert, activityA: requestBody})\n        }\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchUsersBasic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching User Master List...\" });\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getAllUsers(\n            activityId:\"${activityId}\"\n          )\n          {_id,role,username,public,clientConnected,loggedIn}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getAllUsers).slice(0,8);\n        this.setState({userAlert: responseAlert, users: resData.data.getAllUsers, isLoading: false, activityA: requestBody});\n        this.context.users = this.state.users;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteListUser = (userId) => {\n    console.log(\"delete listed user\", userId);\n  }\n\n  reportUser = (userId) => {\n    console.log(\"reporting user\", userId);\n  }\n\n  startSendMessage = (args) => {\n    console.log(\"opening message form...\");\n    this.setState({creatingMessage: true, messageReceiver: {_id: args._id, username: args.username}})\n  }\n  cancelMessage = () => {\n    this.setState({creatingMessage: false})\n  }\n  sendMessage = (event) => {\n    event.preventDefault();\n    console.log(this.state.messageReceiver,event.target);\n    this.setState({creatingMessage: false, userAlert: \"sending message...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = this.state.messageReceiver._id;\n    const type = event.target.formBasicTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n\n    const requestBody = {\n      query: `\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n          {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(JSON.stringify(resData.data.createMessage));\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = userId => {\n  this.setState({ isLoading: true, userAlert: \"Fetching User Details...\", showDetail: true });\n  const activityId = this.context.activityId;\n\n  const requestBody = {\n    query: `\n        query {getUserById(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\"\n        )\n        {_id,role,username,public,clientConnected,loggedIn,age,bio,socialMedia{platform,handle,link},profileImages{name,type,path},interests,tags}}\n      `};\n\n  fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        this.setState({userAlert: 'Failed!'});\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      const responseAlert = JSON.stringify(resData.data.getUserById).slice(0,8);\n      this.setState({userAlert: responseAlert, selectedUser: resData.data.getUserById, detailsLoaded:true, isLoading: false, activityA: requestBody});\n      this.context.selectedUser = this.state.selectedUser;\n      // this.logUserActivity();\n    })\n    .catch(err => {\n      this.setState({userAlert: err});\n      if (this.isActive) {\n        this.setState({ isLoading: false });\n      }\n    });\n};\n  selectUserNoDetail = (user) => {\n  this.setState({selectedUser: user});\n  this.context.selectedUser = user;\n}\n\nhideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n}\n\n\nonFriendRequest = (args) => {\n    console.log(\"sending friend request...\",args._id);\n    this.setState({ userAlert: \"sending friend request...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {sendFriendRequest(\n            activityId:\"${activityId}\",\n            senderId:\"${senderId}\",\n            receiverId:\"${receiverId}\"\n          )\n          {_id,role,username,public,clientConnected,friendRequests{date,sender{_id},receiver{_id}}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(JSON.stringify(resData.data.sendFriendRequest.friendRequests));\n        const responseAlert = JSON.stringify(resData.data.sendFriendRequest).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n\n  }\n\nonViewAttachment = (attachment) => {\n\n      this.setState({showAttachment: true})\n\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  }\n\ncloseAttachmentView = () => {\n\n      this.setState({showAttachment: false})\n  }\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    // const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price,requirementsg}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true &&\n        this.state.detailsLoaded === true && (\n        <UserDetailViewer\n          user={this.state.selectedUser}\n          onHideUserDetail={this.hideDetailHandler}\n          canDelete={this.state.canDelete}\n          onDelete={this.deleteListUser}\n          canReport={this.state.canReport}\n          onReport={this.reportUser}\n          onFriendRequest={this.onFriendRequest}\n          onStartSendMessage={this.startSendMessage}\n          creatingMessage={this.state.creatingMessage}\n          messageReceiver={this.state.messageReceiver}\n          cancelMessage={this.cancelMessage}\n          sendMessage={this.sendMessage}\n          myFriends={this.context.user.friends.map(x => x._id)}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <UserList\n                            canReport={this.state.canReport}\n                            onReport={this.reportUser}\n                             users={this.state.users}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectUserNoDetail}\n\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchUserFieldRegexForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchRegexHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                          <SearchUserFieldBasicForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchBasicHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.userSearchField}  ,   Query: {this.state.userSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchUsers !== [] && (\n                          <SearchUserList\n                          canReport={this.state.canReport}\n                          onReport={this.reportUser}\n                           users={this.state.searchUsers}\n                           authId={this.context.activityId}\n                           onViewDetail={this.showDetailHandler}\n                           onSelectNoDetail={this.selectUserNoDetail}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useParams\n// } from \"react-router-dom\";\n\nimport './UserItem.css';\n\nexport default function lesssonItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        subtitle: {props.subtitle}\n      </Card.Text>\n      <Card.Text>\n        category: {props.category}\n      </Card.Text>\n      <Card.Text>\n        leadInstructorId: {props.instructors[0]._id}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n        Details\n      </Button>\n\n      {props.onSelectNoDetail && (\n      <Button variant=\"primary\" onClick={props.onSelectNoDetail.bind(this, props.lesson)}>\n        Select\n      </Button>\n      )}\n      {props.canReport === true && (\n        <Button variant=\"danger\" onClick={props.onReport.bind(this, props._id)}>\n        Report\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport LessonItem from './LessonItem/LessonItem';\nimport './UserList.css';\n\nconst lessonList = props => {\n\n  const lessons = props.lessons.map(lesson => {\n    return (\n      <LessonItem\n        key={lesson._id}\n        lesson={lesson}\n        authId={props.authId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        puplic={props.public}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{lessons}</ul>;\n};\n\nexport default lessonList;\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport './UserItem.css';\n\nconst searchLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_master\">\n    <div>\n      <p className=\"userItemHeading\"> ID:</p>\n      <p className=\"userItemText\">\n        {props._id}\n      </p>\n      <p className=\"userItemHeading\"> Title:</p>\n      <p className=\"userItemText\">\n        {props.title}\n      </p>\n      <p className=\"userItemHeading\"> Category:</p>\n      <p className=\"userItemText\">\n        {props.category}\n      </p>\n    </div>\n    <div>\n    <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n          Details\n        </Button>\n        {props.onSelectNoDetail && (<Button variant=\"primary\" onClick={props.onSelectNoDetail.bind(this, props.lesson)}>\n          Select\n        </Button>)}\n    </div>\n  </li>\n);\n\nexport default searchLessonItem;\n","import React from 'react';\n// import Accordion from 'react-bootstrap/Accordion';\n// import Button from 'react-bootstrap/Button';\n\nimport SearchLessonItem from './LessonItem/SearchLessonItem';\nimport './UserList.css';\n\nconst searchLessonList = props => {\n\n  const searchLessons = props.lessons.map(lesson => {\n    return (\n      <React.Fragment>\n      <SearchLessonItem\n        key={lesson._id}\n        lesson={lesson}\n        userId={props.authUserId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onDetail={props.onViewDetail}\n        onSelectNoDetail={props.onSelectNoDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n      />\n      </React.Fragment>\n    );\n  });\n  return <ul className=\"user__list1_master\">{searchLessons}</ul>;\n};\n\nexport default searchLessonList;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function searchSession (props) {\n  console.log('boop', props.session);\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n    <p>here</p>\n    <Card.Body>\n      <Card.Title>{props.session.title}</Card.Title>\n      <Card.Text>\n        date: {props.session.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.session.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './LessonList/LessonSessionList';\nimport LessonScheduleList from './LessonList/LessonScheduleList';\nimport LessonInstructorList from './LessonList/LessonInstructorList';\nimport LessonRequirementList from './LessonList/LessonRequirementList';\nimport LessonMaterialList from './LessonList/LessonMaterialList';\nimport LessonTagList from './LessonList/LessonTagList';\nimport LessonImageList from './LessonList/LessonImageList';\nimport LessonFileList from './LessonList/LessonFileList';\nimport LessonReviewList from './LessonList/LessonReviewList';\nimport CreateLessonSessionForm from '../Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from '../Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from '../Forms/lesson/UpdateLessonFieldForm';\n\nimport AddLessonRequirementsForm from '../Forms/lesson/AddLessonRequirementsForm';\nimport AddLessonMaterialsForm from '../Forms/lesson/AddLessonMaterialsForm';\nimport AddLessonTagsForm from '../Forms/lesson/AddLessonTagsForm';\nimport AddLessonImageForm from '../Forms/lesson/AddLessonImageForm';\nimport AddLessonFileForm from '../Forms/lesson/AddLessonFileForm';\nimport AddLessonInstructorForm from '../Forms/lesson/AddLessonInstructorForm';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst LessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  const {...user} = props.user;\n\n  let userLikedLessons = [];\n  let hasLiked = false;\n  if (user.likedLessons !== []) {\n    userLikedLessons = user.likedLessons.map(x => x._id);\n    hasLiked = userLikedLessons.includes(lesson._id.toString());\n  }\n\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  let canDelete = false;\n  if (isInstructor === true ) {\n    canDelete = true\n  }\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {isInstructor === true &&(\n            <Card.Text>\n            Your lesson\n            </Card.Text>\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Sku:</span> {lesson.sku}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n          </Card.Text>\n\n          <Card.Text>\n          ID: {lesson.instructors[0]._id}\n          </Card.Text>\n          <Card.Text>\n          Username: {lesson.instructors[0].username}\n          </Card.Text>\n          <Card.Text>\n            Contact\n          </Card.Text>\n          <Card.Text>\n            Email: {lesson.instructors[0].contact.email}\n          </Card.Text>\n\n          </Col>\n\n        </Row>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Schedule\n          </Card.Text>\n          <Button variant=\"danger\" onClick={props.toggleSchedule}>\n            show/hide\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n\n            {hasLiked !== true && (\n            <Button variant=\"danger\" onClick={props.onLikeLesson.bind(this, lesson._id)}>\n              Like\n            </Button>\n            )}\n\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, lesson._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, lesson._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n          </Row>\n\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"sessions\" title=\"sessions\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n      <Row className=\"detailCardRow\">\n\n        <Col className=\"detailCardCol\">\n        <Card.Text>\n        Sessions:\n        </Card.Text>\n        <Button variant=\"primary\" onClick={props.onSessionLoad.bind(this, lesson._id)}>\n          See Sessions\n        </Button>\n        <Button variant=\"danger\" onClick={props.onHideSessions}>\n          x\n        </Button>\n        {props.sessionsLoaded === true && (\n          <LessonSessionList\n          isInstructor={isInstructor}\n          lessonSessions={lesson.sessions}\n          onBookSession={props.onBookSession}\n          onAddCartLesson={props.onAddCartLesson}\n          showSessionBooked={props.showSessionBooked}\n          showSessionAttended={props.showSessionAttended}\n          hideSessionBooked={props.hideSessionBooked}\n          hideSessionAttended={props.hideSessionAttended}\n          sessionBookedState={props.sessionBookedState}\n          sessionAttendedState={props.sessionAttendedState}\n        />\n      )}\n\n          {isInstructor === true && (\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          )}\n          {props.creatingSession === true &&\n            isInstructor === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"materials/requirements\" title=\"materials/requirements\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Requirements\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleRequirements}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'requirements')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'requirements' && (\n              <AddLessonRequirementsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonRequirements}\n              />\n            )}\n            {props.showRequirementsState === true && (\n              <LessonRequirementList\n                lessonRequirements={lesson.requirements}\n                canDelete\n                onDelete={props.deleteLessonRequirement}\n              />\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Materials\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleMaterials}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'materials')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'materials' && (\n              <AddLessonMaterialsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonMaterials}\n              />\n            )}\n            {props.showMaterialsState === true && (\n              <LessonMaterialList\n                lessonMaterials={lesson.materials}\n                canDelete\n                onDelete={props.deleteLessonMaterial}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n\n      <Tab eventKey=\"images\" title=\"images\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Images\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleImages}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'images')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'images' && (\n              <AddLessonImageForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonImage}\n              />\n            )}\n            {props.showImagesState === true && (\n              <LessonImageList\n                lessonImages={lesson.gallery}\n                canDelete\n                onDelete={props.deleteLessonImage}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"files\" title=\"files\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Files\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleFiles}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'files')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'files' && (\n              <AddLessonFileForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonFile}\n              />\n            )}\n            {props.showFilesState === true && (\n              <LessonFileList\n                lessonFiles={lesson.files}\n                canDelete\n                onDelete={props.deleteLessonFile}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n\n      <Tab eventKey=\"instructors\" title=\"instructors\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Instructors\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleInstructors}>\n              Show/Hide\n            </Button>\n            {isInstructor === true &&\n              JSON.stringify(props.selectedInstructor) === \"{}\" && (\n            <Button variant=\"warning\">\n              Select an Instructor to Add\n            </Button>\n            )}\n            {isInstructor === true &&\n              JSON.stringify(props.selectedInstructor) !== \"{}\" && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'instructors')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'instructors' &&  (\n              <AddLessonInstructorForm\n              selectedInstructor={props.selectedInstructor}\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonInstructor}\n              />\n            )}\n            {props.showInstructorsState === true && (\n              <LessonInstructorList\n              canDelete\n              onDelete={props.deleteLessonInstructor}\n                lessonInstructors={lesson.instructors}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"tags\" title=\"tags\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n      <Row>\n        <Col>\n        <Card.Text>\n        Tags\n        </Card.Text>\n          <Button variant=\"danger\" onClick={props.toggleTags}>\n            Show/Hide\n          </Button>\n          {isInstructor === true && (\n          <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'tags')}>\n            Add\n          </Button>\n          )}\n          {props.lessonAddField === 'tags' && (\n            <AddLessonTagsForm\n            authId={props.authId}\n            onCancel={props.cancelLessonAdd}\n            onConfirm={props.addLessonTags}\n            />\n          )}\n          {props.showTagsState === true && (\n            <LessonTagList\n              lessonTags={lesson.tags}\n              canDelete\n              onDelete={props.deleteLessonTag}\n            />\n          )}\n        </Col>\n      </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"reviews\" title=\"reviews\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Reviews\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleReviews}>\n              Show/Hide\n            </Button>\n            {props.showReviewsState === true && (\n              <LessonReviewList\n                lessonReviews={lesson.reviews}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"edit\" title=\"edit\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n          {isInstructor === true && (\n              <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n              <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n                Edit Basic\n              </Button>\n                {props.editingLesson === true && (\n                  <UpdateLessonBasicForm\n                  lesson={lesson}\n                  onCancel={props.cancelEditBasic}\n                  onConfirm={props.editLessonBasic}\n                  />\n                )}\n              </Col>\n\n            </Row>\n          )}\n\n            {isInstructor === true && (\n              <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n              <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n                Edit Field\n              </Button>\n                {props.editingLessonField === true && (\n                  <UpdateLessonFieldForm\n                  lesson={lesson}\n                  onCancel={props.cancelEditField}\n                  onConfirm={props.editLessonField}\n                  />\n                )}\n              </Col>\n\n            </Row>\n          )}\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default LessonDetail;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport LessonDetail from './Lessons/LessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst LessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <LessonDetail\n      authId={props.authId}\n      user={props.user}\n      lesson={props.lesson}\n\n      sessionsLoaded={props.sessionsLoaded}\n      onSessionLoad={props.onSessionLoad}\n      onHideSessions={props.onHideSessions}\n      onBookSession={props.onBookSession}\n\n      onAddCartLesson={props.onAddCartLesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n\n      startCreateSession={props.startCreateSession}\n      creatingSession={props.creatingSession}\n      cancelCreateSession={props.cancelCreateSession}\n      createLessonSession={props.createLessonSession}\n\n      onStartEditLessonBasic={props.onStartEditLessonBasic}\n      onStartEditLessonField={props.onStartEditLessonField}\n      editingLesson={props.editingLesson}\n      editingLessonField={props.editingLessonField}\n      cancelEditBasic={props.cancelEditBasic}\n      editLessonBasic={props.editLessonBasic}\n      cancelEditField={props.cancelEditField}\n      editLessonField={props.editLessonField}\n\n      toggleSchedule={props.toggleSchedule}\n      showScheduleState={props.showScheduleState}\n\n      showSessionBooked={props.showSessionBooked}\n      showSessionAttended={props.showSessionAttended}\n      hideSessionBooked={props.hideSessionBooked}\n      hideSessionAttended={props.hideSessionAttended}\n      sessionBookedState={props.sessionBookedState}\n      sessionAttendedState={props.sessionAttendedState}\n      addSessionAttendance={props.addSessionAttendance}\n\n      toggleInstructors={props.toggleInstructors}\n      showInstructorsState={props.showInstructorsState}\n      toggleRequirements={props.toggleRequirements}\n      showRequirementsState={props.showRequirementsState}\n      toggleMaterials={props.toggleMaterials}\n      showMaterialsState={props.showMaterialsState}\n      toggleReviews={props.toggleReviews}\n      showReviewsState={props.showReviewsState}\n      toggleTags={props.toggleTags}\n      showTagsState={props.showTagsState}\n      toggleImages={props.toggleImages}\n      showImagesState={props.showImagesState}\n      toggleFiles={props.toggleFiles}\n      showFilesState={props.showFilesState}\n\n      lessonAddField={props.lessonAddField}\n      startLessonAdd={props.startLessonAdd}\n      cancelLessonAdd={props.cancelLessonAdd}\n      selectedInstructor={props.selectedInstructor}\n      addLessonInstructor={props.addLessonInstructor}\n      addLessonMaterials={props.addLessonMaterials}\n      addLessonTags={props.addLessonTags}\n      addLessonRequirements={props.addLessonRequirements}\n      addLessonImage={props.addLessonImage}\n      addLessonFile={props.addLessonFile}\n\n      onLikeLesson={props.onLikeLesson}\n      deleteLessonTag={props.deleteLessonTag}\n      deleteLessonRequirement={props.deleteLessonRequirement}\n      deleteLessonMaterial={props.deleteLessonMaterial}\n      deleteLessonImage={props.deleteLessonImage}\n      deleteLessonFile={props.deleteLessonFile}\n      deleteLessonInstructor={props.deleteLessonInstructor}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LessonDetailViewer;\n","import React from 'react';\n// import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n// import Accordion from 'react-bootstrap/Accordion';\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst CreateLessonForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Subtitle\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Duration\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Sku\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder=\"Price\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"Points\" />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Description\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder=\"Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonFieldRegexForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Regex Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>title</option>\n  <option>subtitle</option>\n  <option>type</option>\n  <option>category</option>\n  <option>sku</option>\n  <option>description</option>\n  <option>notes</option>\n  <option>duration</option>\n  <option>requirements</option>\n  <option>tags</option>\n  <option>materials</option>\n  <option>files.name</option>\n  <option>sessions.title</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonFieldRegexForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonFieldBasicForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Basic Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>price</option>\n  <option>points</option>\n  <option>schedule.date</option>\n  <option>schedule.time</option>\n  <option>instructors</option>\n  <option>attendees</option>\n  <option>sessions.booked</option>\n  <option>sessions.attended</option>\n  <option>sessions.bookedAmount</option>\n  <option>sessions.attendedAmount</option>\n  <option>sessions.date</option>\n  <option>sessions.full</option>\n  <option>sessions.inProgress</option>\n  <option>sessions.limit</option>\n  <option>sessions.amount</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Basic Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonFieldBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonSessionForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Label>Lesson: {props.lesson._id}</Form.Label>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridSessionDate\">\n  <Form.Label>SessionDate</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"SessionDate\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridSessionTitle\">\n  <Form.Label>SessionTitle</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"SessionTitle\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonSessionForm;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\n// import LessonDetail from '../../components/Lessons/LessonDetail';\nimport SearchSession from '../../components/Lessons/LessonList/LessonItem/SearchSession';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport LessonDetailViewer from '../../components/LessonDetailViewer';\n\nimport CreateLessonForm from '../../components/Forms/lesson/CreateLessonForm';\nimport SearchLessonFieldRegexForm from '../../components/Forms/lesson/SearchLessonFieldRegexForm';\nimport SearchLessonFieldBasicForm from '../../components/Forms/lesson/SearchLessonFieldBasicForm';\nimport SearchLessonSessionForm from '../../components/Forms/lesson/SearchLessonSessionForm';\n\n\nimport './Users.css';\n\nclass LessonsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    searchSession: null,\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonUpdateField: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    sessionsLoaded: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    showScheduleState: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    sessionBookedState: false,\n    sessionAttendedState: false,\n    activityA: null,\n    showInstructorsState: false,\n    showRequirementsState: false,\n    showMaterialsState: false,\n    showTagsState: false,\n    showFilesState: false,\n    showImagesState: false,\n    showReviewsState: false,\n    lessonAddField: null,\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...lesson profile component mounted...');\n    if (this.context.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedLesson) !== '{}') {\n      this.setState({ selectedLesson: this.context.selectedLesson })\n    }\n\n    this.fetchLessonsBasic();\n  }\n\n  modalConfirmSearchRegexHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getLessonsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\")\n          {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},attendees{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonsByFieldRegex).slice(0,8);\n        const searchLessons = resData.data.getLessonsByFieldRegex;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchBasicHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getLessonsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\")\n          {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},attendees{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonsByField).slice(0,8);\n        const searchLessons = resData.data.getLessonsByField;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchSessionHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionDate = event.target.formGridSessionDate.value;\n    const sessionTitle = event.target.formGridSessionTitle.value;\n\n    const requestBody = {\n      query: `\n        query {getLessonSession(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\"\n          })\n          {title,date,time,limit,amount,bookedAmount,booked{_id,username},attendedAmount,attended{_id,username},inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonSession).slice(0,8);\n        const searchSession = resData.data.getLessonSession;\n        // console.log('baap',resData,searchSession);\n        this.setState({ searchSession: searchSession, userAlert: responseAlert, activityId: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startCreateLesson = () => {\n    this.setState({creating: true})\n  }\n  createLessonHandler = (event) => {\n    this.setState({creating: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const duration = event.target.formGridDuration.value;\n\n    const requestBody = {\n      query: `\n        mutation {createLesson(\n          activityId:\"${activityId}\",\n          creatorId:\"${creatorId}\",\n          lessonInput:{\n            title:\"${title}\",\n            subtitle:\"${subtitle}\",\n            type:\"${type}\",\n            category:\"${category}\",\n            price:${price},\n            points:${points},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            duration:\"${duration}\",\n            sku:\"${sku}\"\n          })\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.createLesson).slice(0,8);\n        this.setState({ lesson: resData.data.createLesson, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  }\n  onStartEditLessonField = () => {\n    this.setState({editingLessonField: true})\n  }\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  }\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  }\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    this.setState({editingLesson: false})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonBasic, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  editLessonField = (event) => {\n    event.preventDefault();\n    this.setState({editingLessonField: false})\n    let activityId = this.context.activityId;\n    // const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonByField, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchLessonsBasic() {\n    const activityId = this.context.activityId;\n    this.setState({ isLoading: true, userAlert: \"Fetching Lesson Master List...\" });\n    const requestBody = {\n      query: `\n        query {getAllLessons(activityId:\"${activityId}\")\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllLessons, isLoading: false, activityId: requestBody});\n        this.context.lessons = this.state.lessons;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  loadSessions = (args) => {\n    console.log('retriving sessions for this lesson');\n    this.setState({userAlert: 'retriving sessions for this lesson'})\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requestBody = {\n      query: `\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.getLessonById, isLoading: false, sessionsLoaded: true, activityId: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  };\n  hideSessions = () => {\n    this.setState({sessionsLoaded: false})\n  };\n  addCartLesson = (args) => {\n    console.log('adding lesson to cart');\n    this.setState({userAlert: 'adding lesson to cart'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n    const requestBody = {\n      query: `\n            mutation {addUserCartLesson(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              lessonId:\"${lessonId}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTitle:\"${sessionTitle}\"\n            )\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n        // console.log(JSON.stringify(requestBody));\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, isLoading: false, activityA: requestBody});\n        this.context.selectedUser = resData.data.addUserCartLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  bookSession = (args) => {\n    console.log('booking lesson session');\n    this.setState({userAlert: 'booking lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    // const sessionDate = args.date;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n    const sessionTime = args.time;\n\n    const requestBody = {\n      query: `\n            mutation {addLessonBooking(\n              activityId:\"${activityId}\",\n              lessonId:\"${lessonId}\",\n              userId:\"${userId}\",\n              lessonInput:{\n                sessionTitle:\"${sessionTitle}\",\n                sessionDate:\"${sessionDate}\",\n                sessionTime:\"${sessionTime}\"\n              })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id},bookedAmount,attended{_id},attendedAmount,inProgress,full},promos{_id}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        let responseAlert = null;\n        if (resData.errors) {\n          responseAlert = resData.errors[0].message;\n          // console.log(responseAlert);\n          this.setState({userAlert: responseAlert})\n        }\n        if (resData.data.addLessonBooking !== null) {\n          responseAlert = JSON.stringify(resData.data).slice(0,8);\n          this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonBooking, isLoading: false, activityA: requestBody});\n          this.context.selectedLesson = this.state.selectedLesson;\n        }\n\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    event.preventDefault();\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    // const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toISOString().slice(0,10);\n    // sessionDate = new Date(sessionDate).toLocaleDateString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n    // console.log(sessionDate);\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonSession, isLoading: false, creatingSession: false, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  showSessionBooked = () => {\n    this.setState({sessionBookedState: true})\n  }\n  hideSessionBooked = () => {\n    this.setState({sessionBookedState: false})\n  }\n  hideSessionAttended = () => {\n    this.setState({sessionAttendedState: false})\n  }\n\n  deleteListLesson = (lessonId) => {\n    console.log(\"delete listed lesson\", lessonId);\n  };\n  reportLesson = (lessonId) => {\n    console.log(\"reporting lesson\", lessonId);\n  };\n\n  showDetailHandler = lessonId => {\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  selectLessonNoDetail = (lesson) => {\n    this.setState({selectedLesson: lesson});\n    this.context.selectedLesson = lesson;\n  };\n\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n  onViewAttachment = (attachment) => {\n      this.setState({showAttachment: true})\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  };\n  closeAttachmentView = () => {\n      this.setState({showAttachment: false})\n  };\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    // const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price,requirementsg}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  toggleInstructors = () => {\n    if (this.state.showInstructorsState === false) {\n      this.setState({showInstructorsState: true})\n    } else {\n      this.setState({showInstructorsState: false})\n    }\n  }\n  toggleSchedule = () => {\n    if (this.state.showScheduleState === false) {\n      this.setState({showScheduleState: true})\n    } else {\n      this.setState({showScheduleState: false})\n    }\n  }\n  toggleRequirements = () => {\n    if (this.state.showRequirementsState === false) {\n      this.setState({showRequirementsState: true})\n    } else {\n      this.setState({showRequirementsState: false})\n    }\n  }\n  toggleMaterials = () => {\n    if (this.state.showMaterialsState === false) {\n      this.setState({showMaterialsState: true})\n    } else {\n      this.setState({showMaterialsState: false})\n    }\n  }\n  toggleTags = () => {\n    if (this.state.showTagsState === false) {\n      this.setState({showTagsState: true})\n    } else {\n      this.setState({showTagsState: false})\n    }\n  }\n  toggleImages = () => {\n    if (this.state.showImagesState === false) {\n      this.setState({showImagesState: true})\n    } else {\n      this.setState({showImagesState: false})\n    }\n  }\n  toggleFiles = () => {\n    if (this.state.showFilesState === false) {\n      this.setState({showFilesState: true})\n    } else {\n      this.setState({showFilesState: false})\n    }\n  }\n  toggleReviews = () => {\n    if (this.state.showReviewsState === false) {\n      this.setState({showReviewsState: true})\n    } else {\n      this.setState({showReviewsState: false})\n    }\n  }\n\n  startLessonAdd = (args) => {\n    // console.log(args);\n    this.setState({lessonAddField: args})\n  }\n  cancelLessonAdd = (args) => {\n    this.setState({lessonAddField: null})\n  }\n\n  addLessonMaterials = (event) => {\n    event.preventDefault();\n    this.setState({userAlert: '...adding lesson materials...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const materials = event.target.formGridMaterials.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonMaterials(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              materials: \"${materials}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonMaterials, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonTags = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson tags...');\n    this.setState({userAlert: '...adding lesson tags...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonTags(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tags: \"${tags}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonTags, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonRequirements = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson requirements ...');\n    this.setState({userAlert: '...adding lesson requirements ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requirements = event.target.formGridRequirements.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonRequirements(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirements: \"${requirements}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonRequirements, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonImage = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Images ...');\n    this.setState({userAlert: '...adding lesson Images ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const imageName = event.target.formGridImagename.value;\n    const imageType = event.target.formGridImagetype.value;\n    const imagePath = event.target.formGridImagepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\"\n              imageType: \"${imageType}\"\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonImage, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonFile = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson Files ...');\n    this.setState({userAlert: '...adding lesson Files ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const fileName = event.target.formGridFilename.value;\n    const fileType = event.target.formGridFilesize.value;\n    const fileSize = event.target.formGridFiletype.value;\n    const filePath = event.target.formGridFilepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\"\n              fileType: \"${fileType}\"\n              fileSize: \"${fileSize}\"\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonFile, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonInstructor = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson instructor ...');\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const instructorId = this.context.selectedUser._id;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\"\n            instructorId: \"${instructorId}\")\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonInstructor, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n  likeLesson = (args) => {\n    // console.log('...adding lesson like...',args);\n    this.setState({userAlert: '...adding lesson like...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requestBody = {\n      query: `\n          mutation {addUserLikedLesson(\n            activityId:\"${activityId}\",\n            userId: \"${userId}\",\n            lessonId:\"${lessonId}\",)\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.context.user = resData.data.addUserLikedLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteLessonTag = (args) => {\n    console.log('...deleting lesson tag...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const tag = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonTag(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tag:\"${tag}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.deleteLessonTag);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonTag, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonRequirement = (args) => {\n    console.log('...deleting lesson requirement...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requirement = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonRequirement(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirement:\"${requirement}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonRequirement, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonMaterial = (args) => {\n    console.log('...deleting lesson material...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const material = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonMaterial(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              material:\"${material}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonMaterial, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonImage = (args) => {\n    console.log('...deleting lesson image...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const imageName = args.name;\n    const imageType = args.type;\n    const imagePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\",\n              imageType: \"${imageType}\",\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonImage, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonFile = (args) => {\n    console.log('...deleting lesson file...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const fileName = args.name;\n    const fileType = args.type;\n    const fileSize = args.size;\n    const filePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\",\n              fileType: \"${fileType}\",\n              fileSize: \"${fileSize}\",\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonFile, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonInstructor = (args) => {\n    console.log('...deleting lesson instructor...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const instructorId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            instructorId: \"${instructorId}\"\n          )\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonInstructor, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true && (\n        <LessonDetailViewer\n          authId={this.context.activityId}\n          user={this.context.user}\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n\n          sessionsLoaded={this.state.sessionsLoaded}\n          onSessionLoad={this.loadSessions}\n          onHideSessions={this.hideSessions}\n          onBookSession={this.bookSession}\n\n          onAddCartLesson={this.addCartLesson}\n\n          startCreateSession={this.startCreateSession}\n          creatingSession={this.state.creatingSession}\n          cancelCreateSession={this.cancelCreateSession}\n          createLessonSession={this.createLessonSession}\n\n          onStartEditLessonBasic={this.onStartEditLessonBasic}\n          onStartEditLessonField={this.onStartEditLessonField}\n          editingLesson={this.state.editingLesson}\n          editingLessonField={this.state.editingLessonField}\n          cancelEditBasic={this.cancelEditBasic}\n          cancelEditField={this.cancelEditField}\n          editLessonBasic={this.editLessonBasic}\n          editLessonField={this.editLessonField}\n\n          showScheduleState={this.state.showScheduleState}\n          toggleSchedule={this.toggleSchedule}\n\n          showSessionBooked={this.showSessionBooked}\n          showSessionAttended={this.showSessionAttended}\n          hideSessionBooked={this.hideSessionBooked}\n          hideSessionAttended={this.hideSessionAttended}\n          sessionBookedState={this.state.sessionBookedState}\n          sessionAttendedState={this.state.sessionAttendedState}\n\n          toggleInstructors={this.toggleInstructors}\n          showInstructorsState={this.state.showInstructorsState}\n          toggleRequirements={this.toggleRequirements}\n          showRequirementsState={this.state.showRequirementsState}\n          toggleMaterials={this.toggleMaterials}\n          showMaterialsState={this.state.showMaterialsState}\n          toggleReviews={this.toggleReviews}\n          showReviewsState={this.state.showReviewsState}\n\n          toggleTags={this.toggleTags}\n          showTagsState={this.state.showTagsState}\n          toggleImages={this.toggleImages}\n          showImagesState={this.state.showImagesState}\n          toggleFiles={this.toggleFiles}\n          showFilesState={this.state.showFilesState}\n\n          startLessonAdd={this.startLessonAdd}\n          cancelLessonAdd={this.cancelLessonAdd}\n          lessonAddField={this.state.lessonAddField}\n          addLessonMaterials={this.addLessonMaterials}\n          addLessonRequirements={this.addLessonRequirements}\n          addLessonTags={this.addLessonTags}\n          addLessonImage={this.addLessonImage}\n          addLessonFile={this.addLessonFile}\n          selectedInstructor={this.context.selectedUser}\n          addLessonInstructor={this.addLessonInstructor}\n\n          onLikeLesson={this.likeLesson}\n          deleteLessonTag={this.deleteLessonTag}\n          deleteLessonRequirement={this.deleteLessonRequirement}\n          deleteLessonMaterial={this.deleteLessonMaterial}\n          deleteLessonImage={this.deleteLessonImage}\n          deleteLessonFile={this.deleteLessonFile}\n          deleteLessonInstructor={this.deleteLessonInstructor}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"Create\">+ Lesson</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      {this.state.lessons !== [] && (\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n                      )}\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchLessonFieldRegexForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchRegexHandler}\n                            confirmText=\"Search\"\n                          />\n                          <SearchLessonFieldBasicForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchBasicHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n\n                        <Tab eventKey=\"Session\" title=\"Search Session\">\n\n                          {this.state.selectedLesson === null && (\n                            <p>Select a lesson 1st</p>\n                          )}\n\n                          {this.state.selectedLesson !== null && (\n                            <SearchLessonSessionForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchSessionHandler}\n                            lesson={this.state.selectedLesson}\n                            confirmText=\"Search\"\n                          />)}\n\n                          {this.state.searchSession !== null && (\n                            <SearchSession\n                            authId={this.context.activityId}\n                            session={this.state.searchSession}\n                            />\n                          )}\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}  ,   Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            lessons={this.state.searchLessons}\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"Create\">\n                        <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startCreateLesson}>+ Lesson</Button>\n\n                        <Row className=\"userListRow\">\n                          {this.state.creating === true && (\n                            <CreateLessonForm\n                              authId={this.context.activityId}\n                              creator={this.context.user}\n                              canCancel\n                                canConfirm\n                                onCancel={this.modalCancelHandler}\n                                onConfirm={this.createLessonHandler}\n                            />\n                          )}\n                        </Row>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default LessonsPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonScheduleList from './LessonList/LessonScheduleList';\nimport LessonRequirementList from './LessonList/LessonRequirementList';\nimport LessonImageList from './LessonList/LessonImageList';\nimport LessonReviewList from './LessonList/LessonReviewList';\nimport LessonTagList from './LessonList/LessonTagList';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst PublicLessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n            {lesson.instructors[0]._id}\n            {lesson.instructors[0].username}\n          </Card.Text>\n\n          <Button variant=\"danger\" onClick={props.showSchedule}>\n            See dates\n          </Button>\n          <Button variant=\"danger\" onClick={props.hideSchedule}>\n            Hide dates\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n\n          </Col>\n\n        </Row>\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n          </Col>\n          </Row>\n\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"requirements\" title=\"requirements\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Requirements\n          </Card.Text>\n              <LessonRequirementList\n                public\n                lessonRequirements={lesson.requirements}\n              />\n          </Col>\n        </Row>\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"images\" title=\"images\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Images\n          </Card.Text>\n              <LessonImageList\n                public\n                lessonImages={lesson.gallery}\n              />\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"reviews\" title=\"reviews\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Reviews\n          </Card.Text>\n              <LessonReviewList\n                lessonReviews={lesson.reviews}\n              />\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"tags\" title=\"tags\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n      <Row>\n        <Col>\n        <Card.Text>\n        Tags\n        </Card.Text>\n\n            <LessonTagList\n              public\n              lessonTags={lesson.tags}\n            />\n        </Col>\n      </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default PublicLessonDetail;\n","import React from 'react';\n// import Button from 'react-bootstrap/Button';\nimport PublicLessonDetail from './Lessons/PublicLessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst PublicLessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <PublicLessonDetail\n      lesson={props.lesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n      showSchedule={props.showSchedule}\n      showScheduleState={props.showScheduleState}\n      hideSchedule={props.hideSchedule}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default PublicLessonDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchPublicLessonForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Regex Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>title</option>\n  <option>type</option>\n  <option>category</option>\n  <option>description</option>\n  <option>duration</option>\n  <option>tags</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchPublicLessonForm;\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\n// import SearchSession from '../../components/Lessons/LessonList/LessonItem/SearchSession';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport PublicLessonDetailViewer from '../../components/PublicLessonDetailViewer';\n\nimport SearchPublicLessonForm from '../../components/Forms/lesson/SearchPublicLessonForm';\n\nimport './Users.css';\n\nclass PublicLessonsPage extends Component {\n  state = {\n    searching: false,\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    searchSession: null,\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    showSchedule: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    guestId: '5eGe76Ed7e3Ue422aSb2T60b',\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...public lessons component mounted...');\n    this.fetchLessonsPublic();\n  }\n\n  modalConfirmPublicSearchHandler = (event) => {\n    event.preventDefault();\n    // const token = this.context.token;\n    let field = event.target.formBasicFieldSelect.value;\n    let query = event.target.formBasicQuery.value;\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        query {getPublicLessonsByField(\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,subtitle,type,category,price,points,description,duration,schedule{date,time},gallery{name,type,path},instructors{_id,username},tags}}\n      `}\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getPublicLessonsByField).slice(0,8);\n        const searchLessons = resData.data.getPublicLessonsByField;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ searching: false, selectedLesson: null});\n  };\n\n  fetchLessonsPublic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching Public Lesson Master List...\" });\n    const requestBody = {\n      query: `\n          query {getAllPublicLessons\n            {_id,title,subtitle,type,category,price,points,description,duration,requirements,schedule{date,time},gallery{name,type,path},instructors{_id,username},tags,reviews{date,type,title,author{_id,username},body,rating}}}\n        `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllPublicLessons, isLoading: false});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showSchedule = () => {\n    this.setState({showSchedule: true})\n  };\n  hideSchedule = () => {\n    this.setState({showSchedule: false})\n  };\n\n  showDetailHandler = lessonId => {\n    console.log('beep',lessonId);\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    // this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing lesson search results\"});\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.guestId}\n      />\n      {this.state.showDetail === true && (\n        <PublicLessonDetailViewer\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n          showScheduleState={this.state.showSchedule}\n          showSchedule={this.showSchedule}\n          hideSchedule={this.hideSchedule}\n        />\n      )}\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n            <h1>Visitor lesson list</h1>\n\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"FeaturedList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"FeaturedList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                           public\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             onViewDetail={this.showDetailHandler}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchPublicLessonForm\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmPublicSearchHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}, Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            lessons={this.state.searchLessons}\n                            onViewDetail={this.showDetailHandler}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default PublicLessonsPage;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst ResetPasswordForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridParams\">\n    <Form.Control type=\"text\" hidden='true' value={props.params}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"password\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Reset\n  </Button>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>\n  cancel\n  </Button>\n\n</Form.Row>\n\n</Form>\n\n</div>\n\n)};\n\nexport default ResetPasswordForm;\n","import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ResetPasswordForm from '../../components/Forms/user/ResetPasswordForm'\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport \"./AttachmentViewer.css\"\n\nconst PasswordReset = (props) => {\n  let {params} = useParams();\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n\n    <Row className=\"loginPageContainerRow2\">\n    <Col className=\"loginPageContainerCol2\">\n      <h1>Password Reset</h1>\n\n      {props.resetState === 'complete' && (\n        <p>Success...Password reset...</p>\n      )}\n      {props.resetState === 'cancelled' && (\n        <p>Change your mind...? Request a new Password from the login page...</p>\n      )}\n\n      {props.resetState === 'complete' ||\n        props.resetState === 'cancelled' && (\n        <NavLink to=\"/auth\">\n        <Button variant=\"secondary\">\n          Login\n        </Button>\n        </NavLink>\n      )}\n\n      {props.resetState === 'incomplete' && (\n      <ResetPasswordForm\n        params={params}\n        onConfirm={props.passwordReset}\n        onCancel={props.cancelPasswordReset}\n      />\n      )}\n\n    </Col>\n    </Row>\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default PasswordReset;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../context/auth-context';\nimport AlertBox from '../components/AlertBox';\nimport LoadingOverlay from '../components/LoadingOverlay';\nimport './Landing.css';\n\nclass LandingPage extends Component {\n  state = {\n    role: null,\n    userAlert: \"landing\",\n    overlay: false,\n    overlayStatus: \"test\",\n    isGuest: true,\n    context: null,\n  };\n\ncomponentDidMount () {\n  // console.log(AuthContext._currentValue.activityId ,AuthContext._currentValue.activityId === null,AuthContext._currentValue.token === null);\n  if (AuthContext._currentValue.activityId !== null && AuthContext._currentValue.token !== null ) {\n    this.setState({isGuest: false})\n    // console.log(this.state);\n  }\n}\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"loginPageContainer\">\n\n      <Row className=\"loginPageContainerRow2\">\n      <Col className=\"loginPageContainerCol2\">\n        <h1> Welcome to Couch Coach</h1>\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n        <p>About Coach Coach</p>\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n        <p>Featured Lessons go here??</p>\n      </Col>\n      <Col className=\"loginPageContainerCol2\">\n\n          {this.state.isGuest === true && (\n            <NavLink to=\"/login\">Login</NavLink>\n          )}\n          {this.state.isGuest === true && (\n            <NavLink to=\"/signup\">Signup</NavLink>\n          )}\n\n      </Col>\n      </Row>\n      </Container>\n\n      </React.Fragment>\n    );\n\n  }\n\n\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>My Couch Coach 0.0.1</h1>\n\n          </div>\n          <nav className=\"main-navigation__items\">\n\n            <ul>\n            <li>\n              <NavLink to=\"/home\">Home</NavLink>\n            </li>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </li>\n              )}\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n              )}\n              {context.token && (\n                <React.Fragment>\n\n                  <li>\n                    <NavLink to=\"/userProfile\">My Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/users\">Users</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/lessons\">Lessons</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {!context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/lessons/public\">Lessons</NavLink>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/auth/Auth';\nimport SignupPage from './pages/auth/Signup';\n\nimport UserProfile from './pages/user/UserProfile';\nimport UsersPage from './pages/user/Users';\nimport LessonsPage from './pages/lesson/Lessons';\nimport PublicLessonsPage from './pages/lesson/PublicLessons';\nimport ProfileLessonViewer from './components/ProfileLessonViewer';\n// import ErrorPage from './components/ErrorPage';\nimport PasswordReset from './pages/auth/PasswordReset';\nimport LandingPage from './pages/Landing';\n\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionCookiePresent: false,\n    passwordResetState: 'incomplete'\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role\n    });\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    // this.socket.emit('msg_subscribe', {user: activityId, room:'msg'+activityId});\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n\n  componentDidMount() {\n    // console.log(this.socket.connected);\n    console.log('...app component mounted...');\n\n    if (sessionStorage.getItem('login info') && this.state.token === null) {\n\n      let seshStore = sessionStorage.getItem('login info');\n      this.context.token = seshStore.token;\n      this.context.activityId = seshStore.activityId;\n      this.context.role = seshStore.role;\n      this.setState({\n        sessionCookiePresent: true,\n        token: seshStore.token,\n        });\n    };\n\n    // const conversationId = this.context.activityId;\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n  }\n\n  componentWillUnmount() {\n    // console.log('boop boop boop');\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null\n          });\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityB: null,\n          activityC: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          lesson: {},\n          lessons: [],\n          selectedLesson: null,\n          selectedPerk: null,\n          selectedPromo: null,\n          selectedReview: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n        };\n\n      })\n      .catch(err => {\n        console.log(err);\n        // this.setState({userAlert: err});\n      });\n  }\n\n  userOffline () {\n    console.log('...taking user offline...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n      mutation{userOffline(\n        activityId:\"${activityId}\",\n        userId:\"${activityId}\")\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // const responseAlert = JSON.stringify(resData.data.userOffline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  passwordReset = (event) => {\n    event.preventDefault();\n    console.log('...reset password submission...');\n      const params = event.target.formGridParams.value.split('@');\n      const verificationCode = params[1];\n      const userId = params[0];\n      const password = event.target.formGridPassword.value;\n      // console.log(params);\n\n      const requestBody = {\n        query:`\n          mutation {resetUserPassword(\n            userId:\"${userId}\",\n            verification: \"${verificationCode}\"\n            userInput:{\n              password:\"${password}\"\n            })\n            {_id,password}}\n        `};\n\n      fetch('http://ec2-3-81-110-166.compute-1.amazonaws.com/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n          }\n          return res.json();\n        })\n        .then(resData => {\n          console.log(resData);\n\n        })\n        .catch(err => {\n          console.log(err);\n        });\n        this.setState({passwordResetState: 'complete' })\n  }\n  cancelPasswordReset = () => {\n    this.setState({passwordResetState: 'cancelled'})\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityB: null,\n              activityC: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: {},\n              lesson: {},\n              lessons: [],\n              selectedLesson: {},\n              selectedPerk: {},\n              selectedPromo: {},\n              selectedReview: {},\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <main className=\"main-content\">\n              <Switch>\n                <Route path=\"/home\" component={LandingPage} />\n                  {\n                    // this.state.token && (<Redirect from=\"/\" to=\"/userProfile\" exact />)\n                  }\n\n                  {\n                    // !this.state.token && (<Route path=\"/passwordReset/:user\" component={PasswordReset} />)\n                  }\n                  {!this.state.token && (<Route path=\"/passwordReset/:params\" render={(props) => <PasswordReset {...props}\n                    passwordReset={this.passwordReset}\n                    cancelPasswordReset={this.cancelPasswordReset}\n                    resetState={this.state.passwordResetState}\n                    />}\n                  />)}\n                  {this.state.token && (<Route path=\"/userProfile\" component={UserProfile} />)}\n                  {this.state.token && (<Route path=\"/userProfile/LessonDetailViewer\" component={ProfileLessonViewer} />)}\n\n                  {this.state.token && (<Redirect from=\"/login\" to=\"/userProfile\" exact />)}\n\n                  {this.state.token && (<Route path=\"/users\" component={UsersPage} />)}\n                  {this.state.token && (<Route path=\"/lessons\" component={LessonsPage} />)}\n\n                  {!this.state.token && (<Route path=\"/lessons/public\" component={PublicLessonsPage} />)}\n                  {!this.state.token && (<Route path=\"/login\" component={AuthPage} />)}\n                  {!this.state.token && (<Route path=\"/signup\" component={SignupPage} />)}\n                  {\n                    !this.state.token && !sessionStorage.getItem('token') && (<Redirect from=\"*\" to=\"/home\" exact />)\n                  }\n                  {\n                    // !this.state.token && (<Redirect to=\"/login\" exact />)\n                    !this.state.token && sessionStorage.getItem('token') && (<Redirect to=\"/login\" exact />)\n                  }\n                  {\n                    // !this.state.token && (<Route path=\"*\" component={ErrorPage}/>)\n                  }\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}