const mongoose = require('mongoose');

const Schema = mongoose.Schema;

const userSchema = new Schema({
  password: {type: String,required: true},
  name: {type: String,required: true},
  role: {type: String},
  username: {type: String,required: true},
  dob:{type: Date},
  public: {type: Boolean},
  age: {type:Number},
  addresses: [{
    type: {type:String, enum: ['Shipping', 'Billing']},
    number: {type:Number},
    street: {type: String},
    town: {type: String},
    city: {type:String},
    country: {type:String},
    postalCode: {type:String},
  }],
  contact: {
    phone: {type: String},
    phone2: {type: String},
    email: {type: String,required: true},
  },
  bio: {type: String},
  profileImages: [{
    name: {type:String},
    type: {type: String},
    path: {type: String}
  }],
  socialMedia: [{
    platform: {type:String},
    handle: {type:String}
  }],
  interests: [{type: String}],
  perks: [{type: Schema.Types.ObjectId,ref: 'Perk'}],
  promos: [{type: Schema.Types.ObjectId,ref: 'Promo'}],
  friends:[{type: Schema.Types.ObjectId,ref: 'User'}],
  points: {type: Number},
  tags: [{type: String}],
  loggedin: {type: Boolean},
  clientConnected: {type: Boolean},
  verfication:{
    verified:{type: Boolean},
    type:{type: String},
    code:{type: String}
  },
  activity:[{
    date: {type: Date},
    time: {type: Number},
    request: {type: Number},
  }],
  likedClasses: [{type: Schema.Types.ObjectId,ref: 'Class'}],
  bookedClasses: [{
    date: {type: Date},
    ref: {type: Schema.Types.ObjectId,ref: 'Class'}
  }],
  attendedClasses: [{
    date: {type: Date},
    ref: {type: Schema.Types.ObjectId,ref: 'Class'}
  }],
  taughtClasses: [{
    date: {type: Date},
    ref: {type: Schema.Types.ObjectId,ref: 'Class'}
  }],
  wishlist: [{
    date: {type: Date},
    ref: {type: Schema.Types.ObjectId,ref: 'Product'},
    purchased: {type: Boolean}
  }],
  cart: [{
    dateAdded: {type: Date},
    sessionDate: {type: Date},
    class: {type: Schema.Types.ObjectId,ref: 'Class'}
  }],
  comments: [{type: Schema.Types.ObjectId,ref: 'Comment'}],
  messages: [{type: Schema.Types.ObjectId,ref: 'Message'}],
  orders: [{type: Schema.Types.ObjectId,ref: 'Order'}],
  paymentInfo: [{
    date: {type: Date},
    type: {type: String},
    description: {type: String},
    body: {type: String},
    valid: {type: Boolean},
    primary: {type: Boolean}
  }]
},
  { timestamps: true }
);

module.exports = mongoose.model('User', userSchema);



const mongoose = require('mongoose');

const Schema = mongoose.Schema;

const classSchema = new Schema({
  title: {type: String},
  subtitle: {type: String},
  type: {type: String},
  price: {
    currency: {type: String},
    amount: {type: Number}
  },
  points: {type: Number},
  description: {type: String},
  notes: {type: String},
  duration: {type: String},
  schedule: [{type: Date}],
  instructors: [{type: Schema.Types.ObjectId,ref: 'User'}],
  gallery: [{
    name: {type: String},
    type: {type: String},
    path: {type: String}
  }],
  requiremnts: [{type: String}],
  materials: [{type: String}],
  files: [{
    name: {type: String},
    type: {type: String},
    path: {type: String}
  }],
  reviews: [{type: Schema.Types.ObjectId,ref: 'Review'}],
  tags: [{type: String}],
  sessions: [{
    title: ,
    date: ,
    time: ,
    limit: ,
    amount: ,
    booked: [{type: Schema.Types.ObjectId,ref: 'User'}],
    bookedAmount: {type: Number},
    attended: [{type: Schema.Types.ObjectId,ref: 'User'}],
    attendedAmount: {type: Number},
    inProgress: {type: Boolean},
    full: {type: Boolean},
  }],
  promos: {type: Schema.Types.ObjectId,ref: 'Promo'}
},
  { timestamps: true }
);

module.exports = mongoose.model('Class', classSchema);



const mongoose = require('mongoose');

const Schema = mongoose.Schema;
const ObjectId = Schema.ObjectId;

const orderSchema = new Schema({
  date: {type: Date},
  time: {type: String},
  type: {type: String},
  buyer: {type: Schema.Types.ObjectId,ref: 'User'},
  classes: [{
    price: {
    currency: {type: String},
    amount: {type: Number},
    }
    date: {type: Date},
    ref: {type: Schema.Types.ObjectId,ref: 'Class'}
  }],
  totals: {
    a: {type: Number},
    b: {type: Number},
    c: {type: Number}
  },
  tax: {
    description: {type: String},
    amount: {type: Number}
  },
  description: {type: String},
  notes: {type: String},
  payment: {type: String},
  shipping: {type: String},
  billingAddress: {
    number: {type:Number},
    street: {type: String},
    town: {type: String},
    city: {type:String},
    country: {type:String},
    postalCode: {type:String},
  },
  shippingAddress: {
    number: {type:Number},
    street: {type: String},
    town: {type: String},
    city: {type:String},
    country: {type:String},
    postalCode: {type:String},
  },
  status: {
    cancelled: {type: Boolean},
    held: {type: Boolean},
    paid: {type: Boolean},
    checkedOut: {type: Boolean},
    emailSent: {type: Boolean},
    confirmed: {type: Boolean},
    packaged: {type: Boolean},
    shipped: {type: Boolean},
    delivered: {type: Boolean},
    confirmed: {type: Boolean},
  },
  feedback: {type: String}
},
  { timestamps: true }
);

module.exports = mongoose.model('Order', orderSchema);
