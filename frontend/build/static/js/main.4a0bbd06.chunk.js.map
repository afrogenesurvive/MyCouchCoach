{"version":3,"sources":["context/auth-context.js","components/AlertBox.js","components/LoadingOverlay.js","components/SidebarControl.js","components/Forms/user/VerifyUserForm.js","components/Spinner/Spinner.js","pages/Sidebar.js","components/Users/UserList/UserItem/UserAddressItem.js","components/Users/UserList/UserAddressList.js","components/Users/UserList/UserItem/UserProfileImageItem.js","components/Users/UserList/UserProfileImageList.js","components/Users/UserList/UserItem/UserSocialMediaItem.js","components/Users/UserList/UserSocialMediaList.js","components/Users/UserList/UserItem/UserPerkItem.js","components/Users/UserList/UserPerkList.js","components/Users/UserList/UserItem/UserPromoItem.js","components/Users/UserList/UserPromoList.js","components/Users/UserList/UserItem/UserInterestItem.js","components/Users/UserList/UserInterestList.js","components/Users/UserList/UserItem/UserTagItem.js","components/Users/UserList/UserTagList.js","components/Users/UserList/UserItem/UserFriendItem.js","components/Users/UserList/UserFriendList.js","components/Users/UserList/UserItem/UserFriendRequestItem.js","components/Users/UserList/UserFriendRequestList.js","components/Users/UserList/UserItem/UserCartItemItem.js","components/Users/UserList/UserCartItemList.js","components/Users/UserList/UserItem/UserBookedLessonItem.js","components/Users/UserList/UserBookedLessonList.js","components/Users/UserList/UserItem/UserLikedLessonItem.js","components/Users/UserList/UserLikedLessonList.js","components/Users/UserList/UserItem/UserAttendedLessonItem.js","components/Users/UserList/UserAttendedLessonList.js","components/Users/UserList/UserItem/UserTaughtLessonItem.js","components/Users/UserList/UserTaughtLessonList.js","components/Users/UserList/UserItem/UserPaymentInfoItem.js","components/Users/UserList/UserPaymentInfoList.js","components/Users/UserList/UserItem/UserOrderItem.js","components/Users/UserList/UserOrderList.js","components/Users/UserList/UserItem/UserReviewItem.js","components/Users/UserList/UserReviewList.js","components/Users/UserList/UserItem/UserMessageItem.js","components/Users/UserList/UserMessageList.js","components/Users/UserList/UserItem/UserActivityItem.js","components/Users/UserList/UserActivityList.js","components/Forms/user/UpdateUserBasicForm.js","components/Forms/user/UpdateUserFieldForm.js","components/Forms/user/AddUserAddressForm.js","components/Forms/user/AddUserProfileImageForm.js","components/Forms/user/AddUserSocialMediaForm.js","components/Forms/user/AddUserInterestsForm.js","components/Forms/user/AddUserTagsForm.js","components/Forms/user/AddUserPaymentInfoForm.js","components/Forms/user/AddUserPointsForm.js","components/Forms/user/AddUserPerkForm.js","components/Forms/user/AddUserPromoForm.js","components/Forms/user/AddUserFriendForm.js","components/Forms/message/CreateMessageForm.js","components/Forms/order/CreateOrderForm.js","components/Forms/review/CreateReviewForm.js","components/Lessons/LessonList/LessonItem/SessionBookedItem.js","components/Lessons/LessonList/SessionBookedList.js","components/Lessons/LessonList/LessonItem/SessionAttendedItem.js","components/Lessons/LessonList/SessionAttendedList.js","components/Lessons/LessonList/LessonItem/MeetingSessionItem.js","components/Lessons/LessonList/MeetingSessionList.js","components/Forms/lesson/UpdateSessionFieldForm.js","components/SessionDetailViewer.js","components/Users/thisUserProfile.js","components/Lessons/LessonList/LessonItem/LessonSessionItem.js","components/Lessons/LessonList/LessonSessionList.js","components/Lessons/LessonList/LessonItem/LessonScheduleItem.js","components/Lessons/LessonList/LessonScheduleList.js","components/Lessons/LessonList/LessonItem/LessonInstructorItem.js","components/Lessons/LessonList/LessonInstructorList.js","components/Lessons/LessonList/LessonItem/LessonRequirementItem.js","components/Lessons/LessonList/LessonRequirementList.js","components/Lessons/LessonList/LessonItem/LessonMaterialItem.js","components/Lessons/LessonList/LessonMaterialList.js","components/Lessons/LessonList/LessonItem/LessonTagItem.js","components/Lessons/LessonList/LessonTagList.js","components/Lessons/LessonList/LessonItem/LessonImageItem.js","components/Lessons/LessonList/LessonImageList.js","components/Lessons/LessonList/LessonItem/LessonFileItem.js","components/Lessons/LessonList/LessonFileList.js","components/Lessons/LessonList/LessonItem/LessonReviewItem.js","components/Lessons/LessonList/LessonReviewList.js","components/Forms/lesson/CreateLessonSessionForm.js","components/Forms/lesson/UpdateLessonBasicForm.js","components/Forms/lesson/UpdateLessonFieldForm.js","components/Forms/lesson/AddLessonRequirementsForm.js","components/Forms/lesson/AddLessonMaterialsForm.js","components/Forms/lesson/AddLessonTagsForm.js","components/Forms/lesson/AddLessonImageForm.js","components/Forms/lesson/AddLessonFileForm.js","components/Forms/lesson/AddLessonInstructorForm.js","components/ProfileLessonViewer.js","pages/user/UserProfile.js","pages/auth/Auth.js","components/Forms/user/CreateUserForm.js","pages/auth/Signup.js","components/Users/UserList/UserItem/UserItem.js","components/Users/UserList/UserList.js","components/Users/UserList/SearchUserList.js","components/Forms/user/MessageUserListForm.js","components/Users/UserDetail.js","components/AttachmentViewer.js","components/UserDetailViewer.js","components/Forms/user/SearchUserFieldBasicForm.js","components/Forms/user/SearchUserFieldRegexForm.js","pages/user/Users.js","components/Lessons/LessonList/LessonItem/LessonItem.js","components/Lessons/LessonList/LessonList.js","components/Lessons/LessonList/LessonItem/SearchLessonItem.js","components/Lessons/LessonList/SearchLessonList.js","components/Lessons/LessonDetail.js","components/Lessons/LessonList/LessonItem/SearchSession.js","components/LessonDetailViewer.js","components/Forms/lesson/CreateLessonForm.js","components/Forms/lesson/SearchLessonFieldRegexForm.js","components/Forms/lesson/SearchLessonFieldBasicForm.js","components/Forms/lesson/SearchLessonSessionForm.js","pages/lesson/Lessons.js","components/Lessons/PublicLessonDetail.js","components/PublicLessonDetailViewer.js","components/Forms/lesson/SearchPublicLessonForm.js","pages/lesson/PublicLessons.js","components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","token","activityId","activityA","activityB","activityC","role","userId","user","users","selectedUser","lesson","lessons","selectedLesson","selectedPerk","selectedPromo","selectedReview","sender","receiver","userAlert","file","fancyDate","login","tokenExpiration","logout","AlertBox","props","alert","className","Alert","variant","LoadingOveray","status","SidebarControl","Button","onClick","onShowSidebar","onHideSidebar","verifyUserForm","Form","onSubmit","onConfirm","Row","Group","as","Col","controlId","Label","Control","type","placeholder","Text","canCancel","onCancel","canConfirm","spinner","SidebarPage","state","authContext","AuthContext","_currentValue","overlay","overlayStatus","isActive","this","Fragment","Container","md","Card","border","Body","to","Title","Subtitle","context","_id","name","username","title","Component","contextType","userAddressItem","key","authId","number","street","town","city","country","postalCode","primary","toString","canDelete","onDelete","bind","address","makeAddressPrimary","orderForm","value","JSON","stringify","addToOrder","userAddressList","userAddresses","map","UserAddressItem","path","userProfileImageItem","Image","src","fluid","profileImage","userProfileImageList","userProfileImages","UserProfileImageItem","userSocialMediaItem","platform","handle","link","socialMediaAccount","userSocialMediaList","userSocialMedia","UserSocialMediaItem","userPerkItem","imageLink","date","description","code","perk","userPerkList","userPerks","perkDate","Date","substr","toLocaleDateString","slice","UserPerkItem","startDate","endDate","promo","userPromoList","userPromos","promoStartDate","promoEndDate","UserPromoItem","valid","userInterestItem","interest","userInterestList","userInterests","UserInterestItem","userTagItem","tag","userTagList","userTags","UserTagItem","userFriendItem","style","width","profileImages","length","Img","phone","email","loggedIn","online","socialMedia","onSelect","friend","userFriendList","userFriends","UserFriendItem","contact","clientConnected","userFriendRequestItem","received","onAccept","friendRequest","onReject","userFriendRequestList","userFriendRequests","requestDate","UserFriendRequestItem","userCartItemItem","dateAdded","sessionDate","sessionTitle","cartItem","UserCartItemList","cart","userCartItems","cartItemDateAdded","toISOString","cartItemSessionDate","UserCartItemItem","userBookedLessonItem","dateBooked","sessionTime","viewLessonDetails","bookedLesson","userBookedLessonList","bookedLessons","userBookedLessons","session","UserBookedLessonItem","ref","time","userLikedLessonItem","likedLesson","userLikedLessonList","likedLessons","userLikedLessons","UserLikedLessonItem","userAttendedLessonItem","attendedLesson","hasReviewed","startCreateReview","userAttendedLessonList","attendedLessons","userAttendedLessons","reviewedLessonIds","includes","attendedLessonDate","userTaughtLessonItem","taughtLesson","userTaughtLessonList","taughtLessons","userTaughtLessons","taughtLessonDate","UserTaughtLessonItem","userPaymentInfoItem","body","paymentInfoItem","paymentInfoList","paymentInfo","userPaymentInfo","paymentInfoItemDate","UserPaymentInfoItem","userOrderItem","totals","c","order","userOrderList","userOrders","orderDate","UserOrderItem","buyer","tax","notes","payment","shipping","billingAddress","shippingAddress","feedback","userReviewItem","rating","userReviewList","userReviews","review","reviewDate","UserReviewItem","userMessgeItem","subject","messageMessage","read","userMessageList","userMessages","message","messageDate","UserMessageItem","userActivityItem","activityDate","request","userActivityList","activity","userActivity","UserActivityItem","UpdateUserBasicForm","useState","prevDob","dob","password","phone2","rows","bio","canCancelProfile","UpdateUserFieldForm","AddUserAddressForm","AddUserProfileImageForm","AddUserSocialMediForm","AddUserInterestsForm","AddUserTagsForm","AddUserPaymentInfoForm","payInfoDate","setPayInfoDate","id","selected","onChange","console","log","e","target","checked","AddUserPointsForm","AddUserPerkForm","AddUserPromoForm","AddUserFriendForm","requestingFriendId","CreateMessageForm","successText","CreateOrderForm","addressTypes","x","sku","addresses","billingAddresses","filter","shippingAddresses","primaryShippingAddresses","primaryBillingAddresses","primaryShippingAddress","primaryBillingAddress","step","CreateReviewForm","max","sessionBookedItem","addSessionAttendance","isInstructor","userAttended","attendance","sessionBookedList","booked","userAttended2","attended","SessionBookedItem","sessionAttendedItem","sessionAttendedList","SessionAttendedItem","meetingSessionItem","full","limit","amount","url","bookedAmount","attendedAmount","viewSessionDetails","meetingSessionList","sessions","lessonSessions","UpdateSessionFieldForm","SessionDetailViewer","lessonInstructors","hideSessionDetails","lessonTitle","showSessionBooked","hideSessionBooked","showSessionAttended","hideSessionAttended","sessionBookedState","SessionBookedList","sessionAttendedState","SessionAttendedList","editSessionField","startEditSessionField","editingSessionField","cancelEditSessionField","thisUserProfile","userDob","sentRequests","receivedRequests","friendRequests","messagesSent","messagesReceived","public","messages","reviews","hasShippingAddress","Tabs","defaultActiveKey","Tab","eventKey","disabled","age","points","verification","verified","size","onStartUpdate","onStartUpdateField","onStartAdd","updating","userAddField","userEditBasic","confirmText","updatingField","userEditField","userAddPoints","userAddAddress","UserAddressList","userDeleteAddress","userAddProfileImage","UserProfileImageList","userDeleteProfileImage","AddUserSocialMediaForm","userAddSocialMedia","UserSocialMediaList","userDeleteSocialMedia","userAddPerk","perks","UserPerkList","userDeletePerk","userAddPromo","promos","UserPromoList","userDeletePromo","userAddInterests","interests","UserInterestList","userDeleteInterest","userAddTags","tags","UserTagList","userDeleteTag","userAddFriend","requestingFriend","friends","UserFriendList","userDeleteFriend","userSelectFriend","UserFriendRequestList","userRejectFriendRequest","userAcceptFriendRequest","startCartCheckout","creatingOrder","cancelCartCheckout","createOrder","addAddressToOrder","orderBillingAddress","orderShippingAddress","userDeleteCartItem","UserLikedLessonList","userDeleteLikedLesson","UserBookedLessonList","userDeleteBookedLesson","creatingReview","reviewLesson","author","cancelCreateReview","createReview","UserAttendedLessonList","userDeleteAttendedLesson","UserTaughtLessonList","userDeleteTaughtLesson","userAddPaymentInfo","UserPaymentInfoList","userDeletePaymentInfo","onStartCreateMessage","messageReceiver","userCreateMessage","UserMessageList","userDeleteMessage","orders","UserOrderList","userDeleteOrder","UserReviewList","userDeleteReview","loadMeetings","hideMeetings","sessionDetailViewer","meetingsLoaded","MeetingSessionList","meetingSessions","UserActivityList","userDeleteActivity","lessonSessionItem","meetings","onBookSession","onAddCartLesson","lessonSessionList","lessonScheduleItem","lessonScheduleList","dates","lessonSchedule","scheduleDate","LessonScheduleItem","lessonInstructorItem","instructor","lessonInstructorList","instructors","LessonInstructorItem","lessonRequirementItem","requirement","lessonRequirementList","requirements","lessonRequirements","LessonRequirementItem","lessonMaterialItem","material","lessonMaterialList","materials","lessonMaterials","LessonMaterialItem","lessonTagItem","lessonTagList","lessonTags","LessonTagItem","lessonImageItem","image","lessonImageList","images","lessonImages","LessonImageItem","lessonFileItem","lessonFileList","files","lessonFiles","LessonFileItem","lessonReviewItem","isAuthor","lessonReviewList","lessonReviews","CreateLessonSessionForm","setDate","UpdateLessonBasicForm","subtitle","duration","category","price","UpdateLessonFieldForm","AddLessonRequirementsForm","AddLessonMaterialsForm","AddLessonTagsForm","AddLessonImageForm","AddLessonInstructorForm","selectedInstructor","ProfileLessonViewer","lessonType","profileLesson","toggleSchedule","showScheduleState","LessonScheduleList","schedule","closeProfileLessonView","toggleSessions","showSessionState","LessonSessionList","startCreateSession","creatingSession","cancelCreateSession","createLessonSession","toggleReviews","showReviewsState","LessonReviewList","toggleRequirements","startLessonAdd","lessonAddField","cancelLessonAdd","addLessonRequirements","showRequirementsState","LessonRequirementList","deleteLessonRequirement","toggleMaterials","addLessonMaterials","showMaterialsState","LessonMaterialList","deleteLessonMaterial","toggleImages","addLessonImage","showImagesState","LessonImageList","gallery","deleteLessonImage","toggleFiles","AddLessonFileForm","addLessonFile","showFilesState","LessonFileList","deleteLessonFile","toggleInstructors","addLessonInstructor","showInstructorsState","LessonInstructorList","deleteLessonInstructor","toggleTags","addLessonTags","showTagsState","LessonTagList","deleteLessonTag","onStartEditLessonBasic","editingLesson","cancelEditBasic","editLessonBasic","onStartEditLessonField","editingLessonField","cancelEditField","editLessonField","UserProfile","adding","deleting","isLoading","userUpdateField","showAttachment","showThisAttachmentFile","showThisAttachmentType","sidebarShow","mCol1Size","mCol2Size","messagesLoaded","finalConfirmation","socketMsg","selectedFriendRequest","userSelectedFriend","profileLessonViewer","profileLessonViewerData","profileLessonType","setState","args","addUserField","startCreateMessage","event","contactEmail","formGridEmail","formGridPassword","formGridName","formGridUsername","formGridDob","contactPhone","formGridPhone","contactPhone2","formGridPhone2","formGridBio","trim","requestBody","query","fetch","method","headers","Authorization","then","res","Error","json","resData","updatedUser","data","updateUserBasic","responseAlert","catch","err","field","formGridQuery","formGridFieldSelect","updateUserByField","formGridPoints","addUserPoints","addressType","formGridAddressType","addressNumber","formGridAddressNumber","addressStreet","formGridAddressStreet","addressTown","formGridAddressTown","addressCity","formGridAddressCity","addressCountry","formGridAddressCountry","addressPostalCode","formGridAddressPostalCode","addUserAddress","addressPrimary","deleteUserAddress","setUserAddressPrimary","profileImageName","formGridFilename","profileImageType","formGridFiletype","profileImagePath","formGridFilepath","addUserProfileImage","deleteUserProfileImage","socialMediaPlatform","formGridPlatform","socialMediaHandle","formGridHandle","socialMediaLink","formGridLink","addUserSocialMedia","deleteUserSocialMedia","paymentInfoDate","paymentInfoType","formGridPaymentInfoType","paymentInfoDescription","formGridDescription","paymentInfoBody","formGridBody","paymentInfoPrimary","formGridPaymentInfoPrimaryCheckbox","addUserPaymentInfo","paymentInfoValid","deleteUserPaymentInfo","formGridInterests","addUserInterests","deleteUserInterest","formGridTags","addUserTags","deleteUserTag","friendId","addUserFriend","senderId","receiverId","deleteFriendRequest","deleteUserFriend","lessonId","deleteUserCartLesson","deleteUserBookedLesson","deleteUserLikedLesson","preventDefault","orderId","deleteUserOrder","reviewId","deleteUserReview","senderName","timeString2","formGridTypeSelect","formGridSubject","formGridMessage","msgObject","sendSocketMessage","createMessage","messageId","deleteMessage","activityRequest","deleteUserActivity","modalCancelHandler","showSidebar","hideSidebar","useAlert","getLessonById","formGridTitle","CalendarDate","formGridTime","sessionLimit","formGridLimit","addLessonBooking","formGridSubtitle","formGridDuration","formGridType","formGridCategory","formGridSku","formGridPrice","formGridNotes","updateLessonBasic","updateLessonByField","sessionField","sessionQuery","updateSessionField","session2","newSession","inProgress","addLessonAttendance","getUserBookedSessionsToday","getLessonSession","formGridRating","formGridMaterials","formGridRequirements","imageName","formGridImagename","imageType","formGridImagetype","imagePath","formGridImagepath","fileName","fileType","formGridFilesize","fileSize","filePath","instructorId","socket","io","getThisUser","emit","room","on","addMessage","userOnline","errors","thisUser","sessionStorage","getItem","addUserActivity","conversationId","undefined","msg","LoadingOverlay","you","AuthPage","verifying","activeTab","userSeshStore","model","retrieveLogin","submitHandler","formBasicEmail","formBasicPassword","error","setItem","verifyUser","verificationType","formGridCode","startVerification","closeVerification","VerifyUserForm","CreateUserForm","SignupPage","success","creating","modalConfirmUserHandler","formGridRole","publicProfile","formGridPublicCheckbox","newUser","createUser","cancelSignup","authUserId","userItem","onDetail","onSelectNoDetail","children","Child","useParams","userList","onViewDetail","canReport","onReport","onSelectMessageReceiver","onFriendRequest","searchUserList","MessageUserListForm","UserDetail","onStartSendMessage","onHideUserDetail","creatingMessage","cancelMessage","sendMessage","AttachmentViewer","onCloseAttachmentView","href","attachmentFile","UserDetailViewer","SearchUserFieldBasicForm","SearchUserFieldRegexForm","UsersPage","searching","searchUsers","isSorting","detailsLoaded","userSearchField","userSearchQuery","showDetail","modalConfirmSearchBasicHandler","formBasicQuery","formBasicFieldSelect","formBasicField","getUsersByField","modalConfirmSearchRegexHandler","getUsersByFieldRegex","deleteListUser","reportUser","startSendMessage","formBasicTypeSelect","showDetailHandler","getUserById","selectUserNoDetail","hideDetailHandler","sendFriendRequest","onViewAttachment","attachment","format","closeAttachmentView","fetchUsersBasic","getAllUsers","attachmentType","Accordion","sm","Nav","Item","Link","Content","Pane","SearchUserList","lesssonItem","lessonList","puplic","searchLessonItem","searchLessonList","searchLessons","SearchLessonItem","LessonDetail","hasLiked","onHideLessonDetail","onLikeLesson","onSessionLoad","onHideSessions","sessionsLoaded","searchSession","LessonDetailViewer","CreateLessonForm","SearchLessonFieldRegexForm","SearchLessonFieldBasicForm","SearchLessonSessionForm","LessonsPage","lessonUpdateField","lessonSearchField","lessonSearchQuery","getLessonsByFieldRegex","getLessonsByField","modalConfirmSearchSessionHandler","formGridSessionDate","formGridSessionTitle","startCreateLesson","createLessonHandler","creatorId","createLesson","loadSessions","hideSessions","addCartLesson","addUserCartLesson","bookSession","addLessonSession","deleteListLesson","reportLesson","prevState","find","selectLessonNoDetail","likeLesson","addUserLikedLesson","fetchLessonsBasic","getAllLessons","LessonList","SearchLessonList","creator","PublicLessonDetail","showSchedule","hideSchedule","PublicLessonDetailViewer","SearchPublicLessonForm","PublicLessonsPage","guestId","modalConfirmPublicSearchHandler","getPublicLessonsByField","fetchLessonsPublic","getAllPublicLessons","mainNavigation","Consumer","App","sessionCookiePresent","logout2","sessionStorageAuth","seshStore","clear","userOffline","Provider","from","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a0bbd06.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    activityId: null,\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    role: null,\n    userId: null,\n    user: {},\n    users:[],\n    selectedUser: {},\n    lesson: {},\n    lessons: [],\n    selectedLesson: null,\n    selectedPerk: null,\n    selectedPromo: null,\n    selectedReview: null,\n    sender: null,\n    receiver: null,\n    userAlert: \"...\",\n    file: null,\n    fancyDate: null,\n    login: (token, activityId, role, tokenExpiration) => {},\n    logout: () => {}\n});\n","\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './alertBox.css'\n\nconst AlertBox = (props) => {\n  let alert = \"Alerts shown here\";\n\n  if (props.alert !== null) {\n    alert = '\"'+props.alert+'\"';\n  }\n\nreturn (\n  <div className=\"alertBox\">\n  <Alert variant=\"warning\">\n  <p className=\"alertBoxText\">{alert}</p>\n  </Alert>\n  </div>\n)\n\n}\n\nexport default AlertBox;\n","import React from 'react';\n\nimport \"./AttachmentViewer.css\"\n\nconst LoadingOveray = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"loadingOverlay\">\n      <h5 className=\"attachmentViewerTitle\">status : {props.status} ...</h5>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LoadingOveray;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./SidebarControl.css\"\n\nconst SidebarControl = (props) =>{\n  return (\n    <div className=\"SidebarControl\">\n      <Button className=\"sidebarButton\" variant=\"success\" onClick={props.onShowSidebar}>+</Button>\n      <Button className=\"sidebarButton\" variant=\"danger\" onClick={props.onHideSidebar}>-</Button>\n    </div>\n  )\n}\n\nexport default SidebarControl;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst verifyUserForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"email\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>email</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridCode\">\n    <Form.Label>Code</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"verification code\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default verifyUserForm;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../context/auth-context';\nimport LoadingOverlay from '../components/LoadingOverlay';\n\nimport './Sidebar.css';\n\nclass SidebarPage extends Component {\n  state = {\n    authContext: AuthContext._currentValue,\n    overlay: false,\n    overlayStatus: \"test\",\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <Container className=\"sidebarContainer\">\n      <Row className=\"sidebarRow1\">\n      <Col md={12} className=\"\">\n\n      <Card border=\"primary\" className=\"sidebarCard\">\n      <Card.Body>\n\n        <NavLink to=\"/userProfile\">My Profile (User)</NavLink>\n\n        <Card.Title className=\"cardTitle\">You</Card.Title>\n        <Card.Subtitle className=\"mb-2\">ID:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user._id}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Name:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.name}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">Role:</Card.Subtitle>\n        <Card.Text>\n          {this.context.user.role}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n      <Card border=\"secondary\" className=\"sidebarCard\">\n      <Card.Body>\n        <Card.Title className=\"cardTitle\">Selection</Card.Title>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedUser._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedUser.username}\n        </Card.Text>\n        <Card.Subtitle className=\"mb-2\">User:</Card.Subtitle>\n        <Card.Text>\n          {this.context.selectedLesson._id}\n        </Card.Text>\n        <Card.Text>\n          {this.context.selectedLesson.title}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n      </Col>\n      </Row>\n      </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SidebarPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userAddressItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        number: {props.number}\n      </Card.Text>\n      <Card.Text>\n        street: {props.street}\n      </Card.Text>\n      <Card.Text>\n        town: {props.town}\n      </Card.Text>\n      <Card.Text>\n        city: {props.city}\n      </Card.Text>\n      <Card.Text>\n        country: {props.country}\n      </Card.Text>\n      <Card.Text>\n        postalCode: {props.postalCode}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.address)}>\n            Delete\n          </Button>\n        )}\n\n\n          <Button variant=\"danger\" onClick={props.makeAddressPrimary.bind(this, props.address)}>\n            Make Primary\n          </Button>\n\n\n        { props.orderForm === true && (\n          <Button variant=\"danger\" value={JSON.stringify(props.address)} onClick={props.addToOrder.bind('x')}>\n            Add to order\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userAddressItem;\n","import React from 'react';\n\nimport UserAddressItem from './UserItem/UserAddressItem';\nimport './UserList.css';\n\nconst userAddressList = props => {\n  const userAddresses = props.userAddresses.map(address => {\n\n    return (\n      <UserAddressItem\n        key={address.path}\n        authId={props.authId}\n        type={address.type}\n        number={address.number}\n        street={address.street}\n        town={address.town}\n        city={address.city}\n        country={address.country}\n        postalCode={address.postalCode}\n        primary={address.primary}\n        address={address}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        orderForm={props.orderForm}\n        addToOrder={props.addToOrder}\n        makeAddressPrimary={props.makeAddressPrimary}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userAddresses}</ul>;\n};\n\nexport default userAddressList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userProfileImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li>\n          <Image src={props.path} className=\"profileImageImg\" fluid />\n\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n        </ul>\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.profileImage)}>\n            Delete\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userProfileImageItem;\n","import React from 'react';\n\nimport UserProfileImageItem from './UserItem/UserProfileImageItem';\nimport './UserList.css';\n\nconst userProfileImageList = props => {\n  const userProfileImages = props.userProfileImages.map(profileImage => {\n\n    return (\n      <UserProfileImageItem\n        key={profileImage.path}\n        authId={props.authId}\n        name={profileImage.name}\n        type={profileImage.type}\n        path={profileImage.path}\n        profileImage={profileImage}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userProfileImages}</ul>;\n};\n\nexport default userProfileImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userSocialMediaItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.platform}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.handle}\n          </p>\n          </li>\n          <li className=\"cardLi\">\n          <p className=\"userItemText\">\n          {props.link}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.socialMediaAccount)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userSocialMediaItem;\n","import React from 'react';\n\nimport UserSocialMediaItem from './UserItem/UserSocialMediaItem';\nimport './UserList.css';\n\nconst userSocialMediaList = props => {\n  const userSocialMedia = props.userSocialMedia.map(socialMediaAccount => {\n\n    return (\n      <UserSocialMediaItem\n        key={socialMediaAccount.path}\n        authId={props.authId}\n        platform={socialMediaAccount.platform}\n        handle={socialMediaAccount.handle}\n        link={socialMediaAccount.link}\n        socialMediaAccount={socialMediaAccount}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userSocialMedia}</ul>;\n};\n\nexport default userSocialMediaList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> createOrder:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.perk)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPerkItem from './UserItem/UserPerkItem';\nimport './UserList.css';\n\nconst userPerkList = props => {\n  const userPerks = props.userPerks.map(perk => {\n\n    let perkDate = 0;\n    if (perk.date !== null && perk.date !== \"\") {\n      perkDate = new Date (perk.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n\n    return (\n      <UserPerkItem\n        key={perk.description}\n        authId={props.authId}\n        name={perk.name}\n        date={perkDate}\n        description={perk.description}\n        code={perk.code}\n        imageLink={perk.imageLink}\n        perk={perk}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPerks}</ul>;\n};\n\nexport default userPerkList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPerkItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail1 users__list-item_detail\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <Image src={props.imageLink} className=\"profileImageImg\" fluid />\n\n          <p className=\"userItemHeading\"> start/end Dates:</p>\n          <p className=\"userItemText\">\n          {props.startDate}\n          </p>\n          <p className=\"userItemText\">\n          {props.endDate}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> name:</p>\n          <p className=\"userItemText\">\n          {props.name}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> description:</p>\n          <p className=\"userItemText\">\n          {props.description}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> code:</p>\n          <p className=\"userItemText\">\n          {props.code}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.promo)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPerkItem;\n","import React from 'react';\n\nimport UserPromoItem from './UserItem/UserPromoItem';\nimport './UserList.css';\n\nconst userPromoList = props => {\n  const userPromos = props.userPromos.map(promo => {\n    let promoStartDate = 0;\n    if (promo.startDate !== null && promo.startDate !== \"\") {\n      promoStartDate = new Date (promo.startDate.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n    let promoEndDate = 0;\n    if (promo.endDate !== null && promo.endDate !== \"\") {\n      promoEndDate = new Date (promo.endDate.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    }\n\n    return (\n      <UserPromoItem\n        key={promo._id}\n        authId={props.authId}\n        _id={promo._id}\n        name={promo.name}\n        type={promo.type}\n        valid={promo.valid}\n        startDate={promoStartDate}\n        endDate={promoEndDate}\n        description={promo.description}\n        code={promo.code}\n        imageLink={promo.imageLink}\n        promo={promo}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userPromos}</ul>;\n};\n\nexport default userPromoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userInterestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail2 users__list-item_detail\">\n    <div className=\"tag_card_body\">\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.interest}\n        </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.interest)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userInterestItem;\n","import React from 'react';\n\nimport UserInterestItem from './UserItem/UserInterestItem';\nimport './UserList.css';\n\nconst userInterestList = props => {\n  const userInterests = props.userInterests.map(interest => {\n\n    return (\n      <UserInterestItem\n        key={interest}\n        authId={props.authId}\n        interest={interest}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userInterests}</ul>;\n};\n\nexport default userInterestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Text>\n          {props.tag}\n        </Card.Text>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userTagItem;\n","import React from 'react';\n\nimport UserTagItem from './UserItem/UserTagItem';\nimport './UserList.css';\n\nconst userTagList = props => {\n  const userTags = props.userTags.map(tag => {\n\n    return (\n      <UserTagItem\n        key={tag}\n        authId={props.authId}\n        tag={tag}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userTags}</ul>;\n};\n\nexport default userTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.username}</Card.Title>\n      {props.profileImages.length !== 0 && (\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      )}\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      <Card.Text>\n        phone: {props.phone}\n      </Card.Text>\n      <Card.Text>\n        email: {props.email}\n      </Card.Text>\n      <Card.Text>\n        loggedIn: {props.loggedIn.toString()}\n      </Card.Text>\n      <Card.Text>\n        online: {props.online.toString()}\n      </Card.Text>\n      {props.socialMedia.length !== 0 && (\n      <Card.Text>\n        SocialMedia: {props.socialMedia[0].platform} - {props.socialMedia[0].handle}\n      </Card.Text>\n      )}\n\n        <Button variant=\"primary\" onClick={props.onSelect.bind(this, props.friend)}>\n          Select\n        </Button>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.friend)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendItem;\n","import React from 'react';\n\nimport UserFriendItem from './UserItem/UserFriendItem';\nimport './UserList.css';\n\nconst userFriendList = props => {\n\n  const userFriends = props.userFriends.map(friend=> {\n    return (\n      <UserFriendItem\n        key={friend._id}\n        friend={friend}\n        _id={friend._id}\n        name={friend.name}\n        username={friend.username}\n        phone={friend.contact.phone}\n        email={friend.contact.email}\n        loggedIn={friend.loggedIn}\n        online={friend.clientConnected}\n        profileImages={friend.profileImages}\n        socialMedia={friend.socialMedia}\n        onSelect={props.onSelect}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriends}</ul>;\n};\n\nexport default userFriendList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userFriendRequestItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Sender: {props.sender.username}\n      </Card.Text>\n      <Card.Text>\n        Receiver: {props.receiver.username}\n      </Card.Text>\n\n        {props.received && (\n          <Button variant=\"primary\" onClick={props.onAccept.bind(this, props.friendRequest)}>\n          Accept\n          </Button>\n        )}\n        {props.received && (\n          <Button variant=\"danger\" onClick={props.onReject.bind(this, props.friendRequest)}>\n            Reject\n          </Button>\n        )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userFriendRequestItem;\n","import React from 'react';\n\nimport UserFriendRequestItem from './UserItem/UserFriendRequestItem';\nimport './UserList.css';\n\nconst userFriendRequestList = props => {\n\n  const userFriendRequests = props.userFriendRequests.map(friendRequest=> {\n    const requestDate = new Date (friendRequest.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    // console.log(friendRequest.date,friendRequest.sender,friendRequest.receiver);\n    return (\n      <UserFriendRequestItem\n        key={friendRequest.sender._id}\n        friendRequest={friendRequest}\n        date={requestDate}\n        sender={friendRequest.sender}\n        receiver={friendRequest.receiver}\n        onAccept={props.onAccept}\n        onReject={props.onReject}\n        received={props.received}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userFriendRequests}</ul>;\n};\n\nexport default userFriendRequestList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userCartItemItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateAdded: {props.dateAdded}\n      </Card.Text>\n      <Card.Text>\n        sessionDate: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        sessionTitle: {props.sessionTitle}\n      </Card.Text>\n      <Card.Text>\n        Lesson ID: {props.lesson._id}\n      </Card.Text>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.cartItem)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userCartItemItem;\n","import React from 'react';\n\nimport UserCartItemItem from './UserItem/UserCartItemItem';\nimport './UserList.css';\n\nconst UserCartItemList = props => {\n\n  const cart = props.userCartItems.map(cartItem => {\n    // console.log(cartItem);\n    const cartItemDateAdded = new Date (cartItem.dateAdded.substr(0,10)*1000).toISOString().slice(0,10);;\n    const cartItemSessionDate = new Date (cartItem.sessionDate.substr(0,10)*1000).toISOString().slice(0,10);;\n\n    return (\n      <UserCartItemItem\n        key={cartItem.lesson}\n        cartItem={cartItem}\n        authId={props.authId}\n        lesson={cartItem.lesson}\n        dateAdded={cartItemDateAdded}\n        sessionDate={cartItemSessionDate}\n        sessionTitle={cartItem.sessionTitle}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{cart}</ul>;\n};\n\nexport default UserCartItemList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userBookedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        dateBooked: {props.dateBooked}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n      <Card.Text>\n        Session:\n      </Card.Text>\n      <Card.Text>\n        Title: {props.sessionTitle}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.sessionDate}\n      </Card.Text>\n      <Card.Text>\n        Time: {props.sessionTime}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'booked', lesson: props.bookedLesson})}>\n        View Details\n      </Button>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.bookedLesson)}>\n          Delete\n        </Button>\n\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userBookedLessonItem;\n","import React from 'react';\n\nimport UserBookedLessonItem from './UserItem/UserBookedLessonItem';\nimport './UserList.css';\n\nconst userBookedLessonList = props => {\n\n  const bookedLessons = props.userBookedLessons.map(bookedLesson => {\n\n    const dateBooked = new Date (bookedLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    const sessionDate = new Date (bookedLesson.session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <UserBookedLessonItem\n        key={bookedLesson.ref}\n        bookedLesson={bookedLesson}\n        dateBooked={dateBooked}\n        sessionDate={sessionDate}\n        sessionTime={bookedLesson.session.time}\n        sessionTitle={bookedLesson.session.title}\n        lesson={bookedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{bookedLessons}</ul>;\n};\n\nexport default userBookedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userLikedLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'liked', lesson: props.likedLesson})}>\n        View Details\n      </Button>\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.likedLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userLikedLessonItem;\n","import React from 'react';\n\nimport UserLikedLessonItem from './UserItem/UserLikedLessonItem';\nimport './UserList.css';\n\nconst userLikedLessonList = props => {\n  // console.log(props.userLikedLessons)\n  const likedLessons = props.userLikedLessons.map(likedLesson => {\n    return (\n      <UserLikedLessonItem\n        key={likedLesson}\n        likedLesson={likedLesson}\n        _id={likedLesson._id}\n        title={likedLesson.title}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{likedLessons}</ul>;\n};\n\nexport default userLikedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function userAttendedLessonItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'attended', lesson: props.attendedLesson})}>\n        View Details\n      </Button>\n      {props.hasReviewed !== true && (<Button variant=\"primary\" onClick={props.startCreateReview.bind(this, props.attendedLesson)}>\n        Review\n      </Button>)}\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.attendedLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\n}\n","import React from 'react';\n\nimport UserAttendedLessonItem from './UserItem/UserAttendedLessonItem';\nimport './UserList.css';\n\nconst userAttendedLessonList = props => {\n\n  const attendedLessons = props.userAttendedLessons.map(attendedLesson => {\n    // console.log(attendedLesson.ref._id);\n    // console.log(props.reviewedLessonIds);\n    // console.log(props.reviewedLessonIds.includes(attendedLesson.ref._id.toString()));\n    const hasReviewed = props.reviewedLessonIds.includes(attendedLesson.ref._id.toString());\n    const attendedLessonDate = new Date (attendedLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <UserAttendedLessonItem\n        key={attendedLesson.ref}\n        attendedLesson={attendedLesson}\n        date={attendedLessonDate}\n        lesson={attendedLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        hasReviewed={hasReviewed}\n        viewLessonDetails={props.viewLessonDetails}\n        startCreateReview={props.startCreateReview}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attendedLessons}</ul>;\n};\n\nexport default userAttendedLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userTaughtLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.viewLessonDetails.bind(this, {type: 'taught', lesson: props.taughtLesson})}>\n        View Details\n      </Button>\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.taughtLesson)}>\n          Delete\n        </Button>\n      )}\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userTaughtLessonItem;\n","import React from 'react';\n\nimport UserTaughtLessonItem from './UserItem/UserTaughtLessonItem';\nimport './UserList.css';\n\nconst userTaughtLessonList = props => {\n\n  const taughtLessons = props.userTaughtLessons.map(taughtLesson => {\n    const taughtLessonDate = new Date (taughtLesson.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    // console.log(taughtLesson.ref);\n    return (\n      <UserTaughtLessonItem\n        key={taughtLesson.ref}\n        taughtLesson={taughtLesson}\n        date={taughtLessonDate}\n        lesson={taughtLesson.ref}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n        viewLessonDetails={props.viewLessonDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{taughtLessons}</ul>;\n};\n\nexport default userTaughtLessonList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\n\nimport './UserItem.css';\n\nconst userPaymentInfoItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail1\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        description: {props.description}\n      </Card.Text>\n      <Card.Text>\n        body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        primary: {props.primary.toString()}\n      </Card.Text>\n      <Card.Text>\n        valid: {props.valid.toString()}\n      </Card.Text>\n\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.paymentInfoItem)}>\n          Delete\n        </Button>\n      )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userPaymentInfoItem;\n","import React from 'react';\n\nimport UserPaymentInfoItem from './UserItem/UserPaymentInfoItem';\nimport './UserList.css';\n\nconst paymentInfoList = props => {\n\n  const paymentInfo = props.userPaymentInfo.map(paymentInfoItem => {\n    const paymentInfoItemDate = new Date (paymentInfoItem.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    // console.log(paymentInfoItemDate);\n    return (\n      <UserPaymentInfoItem\n        key={paymentInfoItem.description}\n        paymentInfoItem={paymentInfoItem}\n        date={paymentInfoItemDate}\n        type={paymentInfoItem.type}\n        description={paymentInfoItem.description}\n        body={paymentInfoItem.body}\n        valid={paymentInfoItem.valid}\n        primary={paymentInfoItem.primary}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{paymentInfo}</ul>;\n};\n\nexport default paymentInfoList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userOrderItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        total: {props.totals.c}\n      </Card.Text>\n      \n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.order)}>\n          Delete\n        </Button>\n      )}\n      \n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userOrderItem;\n","import React from 'react';\n\nimport UserOrderItem from './UserItem/UserOrderItem';\nimport './UserList.css';\n\nconst userOrderList = props => {\n\n  const userOrders = props.userOrders.map(order => {\n    // console.log(order.date);\n    const orderDate = new Date (order.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    // console.log(order.totals);\n    return (\n      <UserOrderItem\n        key={order._id}\n        order={order}\n        _id={order._id}\n        date={orderDate}\n        time={order.time}\n        type={order.type}\n        buyer={order.buyer}\n        receiver={order.receiver}\n        lessons={order.lessons}\n        totals={order.totals}\n        tax={order.tax}\n        description={order.description}\n        notes={order.notes}\n        payment={order.payment}\n        shipping={order.shipping}\n        billingAddress={order.billingAddress}\n        shippingAddress={order.shippingAddress}\n        status={order.status}\n        feedback={order.feedback}\n        authId={props.authId}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userOrders}</ul>;\n};\n\nexport default userOrderList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userReviewItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n        Lesson:\n      </Card.Text>\n      <Card.Text>\n        ID: {props.lesson._id}\n      </Card.Text>\n      <Card.Text>\n        Title: {props.lesson.title}\n      </Card.Text>\n      <Card.Text>\n        Date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Body: {props.body}\n      </Card.Text>\n      <Card.Text>\n        Rating: {props.rating}\n      </Card.Text>\n\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userReviewItem;\n","import React from 'react';\n\nimport UserReviewItem from './UserItem/UserReviewItem';\nimport './UserList.css';\n\nconst userReviewList = props => {\n\n  const userReviews = props.userReviews.map(review => {\n    const reviewDate = new Date (review.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    return (\n      <UserReviewItem\n        key={review._id}\n        authId={props.authId}\n        _id={review._id}\n        date={reviewDate}\n        type={review.type}\n        body={review.body}\n        rating={review.rating}\n        review={review}\n        lesson={review.lesson}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{userReviews}</ul>;\n};\n\nexport default userReviewList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\n\nimport './UserItem.css';\n\nconst userMessgeItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail2\">\n    <div>\n\n    <Card className=\"card\">\n      <Card.Body>\n        <Card.Title>\n          Message\n        </Card.Title>\n\n        <ul className=\"cardUl\">\n          <li className=\"cardLi\">\n          <p className=\"userItemHeading\"> date:</p>\n          <p className=\"userItemText\">\n          {props.date}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> sender:</p>\n          <p className=\"userItemText\">\n          {props.sender.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> receiver:</p>\n          <p className=\"userItemText\">\n          {props.receiver.username}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> time:</p>\n          <p className=\"userItemText\">\n          {props.time}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> type:</p>\n          <p className=\"userItemText\">\n          {props.type}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> subject:</p>\n          <p className=\"userItemText\">\n          {props.subject}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> message:</p>\n          <p className=\"userItemText\">\n          {props.messageMessage}\n          </p>\n          </li>\n          <li>\n          <p className=\"userItemHeading\"> read:</p>\n          <p className=\"userItemText\">\n          {props.read.toString()}\n          </p>\n          </li>\n        </ul>\n\n\n        { props.canDelete === true && (\n          <Button variant=\"danger\" onClick={props.onDelete.bind(this, props._id)}>\n            Delete\n          </Button>\n        )}\n\n      </Card.Body>\n    </Card>\n    </div>\n\n  </li>\n);\n\nexport default userMessgeItem;\n","import React from 'react';\n\nimport UserMessageItem from './UserItem/UserMessageItem';\nimport './UserList.css';\n\nconst userMessageList = props => {\n  const userMessages = props.userMessages.map(message => {\n    const messageDate = new Date (message.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n      // console.log('msg',props.authId,message.sender._id,message.receiver._id);\n    return (\n      <UserMessageItem\n        key={message.path}\n        authId={props.authId}\n        _id={message._id}\n        date={messageDate}\n        time={message.time}\n        type={message.type}\n        subject={message.subject}\n        messageMessage={message.message}\n        sender={message.sender}\n        receiver={message.receiver}\n        read={message.read}\n        message={message}\n        onDelete={props.onDelete}\n        canDelete={props.canDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_detail\">{userMessages}</ul>;\n};\n\nexport default userMessageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst userActivityItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        date: {props.activityDate}\n      </Card.Text>\n      <Card.Text>\n        Request: {props.request}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default userActivityItem;\n","import React from 'react';\n\nimport UserActivityItem from './UserItem/UserActivityItem';\nimport './UserList.css';\n\nconst userActivityList = props => {\n\n  const activity = props.userActivity.map(activity => {\n    const activityDate = new Date (activity.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    return (\n      <UserActivityItem\n        key={activity.request}\n        activity={activity}\n        date={activityDate}\n        request={activity.request}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{activity}</ul>;\n};\n\nexport default userActivityList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport './CreateUserForm.css';\n\nconst UpdateUserBasicForm = (props) => {\n\n  const {...user} = props.user;\n  const [dob, setDob] = useState(new Date());\n  const prevDob = new Date(user.dob.substr(0,9)*1000).toLocaleDateString().slice(0,10)\n\n  const handleChangeDob = date => {\n    setDob(date);\n    console.log(`Dob ${dob}`);\n   }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder={user.contact.email}/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder={user.password}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.name}/>\n</Form.Group>\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control type=\"text\" placeholder={user.role}/>\n  // </Form.Group>\n}\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder={user.username} />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder={user.contact.phone2}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B: {prevDob}</Form.Label>\n  <Form.Control type=\"date\" placeholder={user.dob}/>\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={user.bio}/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateUserFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>contact.email</option>\n    <option>password</option>\n    <option>name</option>\n    <option>username</option>\n    <option>dob</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>bio</option>\n    <option>points</option>\n    <option>verification.type</option>\n    <option>verification.verified</option>\n    <option>verification.code</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateUserFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserAddressForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserAddressForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserProfileImageForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilename\">\n    <Form.Label>Filename</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filename\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFiletype\">\n    <Form.Label>Filetype</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridFilepath\">\n    <Form.Label>Link Address</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"link address\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserProfileImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserSocialMediForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPlatform\">\n    <Form.Label>Platform</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Platform\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridHandle\">\n    <Form.Label>Handle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Handle\"/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridLink\">\n    <Form.Label>Link</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Link\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserSocialMediForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserInterestsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridInterests\">\n    <Form.Label>Interests</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"interest, interest, interests\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserInterestsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserTagsForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Tags</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"12\" placeholder=\"tag, tag, tags\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserTagsForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst AddUserPaymentInfoForm = (props) => {\n\n  const [payInfoDate, setPayInfoDate] = useState(new Date());\n  const handleChangePayInfoDate = date => {\n    setPayInfoDate(date);\n    console.log(`PayInfoDate ${payInfoDate}`);\n   }\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n\n  <Form.Group as={Col} controlId=\"\">\n    <Form.Label>Date</Form.Label>\n    <DatePicker className=\"\" id=\"paymentInfoDate\"\n      selected={payInfoDate}\n      onChange={handleChangePayInfoDate}\n    />\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoType\">\n    <Form.Label>Type</Form.Label>\n    <Form.Control as=\"select\">\n    <option>type a</option>\n    <option>type 2</option>\n    </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridDescription\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Description\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridBody\">\n    <Form.Label>Body</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Body\"/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridPaymentInfoPrimaryCheckbox\">\n    <Form.Label>Primary</Form.Label>\n    <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPaymentInfoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPointsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridPoints\">\n    <Form.Label>Points</Form.Label>\n    <Form.Control type=\"number\" placeholder=\"point amount\"/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPointsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPerkForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Perk Id: {props.selectedPerk._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPerkForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserPromoForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Promo Id: {props.selectedPromo._id} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserPromoForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddUserFriendForm = (props) => {\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridTags\">\n    <Form.Label>Add Friend Id: {props.requestingFriendId} to this user?</Form.Label>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.canCancelProfile && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddUserFriendForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateMessageForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Message Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridSubject\">\n  <Form.Label>Subject</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Subject\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridReceiver\">\n  <Form.Label>Receiver: {props.receiver.username}</Form.Label>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridMessage\">\n  <Form.Label>Message</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Message\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateMessageForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nimport UserAddressList from '../../Users/UserList/UserAddressList';\n\nconst CreateOrderForm = (props) => {\n  const {...user} = props.user;\n  const userCartLessonSkus = user.cart.map(x => x.lesson.sku)\n\n    const addressTypes = user.addresses.map(address => console.log(address.type));\n    const billingAddresses = user.addresses.filter(address => address.type === 'Billing');\n    const shippingAddresses = user.addresses.filter(address => address.type === 'Shipping')\n    const primaryShippingAddresses = shippingAddresses.filter(address => address.primary === true)\n    const primaryBillingAddresses = billingAddresses.filter(address => address.primary === true)\n    const primaryShippingAddress = primaryShippingAddresses[0];\n    const primaryBillingAddress = primaryBillingAddresses[0];\n    console.log(`\n        addressTypes: ${addressTypes},\n        billingAddresses: ${billingAddresses.length}\n        shippingAddresses: ${shippingAddresses.length},\n        primaryShippingAddresses: ${primaryShippingAddresses.length},\n        primaryBillingAddresses: ${primaryBillingAddresses.length},\n      `);\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTotalA\">\n  <Form.Label>TotalA</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" placeholder=\"Enter TotalA\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTotalB\">\n  <Form.Label>TotalB</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" placeholder=\"Enter TotalB\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTaxDescription\">\n  <Form.Label>TaxDescription</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter TaxDescription\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridTaxAmount\">\n  <Form.Label>TaxAmount</Form.Label>\n  <Form.Control type=\"number\"step=\"0.01\" placeholder=\"Enter TaxAmount\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Description\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPayment\">\n  <Form.Label>Payment</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Payment\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridShipping\">\n  <Form.Label>Shipping</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Shipping\"/>\n</Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressNumber\">\n    <Form.Label>BillingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryBillingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressStreet\">\n    <Form.Label>BillingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressTown\">\n    <Form.Label>BillingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCity\">\n    <Form.Label>BillingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressCountry\">\n    <Form.Label>BillingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridBillingAddressPostalCode\">\n    <Form.Label>BillingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryBillingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressNumber\">\n    <Form.Label>ShippingAddressNumber</Form.Label>\n    <Form.Control type=\"number\"  value={primaryShippingAddress.number}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressStreet\">\n    <Form.Label>ShippingAddressStreet</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.street}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressTown\">\n    <Form.Label>ShippingAddressTown</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.town}/>\n  </Form.Group>\n  </Form.Row>\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCity\">\n    <Form.Label>ShippingAddressCity</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.city}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressCountry\">\n    <Form.Label>ShippingAddressCountry</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.country}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridShippingAddressPostalCode\">\n    <Form.Label>ShippingAddressPostalCode</Form.Label>\n    <Form.Control type=\"text\"  value={primaryShippingAddress.postalCode}/>\n  </Form.Group>\n  </Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateOrderForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateReviewForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTypeSelect\">\n<Form.Label>Type</Form.Label>\n<Form.Control as=\"select\">\n  <option>type 1</option>\n  <option>type 2</option>\n  <option>type 3</option>\n</Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridTitle\">\n  <Form.Label>Title</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Title\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBody\">\n  <Form.Label>Body</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"Body\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridRating\">\n  <Form.Label>Rating</Form.Label>\n  <Form.Control type=\"number\" max=\"5\" placeholder=\"Rating\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateReviewForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst sessionBookedItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n      {props.addSessionAttendance && props.isInstructor === true && props.userAttended === false && (\n        <Button variant=\"primary\" onClick={props.addSessionAttendance.bind(this, props.attendance)}>\n          Add Attendance\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default sessionBookedItem;\n","import React from 'react';\n\nimport SessionBookedItem from './LessonItem/SessionBookedItem';\nimport './UserList.css';\n\nconst sessionBookedList = props => {\n\n  const booked = props.booked.map(user => {\n\n    let userAttended = false;\n    const userAttended2 = props.attended.filter(x => x._id === user._id);\n    if (userAttended2.length === 0) {\n      userAttended = false;\n    }\n    if (userAttended2.length !== 0) {\n      userAttended = true;\n    }\n    // console.log(userAttended2);\n    const attendance = {\n      user: user,\n      sessionDate: props.session.date,\n      sessionTitle: props.session.title,\n    };\n    return (\n      <SessionBookedItem\n        key={user._id}\n        attendance={attendance}\n        user={user}\n        _id={user._id}\n        username={user.username}\n        isInstructor={props.isInstructor}\n        userAttended={userAttended}\n        addSessionAttendance={props.addSessionAttendance}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{booked}</ul>;\n};\n\nexport default sessionBookedList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst sessionAttendedItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        username: {props.username}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default sessionAttendedItem;\n","import React from 'react';\n\nimport SessionAttendedItem from './LessonItem/SessionAttendedItem';\nimport './UserList.css';\n\nconst sessionAttendedList = props => {\n\n  const attended = props.attended.map(user => {\n    return (\n      <SessionAttendedItem\n        key={user._id}\n        user={user}\n        _id={user._id}\n        username={user.username}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{attended}</ul>;\n};\n\nexport default sessionAttendedList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from '../SessionBookedList';\nimport SessionAttendedList from '../SessionAttendedList';\n\nimport './UserItem.css';\n\nexport default function meetingSessionItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        full: {props.full}\n      </Card.Text>\n      <Card.Text>\n        limit: {props.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {props.amount}\n      </Card.Text>\n      <Card.Text>\n        url: {props.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {props.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {props.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n    <Button variant=\"primary\" onClick={props.viewSessionDetails.bind(this, props.session)}>\n      Details\n    </Button>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport MeetingSessionItem from './LessonItem/MeetingSessionItem';\nimport './UserList.css';\n\nconst meetingSessionList = props => {\n\n  const sessions = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n    return (\n      <MeetingSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        title={session.title}\n        date={sessionDate}\n        time={session.time}\n        full={session.full}\n        limit={session.limit}\n        amount={session.amount}\n        url={session.url}\n        bookedAmount={session.bookedAmount}\n        attendedAmount={session.attendedAmount}\n        viewSessionDetails={props.viewSessionDetails}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{sessions}</ul>;\n};\n\nexport default meetingSessionList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateSessionFieldForm = (props) => {\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n{\n//   <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridSessionTitle\">\n//   <Form.Label>SessionTitle</Form.Label>\n//   <Form.Control type=\"text\" placeholder='session title' />\n// </Form.Group>\n// <Form.Group as={Col} controlId=\"formGridQuery\">\n//   <Form.Label>Query</Form.Label>\n//   <Form.Control type=\"text\" placeholder='query' />\n// </Form.Group>\n// </Form.Row>\n\n}\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n    <Form.Label>Field: </Form.Label>\n    <Form.Control as=\"select\">\n    <option>url</option>\n    <option>time</option>\n    <option>limit</option>\n    </Form.Control>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query</Form.Label>\n    <Form.Control type=\"text\" placeholder='query' />\n  </Form.Group>\n</Form.Row>\n\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Edit\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateSessionFieldForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from './Lessons/LessonList/SessionBookedList';\nimport SessionAttendedList from './Lessons/LessonList/SessionAttendedList';\nimport UpdateSessionFieldForm from './Forms/lesson/UpdateSessionFieldForm';\n\nimport \"./AttachmentViewer.css\"\n\nconst SessionDetailViewer = (props) =>{\n  const {...session} = props.session\n  // console.log(\"beep\",session, session.booked,props.sessionBookedState,session.attended);\n  const sessionDate = new Date (session.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n  let isInstructor = false;\n  if ( session.lessonInstructors.includes(props.authId) === true) {\n    isInstructor = true\n  }\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <p>SessionDetailViewer</p>\n\n    <Card>\n    <Card.Body>\n    <Button variant=\"primary\" onClick={props.hideSessionDetails}>\n      Hide\n    </Button>\n\n      <Card.Title>{session.title}</Card.Title>\n      <Card.Text>\n        isInstructor: {isInstructor.toString()}\n      </Card.Text>\n      <Card.Text>\n        lesson: {session.lessonTitle}\n      </Card.Text>\n      <Card.Text>\n        date: {sessionDate}\n      </Card.Text>\n      <Card.Text>\n        time: {session.time}\n      </Card.Text>\n      <Card.Text>\n        limit: {session.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {session.amount}\n      </Card.Text>\n      <Card.Text>\n        full: {session.full}\n      </Card.Text>\n      <Card.Text>\n        url: {session.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {session.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {session.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n\n\n    </Card>\n\n\n    <Button variant=\"primary\" onClick={props.showSessionBooked}>\n      Show Booked\n    </Button>\n    <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n      Hide Booked\n    </Button>\n    <Button variant=\"primary\" onClick={props.showSessionAttended}>\n      Show Attended\n    </Button>\n    <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n      Hide Attended\n    </Button>\n\n    {props.sessionBookedState === true && (\n      <SessionBookedList\n      session={props.session}\n      isInstructor={isInstructor}\n      booked={session.booked}\n      attended={session.attended}\n      addSessionAttendance={props.addSessionAttendance}\n    />)}\n    {props.sessionAttendedState === true && (\n      <SessionAttendedList\n      attended={session.attended}\n    />)}\n\n\n\n    {props.editSessionField && (\n      <Button variant=\"primary\" onClick={props.startEditSessionField.bind(this, props.session)}>\n          Edit\n        </Button>\n      )}\n    {props.editingSessionField === true && (\n      <UpdateSessionFieldForm\n        authId={props.authId}\n        session={props.session}\n        onConfirm={props.editSessionField}\n        onCancel={props.cancelEditSessionField}\n      />\n    )}\n    {\n      // <p>{props.authId}</p>\n\n    // {props.editSessionField && (\n    //   <Button variant=\"primary\" onClick={props.editSessionField.bind(this, props.session)}>\n    //       Edit\n    //     </Button>\n    //   )}\n    // {props.editingSessionField === true && (\n    //   <UpdateSessionFieldForm\n    //     authId={props.authId}\n    //     session={props.session}\n    //     onConfirm={props.editSessionField}\n    //     onCancel={props.cancelEditSessionField}\n    //   />\n    // )}\n\n    // <Button variant=\"primary\" onClick={props.showSessionBooked}>\n    //   Show Booked\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n    //   Hide Booked\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.showSessionAttended}>\n    //   Show Attended\n    // </Button>\n    // <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n    //   Hide Attended\n    // </Button>\n    //\n    // {props.sessionBookedState === true && (\n    //   <SessionBookedList\n    //   session={props.session}\n    //   isInstructor={props.isInstructor}\n    //   booked={props.booked}\n    //   attended={props.attended}\n    //   addSessionAttendance={props.addSessionAttendance}\n    // />)}\n    // {props.sessionAttendedState === true && (\n    //   <SessionAttendedList\n    //   attended={props.attended}\n    // />)}\n    //\n\n\n    }\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default SessionDetailViewer;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport UserAddressList from './UserList/UserAddressList';\nimport UserProfileImageList from './UserList/UserProfileImageList';\nimport UserSocialMediaList from './UserList/UserSocialMediaList';\n\nimport UserPerkList from './UserList/UserPerkList';\nimport UserPromoList from './UserList/UserPromoList';\n\nimport UserInterestList from './UserList/UserInterestList';\nimport UserTagList from './UserList/UserTagList';\n\nimport UserFriendList from './UserList/UserFriendList';\nimport UserFriendRequestList from './UserList/UserFriendRequestList';\nimport UserCartItemList from './UserList/UserCartItemList';\nimport UserBookedLessonList from './UserList/UserBookedLessonList';\nimport UserLikedLessonList from './UserList/UserLikedLessonList';\nimport UserAttendedLessonList from './UserList/UserAttendedLessonList';\nimport UserTaughtLessonList from './UserList/UserTaughtLessonList';\nimport UserPaymentInfoList from './UserList/UserPaymentInfoList';\n\nimport UserOrderList from './UserList/UserOrderList';\nimport UserReviewList from './UserList/UserReviewList';\nimport UserMessageList from './UserList/UserMessageList';\nimport UserActivityList from './UserList/UserActivityList';\n\nimport UpdateUserBasicForm from '../Forms/user/UpdateUserBasicForm';\nimport UpdateUserFieldForm from '../Forms/user/UpdateUserFieldForm';\n\nimport AddUserAddressForm from '../Forms/user/AddUserAddressForm';\nimport AddUserProfileImageForm from '../Forms/user/AddUserProfileImageForm';\nimport AddUserSocialMediaForm from '../Forms/user/AddUserSocialMediaForm';\n\nimport AddUserInterestsForm from '../Forms/user/AddUserInterestsForm';\nimport AddUserTagsForm from '../Forms/user/AddUserTagsForm';\n\nimport AddUserPaymentInfoForm from '../Forms/user/AddUserPaymentInfoForm';\n\nimport AddUserPointsForm from '../Forms/user/AddUserPointsForm';\nimport AddUserPerkForm from '../Forms/user/AddUserPerkForm';\nimport AddUserPromoForm from '../Forms/user/AddUserPromoForm';\n\nimport AddUserFriendForm from '../Forms/user/AddUserFriendForm';\nimport CreateMessageForm from '../Forms/message/CreateMessageForm';\nimport CreateOrderForm from '../Forms/order/CreateOrderForm';\nimport CreateReviewForm from '../Forms/review/CreateReviewForm';\n\nimport MeetingSessionList from '../Lessons/LessonList/MeetingSessionList';\nimport SessionDetailViewer from '../SessionDetailViewer';\n\n\n\nimport './thisUserProfile.css';\n\nconst thisUserProfile = (props) => {\nconst {...user} = props.user;\n\nconst userAddress = user.address;\nconst userDob = new Date(user.dob.substr(0,9)*1000).toLocaleDateString().slice(0,10);\n\nlet sentRequests = [];\nlet receivedRequests = [];\nif (user.friendRequests !== []) {\n  // console.log('!!!',user._id, user.friendRequests, user.friendRequests[0].sender._id, user.friendRequests[0].receiver._id);\n  sentRequests = user.friendRequests.filter(request => request.sender._id === user._id);\n  receivedRequests = user.friendRequests.filter(request => request.receiver._id === user._id);\n}\n// console.log('sentRequests',sentRequests,'receivedRequests',receivedRequests);\nconst publicUser = user.public.toString();\n// const today = new Date().toLocaleDateString().slice(0,10);\n// const today2 = new Date(today);\n\n// console.log('today',today2,user.bookedLessons.map(x=> console.log(x.date)));\n// console.log('today',today,user.bookedLessons.filter(x=> x.date === today ));\n// get todays booked lessons, filter for sessions today, result = meeting list, to each, add get session and if isInstructor, update session componts & reqs\n\n// const bookedLessonSessions = user.bookedLessons\nlet messagesSent = [];\nlet messagesReceived = [];\nmessagesSent = user.messages.filter(x => x.sender._id === props.authId);\nmessagesReceived = user.messages.filter(x => x.receiver._id === props.authId);\nconst reviewedLessonIds = user.reviews.map(x => x.lesson._id);\n// console.log(user.reviews.map(x => x.lesson._id));\nlet hasShippingAddress = user.addresses.filter(x => x.type === 'Shipping' && x.primary === true).length === 0;\nconsole.log(user.addresses,user.addresses.filter(x => x.type === 'Shipping'),hasShippingAddress);\n\n  return (\n\n  <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\">\n    <Tab eventKey=\"\" title=\"Details:\" disabled>\n    </Tab>\n    <Tab eventKey=\"Basic\" title=\"Basic\">\n    <Card className=\"UserDetailCard\">\n    <Card.Body>\n      <Card.Title><span className=\"ul\">Your Profile Details</span></Card.Title>\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Name:</span> {user.name}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">D.O.B:</span> {userDob}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Age:</span> {user.age}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone:</span> {user.contact.phone}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Phone 2:</span> {user.contact.phone2}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Email:</span> {user.contact.email}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Points :</span> {user.points}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Row className=\"detailCardRow\">\n        <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Public :</span> {user.public.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn :</span> {user.loggedIn.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">online :</span> {user.clientConnected.toString()}\n          </Card.Text>\n\n          <Card.Text>\n            <span className=\"bold\">Verification :</span> {user.verification.type}, {user.verification.verified.toString()}\n          </Card.Text>\n        </Col>\n      </Row>\n\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdate}>Edit</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartUpdateField}>Edit 1 Field</Button>\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"points\")}>+ Points</Button>\n\n      {props.updating === true &&\n        props.userAddField === \"basic\" && (\n        <UpdateUserBasicForm\n          canCancelProfile\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditBasic}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.updating === true &&\n        props.updatingField === true && (\n        <UpdateUserFieldForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userEditField}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n      {props.userAddField === \"points\" &&\n        user.role === 'Admin' && (\n        <AddUserPointsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPoints}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n      )}\n\n    </Card.Body>\n    </Card>\n    </Tab>\n\n    <Tab eventKey=\"address\" title=\"address\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"address\")}>+ Address</Button>\n    {props.userAddField === \"address\" && (\n        <AddUserAddressForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddAddress}\n          confirmText=\"Confirm\"\n        />\n    )}\n    {user.addresses !== null &&\n      user.addresses !== [] && (\n        <UserAddressList\n          userAddresses={user.addresses}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAddress}\n          makeAddressPrimary={props.makeAddressPrimary}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"profileImages\" title=\"profileImages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"profileImage\")}>+ Image</Button>\n    {props.userAddField === \"profileImage\" && (\n        <AddUserProfileImageForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddProfileImage}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.profileImages !== null &&\n      user.profileImages !== [] && (\n        <UserProfileImageList\n          userProfileImages={user.profileImages}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteProfileImage}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"socialMedia\" title=\"socialMedia\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"socialMedia\")}>+ Social Media</Button>\n    {props.userAddField === \"socialMedia\" && (\n        <AddUserSocialMediaForm\n          user={props.user}\n          authId={props.authId}\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddSocialMedia}\n          confirmText=\"Confirm\"\n        />\n    )}\n\n    {user.socialMedia !== null &&\n      user.socialMedia !== [] && (\n        <UserSocialMediaList\n          userSocialMedia={user.socialMedia}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteSocialMedia}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"perks\" title=\"perks\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"perk\")}>+ Perk</Button>\n\n    {props.userAddField === \"perk\" &&\n    props.selectedPerk !== null && (\n        <AddUserPerkForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPerk}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          perk={props.selectedPerk}\n        />\n      )}\n\n    {user.perks !== null &&\n      user.perks !== [] && (\n        <UserPerkList\n          userPerks={user.perks}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePerk}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"promos\" title=\"promos\">\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"promo\")}>+ Promo</Button>\n\n    {props.userAddField === \"promo\" &&\n      props.selectedPromo !== null && (\n        <AddUserPromoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPromo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          promo={props.selectedPromo}\n        />\n    )}\n\n    {user.promos !== null &&\n      user.promos !== [] && (\n        <UserPromoList\n          userPromos={user.promos}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePromo}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"interests\" title=\"interests\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"interests\")}>+ Interests</Button>\n\n    {props.userAddField === \"interests\" && (\n        <AddUserInterestsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddInterests}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.interests !== null &&\n      user.interests !== [] && (\n        <UserInterestList\n          userInterests={user.interests}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteInterest}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"tags\" title=\"tags\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"tags\")}>+ Tags</Button>\n\n    {props.userAddField === \"tags\" && (\n        <AddUserTagsForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddTags}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.tags !== null &&\n      user.tags !== [] && (\n        <UserTagList\n          userTags={user.tags}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteTag}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"friends\" title=\"friends\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"friend\")}>+ Friend</Button>\n\n    {props.userAddField === \"friend\" && (\n        <AddUserFriendForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddFriend}\n          confirmText=\"Confirm\"\n          requestingFriend={props.requestingFriend}\n          user={props.user}\n        />\n      )}\n\n    {user.friends !== null &&\n      user.friends !== [] && (\n        <UserFriendList\n          userFriends={user.friends}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteFriend}\n          onSelect={props.userSelectFriend}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"friendRequests\" title=\"friendRequests\">\n\n      <Tabs defaultActiveKey=\"received\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"received\" title=\"received\">\n          <p>Received</p>\n          {user.friendRequests !== null &&\n            user.friendRequests !== [] && (\n              <UserFriendRequestList\n                received\n                userFriendRequests={receivedRequests}\n                authId={props.authId}\n                onReject={props.userRejectFriendRequest}\n                onAccept={props.userAcceptFriendRequest}\n              />\n            )}\n        </Tab>\n        <Tab eventKey=\"sent\" title=\"sent\">\n          <p>Sent</p>\n          {user.friendRequests !== null &&\n            user.friendRequests !== [] && (\n              <UserFriendRequestList\n                userFriendRequests={sentRequests}\n                authId={props.authId}\n                onReject={props.userRejectFriendRequest}\n                onAccept={props.userAcceptFriendRequest}\n              />\n            )}\n        </Tab>\n      </Tabs>\n\n    </Tab>\n\n    <Tab eventKey=\"cart\" title=\"cart\">\n\n    {user.cart !== null &&\n      user.cart !== [] &&\n      hasShippingAddress === false && (\n    <Button variant=\"primary\" onClick={props.startCartCheckout.bind(this, user.cart)}>\n      Checkout\n    </Button>\n    )}\n\n    {hasShippingAddress === true && (\n    <Button variant=\"warning\">\n      Can't Checkout...Add a shipping address 1st...and make sure it's a primary address...\n    </Button>\n    )}\n\n    {props.creatingOrder === true && (\n      <CreateOrderForm\n        user={user}\n        onCancel={props.cancelCartCheckout}\n        onConfirm={props.createOrder}\n        addAddressToOrder={props.addAddressToOrder}\n        orderBillingAddress={props.orderBillingAddress}\n        orderShippingAddress={props.orderShippingAddress}\n      />\n    )}\n\n    {user.cart !== null &&\n      user.cart !== [] && (\n        <UserCartItemList\n          userCartItems={user.cart}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteCartItem}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"likedLessons\" title=\"likedLessons\">\n\n    {user.likedLessons !== null &&\n      user.likedLessons!== [] && (\n        <UserLikedLessonList\n          userLikedLessons={user.likedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteLikedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n    <Tab eventKey=\"bookedLessons\" title=\"bookedLessons\">\n\n    {user.bookedLessons !== null &&\n      user.bookedLessons!== [] && (\n        <UserBookedLessonList\n          userBookedLessons={user.bookedLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteBookedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n    <Tab eventKey=\"attendedLessons\" title=\"attendedLessons\">\n\n    {props.creatingReview === true &&\n      props.reviewLesson !== null && (\n      <CreateReviewForm\n      authId={props.authId}\n      author={user}\n      lesson={props.reviewLesson}\n      canConfirm\n      canCancel\n      onCancel={props.cancelCreateReview}\n      onConfirm={props.createReview}\n      />\n    )}\n\n    {user.attendedLessons !== null &&\n      user.attendedLessons!== [] && (\n        <UserAttendedLessonList\n          userAttendedLessons={user.attendedLessons}\n          reviewedLessonIds={reviewedLessonIds}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteAttendedLesson}\n          viewLessonDetails={props.viewLessonDetails}\n          startCreateReview={props.startCreateReview}\n        />\n      )}\n\n    </Tab>\n\n    {user.role === \"Instructor\" || user.role === 'Admin' && (\n    <Tab eventKey=\"taughtLessons\" title=\"taughtLessons\">\n    {\n      user.taughtLessons !== null &&\n      user.taughtLessons!== [] && (\n        <UserTaughtLessonList\n          userTaughtLessons={user.taughtLessons}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteTaughtLesson}\n          viewLessonDetails={props.viewLessonDetails}\n        />\n      )}\n\n    </Tab>\n    )}\n\n    <Tab eventKey=\"paymentInfo\" title=\"paymentInfo\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartAdd.bind(this, \"paymentInfo\")}>+ PaymentInfo</Button>\n\n    {props.userAddField === \"paymentInfo\" && (\n        <AddUserPaymentInfoForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userAddPaymentInfo}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n        />\n    )}\n\n    {user.paymentInfo !== null &&\n      user.paymentInfo !== [] && (\n        <UserPaymentInfoList\n          userPaymentInfo={user.paymentInfo}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeletePaymentInfo}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"messages\" title=\"messages\">\n\n    <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.onStartCreateMessage}>+ Message</Button>\n\n    {props.messageReceiver === null && (\n      <Button variant=\"outline-warning\" size=\"lg\" className=\"confirmEditButton\" >Select someone to message</Button>\n    )}\n\n    {props.userAddField === \"message\" &&\n      props.messageReceiver !== null && (\n        <CreateMessageForm\n          canCancel\n          canConfirm\n          onCancel={props.onCancel}\n          onConfirm={props.userCreateMessage}\n          confirmText=\"Confirm\"\n          user={props.user}\n          authId={props.authId}\n          receiver={props.messageReceiver}\n        />\n      )}\n\n      <Tabs defaultActiveKey=\"received\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"received\" title=\"received\">\n          <p>Received</p>\n          {messagesReceived !== null &&\n            messagesReceived !== [] && (\n              <UserMessageList\n                userMessages={messagesReceived}\n                authId={props.authId}\n                canDelete={props.canDelete}\n                onDelete={props.userDeleteMessage}\n              />\n            )}\n        </Tab>\n        <Tab eventKey=\"sent\" title=\"sent\">\n          <p>Sent</p>\n          {messagesSent !== null &&\n            messagesSent !== [] && (\n              <UserMessageList\n                userMessages={messagesSent}\n                authId={props.authId}\n                canDelete={props.canDelete}\n                onDelete={props.userDeleteMessage}\n              />\n            )}\n        </Tab>\n      </Tabs>\n\n    </Tab>\n\n    <Tab eventKey=\"orders\" title=\"orders\">\n\n    {user.orders !== null &&\n      user.orders !== [] && (\n        <UserOrderList\n          userOrders={user.orders}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteOrder}\n        />\n      ) }\n\n    </Tab>\n\n    <Tab eventKey=\"reviews\" title=\"reviews\">\n\n    {user.reviews !== null &&\n      user.reviews !== [] && (\n        <UserReviewList\n          userReviews={user.reviews}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteReview}\n        />\n      )}\n\n    </Tab>\n\n    <Tab eventKey=\"meeting\" title=\"meeting\">\n      <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={props.loadMeetings}>Load Today's</Button>\n      <Button variant=\"outline-danger\" size=\"lg\" className=\"confirmEditButton\" onClick={props.hideMeetings}>Hide</Button>\n\n\n      {props.sessionDetailViewer === true && (\n        <SessionDetailViewer\n        authId={props.authId}\n        session={props.session}\n        startEditSessionField={props.startEditSessionField}\n        cancelEditSessionField={props.cancelEditSessionField}\n        editingSessionField={props.editingSessionField}\n        editSessionField={props.editSessionField}\n        showSessionBooked={props.showSessionBooked}\n        showSessionAttended={props.showSessionAttended}\n        hideSessionBooked={props.hideSessionBooked}\n        hideSessionAttended={props.hideSessionAttended}\n        sessionBookedState={props.sessionBookedState}\n        sessionAttendedState={props.sessionAttendedState}\n        hideSessionDetails={props.hideSessionDetails}\n        addSessionAttendance={props.addSessionAttendance}\n        />\n      )}\n\n      {props.meetingsLoaded === true && (\n      <MeetingSessionList\n        authId={props.authId}\n        lessonSessions={props.meetingSessions}\n        viewSessionDetails={props.viewSessionDetails}\n      />\n      )}\n\n      <p>zoom mtg create button, dom element etc </p>\n    </Tab>\n\n    <Tab eventKey=\"activity\" title=\"activity\">\n\n    {user.activity !== null &&\n      user.activity !== [] && (\n        <UserActivityList\n          userActivity={user.activity}\n          authId={props.authId}\n          canDelete={props.canDelete}\n          onDelete={props.userDeleteActivity}\n        />\n      )}\n\n    </Tab>\n  </Tabs>\n  );\n}\n\nexport default thisUserProfile;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport SessionBookedList from '../SessionBookedList';\nimport SessionAttendedList from '../SessionAttendedList';\n\nimport './UserItem.css';\n\nexport default function lessonSessionItem (props) {\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        date: {props.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.time}\n      </Card.Text>\n      <Card.Text>\n        full: {props.full}\n      </Card.Text>\n      <Card.Text>\n        limit: {props.limit}\n      </Card.Text>\n      <Card.Text>\n        amount: {props.amount}\n      </Card.Text>\n      <Card.Text>\n        url: {props.url}\n      </Card.Text>\n      <Card.Text>\n        bookedAmount: {props.bookedAmount}\n      </Card.Text>\n      <Card.Text>\n        attendedAmount: {props.attendedAmount}\n      </Card.Text>\n    </Card.Body>\n\n    {!props.meetings && (\n      <Button variant=\"primary\" onClick={props.showSessionBooked}>\n        Show Booked\n      </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.hideSessionBooked}>\n      Hide Booked\n    </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.showSessionAttended}>\n      Show Attended\n    </Button>\n    )}\n    {!props.meetings && (\n    <Button variant=\"primary\" onClick={props.hideSessionAttended}>\n      Hide Attended\n    </Button>\n    )}\n    {props.meetings && (\n      <Button variant=\"primary\" >\n        Details\n      </Button>\n    )}\n\n    {props.sessionBookedState === true && (\n      <SessionBookedList\n      session={props.session}\n      isInstructor={props.isInstructor}\n      booked={props.booked}\n      attended={props.attended}\n      addSessionAttendance={props.addSessionAttendance}\n    />)}\n    {props.sessionAttendedState === true && (\n      <SessionAttendedList\n      attended={props.attended}\n    />)}\n\n    {props.onBookSession && (<Button variant=\"primary\" onClick={props.onBookSession.bind(this, props.session)}>\n          Book\n        </Button>)}\n    {props.editSessionField &&\n      props.isInstructor === true && (<Button variant=\"primary\" onClick={props.editSessionField.bind(this, props.session)}>\n          Edit\n        </Button>)}\n    {props.onAddCartLesson && (<Button variant=\"secondary\" onClick={props.onAddCartLesson.bind(this, props.session)}>\n          Cart\n        </Button>)}\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\n\nimport LessonSessionItem from './LessonItem/LessonSessionItem';\nimport './UserList.css';\n\nconst lessonSessionList = props => {\n\n  const sessions = props.lessonSessions.map(session => {\n    const sessionDate = new Date (session.date.substr(0,10)*1000).toISOString().slice(0,10);;\n    return (\n      <LessonSessionItem\n        key={session.title}\n        session={session}\n        authId={props.authId}\n        isInstructor={props.isInstructor}\n        title={session.title}\n        date={sessionDate}\n        time={session.time}\n        full={session.full}\n        limit={session.limit}\n        amount={session.amount}\n        url={session.url}\n        booked={session.booked}\n        bookedAmount={session.bookedAmount}\n        attended={session.attended}\n        attendedAmount={session.attendedAmount}\n        onBookSession={props.onBookSession}\n        onAddCartLesson={props.onAddCartLesson}\n        editSessionField={props.editSessionField}\n        showSessionBooked={props.showSessionBooked}\n        showSessionAttended={props.showSessionAttended}\n        hideSessionBooked={props.hideSessionBooked}\n        hideSessionAttended={props.hideSessionAttended}\n        sessionBookedState={props.sessionBookedState}\n        sessionAttendedState={props.sessionAttendedState}\n        addSessionAttendance={props.addSessionAttendance}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{sessions}</ul>;\n};\n\nexport default lessonSessionList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonScheduleItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      Date: {props.date}, Time: {props.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonScheduleItem;\n","import React from 'react';\n\nimport LessonScheduleItem from './LessonItem/LessonScheduleItem';\nimport './UserList.css';\n\nconst lessonScheduleList = props => {\n\n  const dates = props.lessonSchedule.map(date => {\n    // console.log(date);\n    const scheduleDate = new Date (date.date.substr(0,10)*1000).toLocaleDateString().slice(0,10);;\n\n    return (\n      <LessonScheduleItem\n        key={date}\n        date={scheduleDate}\n        time={date.time}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{dates}</ul>;\n};\n\nexport default lessonScheduleList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonInstructorItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Img variant=\"top\" src={props.profileImages[0].path} />\n      <Card.Text>\n      ID: {props._id}\n      </Card.Text>\n      <Card.Text>\n      username: {props.username}\n      </Card.Text>\n      <Card.Text>\n      socialMedia\n      </Card.Text>\n      <Card.Text>\n      {props.socialMedia[0].platform} @ {props.socialMedia[0].handle}\n      </Card.Text>\n      <Card.Text>\n      Email: {props.contact.email}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.instructor)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonInstructorItem;\n","import React from 'react';\n\nimport LessonInstructorItem from './LessonItem/LessonInstructorItem';\nimport './UserList.css';\n\nconst lessonInstructorList = props => {\n\n  const instructors = props.lessonInstructors.map(instructor => {\n    return (\n      <LessonInstructorItem\n        key={instructor}\n        instructor={instructor}\n        _id={instructor._id}\n        username={instructor.username}\n        contact={instructor.contact}\n        socialMedia={instructor.socialMedia}\n        profileImages={instructor.profileImages}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{instructors}</ul>;\n};\n\nexport default lessonInstructorList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonRequirementItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.requirement}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.requirement)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonRequirementItem;\n","import React from 'react';\n\nimport LessonRequirementItem from './LessonItem/LessonRequirementItem';\nimport './UserList.css';\n\nconst lessonRequirementList = props => {\n\n  const requirements = props.lessonRequirements.map(requirement => {\n    return (\n      <LessonRequirementItem\n        key={requirement}\n        requirement={requirement}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{requirements}</ul>;\n};\n\nexport default lessonRequirementList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonMaterialItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.material}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.material)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonMaterialItem;\n","import React from 'react';\n\nimport LessonMaterialItem from './LessonItem/LessonMaterialItem';\nimport './UserList.css';\n\nconst lessonMaterialList = props => {\n\n  const materials = props.lessonMaterials.map(material => {\n    return (\n      <LessonMaterialItem\n        key={material}\n        material={material}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{materials}</ul>;\n};\n\nexport default lessonMaterialList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonTagItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n      {props.tag}\n      </Card.Text>\n    </Card.Body>\n\n    { props.canDelete === true && (\n      <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.tag)}>\n        Delete\n      </Button>\n    )}\n    </Card>\n\n  </li>\n);\n\nexport default lessonTagItem;\n","import React from 'react';\n\nimport LessonTagItem from './LessonItem/LessonTagItem';\nimport './UserList.css';\n\nconst lessonTagList = props => {\n\n  const tags = props.lessonTags.map(tag => {\n    return (\n      <LessonTagItem\n        key={tag}\n        tag={tag}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{tags}</ul>;\n};\n\nexport default lessonTagList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonImageItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n    <Card.Img variant=\"top\" src={props.path} />\n      <Card.Text>\n        Name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Path: {props.path}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.image)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonImageItem;\n","import React from 'react';\n\nimport LessonImageItem from './LessonItem/LessonImageItem';\nimport './UserList.css';\n\nconst lessonImageList = props => {\n\n  const images = props.lessonImages.map(image => {\n    return (\n      <LessonImageItem\n        key={image}\n        image={image}\n        name={image.name}\n        type={image.type}\n        path={image.path}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{images}</ul>;\n};\n\nexport default lessonImageList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nconst lessonFileItem = props => (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Text>\n        Name: {props.name}\n      </Card.Text>\n      <Card.Text>\n        Type: {props.type}\n      </Card.Text>\n      <Card.Text>\n        Size: {props.size}\n      </Card.Text>\n      <Card.Text>\n        Path: {props.path}\n      </Card.Text>\n\n      { props.canDelete === true && (\n        <Button variant=\"danger\" onClick={props.onDelete.bind(this, props.file)}>\n          Delete\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n\nexport default lessonFileItem;\n","import React from 'react';\n\nimport LessonFileItem from './LessonItem/LessonFileItem';\nimport './UserList.css';\n\nconst lessonFileList = props => {\n\n  const files = props.lessonFiles.map(file => {\n    return (\n      <LessonFileItem\n        key={file}\n        file={file}\n        name={file.name}\n        type={file.type}\n        size={file.size}\n        path={file.path}\n        authId={props.authId}\n        canDelete={props.canDelete}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{files}</ul>;\n};\n\nexport default lessonFileList;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function lessonReviewItem (props) {\n  let isAuthor = false;\n  if (props.authId === props.author._id) {\n    isAuthor = true;\n  }\nreturn (\n    <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n      <Card style={{ width: '18rem' }}>\n\n      <Card.Body>\n        <Card.Text>\n        ID: {props._id}\n        </Card.Text>\n        <Card.Text>\n        Title: {props.title}\n        </Card.Text>\n        <Card.Text>\n        Type: {props.type}\n        </Card.Text>\n        <Card.Text>\n        isAuthor?: {isAuthor.toString()}\n        </Card.Text>\n        <Card.Text>\n        Author: {props.type}\n        </Card.Text>\n        <Card.Text>\n        ID: {props.author._id}\n        </Card.Text>\n        <Card.Text>\n        Body: {props.body}\n        </Card.Text>\n        <Card.Text>\n        Rating: {props.rating}\n        </Card.Text>\n      </Card.Body>\n      </Card>\n\n    </li>\n  );\n}\n","import React from 'react';\n\nimport LessonReviewItem from './LessonItem/LessonReviewItem';\nimport './UserList.css';\n\nconst lessonReviewList = props => {\n\n  const reviews = props.lessonReviews.map(review => {\n    return (\n      <LessonReviewItem\n        key={review}\n        review={review}\n        _id={review._id}\n        title={review.title}\n        type={review.type}\n        author={review.author}\n        body={review.body}\n        rating={review.rating}\n        authId={props.authId}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{reviews}</ul>;\n};\n\nexport default lessonReviewList;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateLessonSessionForm = (props) => {\n\n  const [date, setDate] = useState(new Date());\n\n    const handleChangeDate = date => {\n      setDate(date);\n      console.log(`date ${date}`);\n     }\n\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"\">\n  <Form.Label>Session Date</Form.Label>\n  <DatePicker className=\"\" id=\"CalendarDate\"\n    selected={date}\n    onChange={handleChangeDate}\n  />\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridTime\">\n  <Form.Label>Time</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Time\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLimit\">\n  <Form.Label>Limit</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Limit\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n<Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n<Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n</Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonSessionForm;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst UpdateLessonBasicForm = (props) => {\nconst {...lesson} = props.lesson;\nreturn (\n<div className=\"CreateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.title}/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder={lesson.subtitle}/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.duration}/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type: {lesson.type}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category: {lesson.category}</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder={lesson.sku} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder={lesson.price} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder={lesson.points} />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder={lesson.description}/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder={lesson.notes}/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst UpdateLessonFieldForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFieldSelect\">\n  <Form.Label>Field Options</Form.Label>\n  <Form.Control as=\"select\">\n    <option>select</option>\n    <option>title</option>\n    <option>subtitle</option>\n    <option>type</option>\n    <option>category</option>\n    <option>sku</option>\n    <option>price</option>\n    <option>description</option>\n  </Form.Control>\n  </Form.Group>\n  </Form.Row>\n\n  {\n  // <Form.Row>\n  //   <Form.Group as={Col} controlId=\"formGridField\">\n  //   <Form.Label>Field</Form.Label>\n  //   <Form.Control type=\"text\" placeholder=\"field\"/>\n  // </Form.Group>\n  // </Form.Row>\n  }\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridQuery\">\n    <Form.Label>Query </Form.Label>\n    <Form.Label> (Date Format: YYYY-MM-DD) </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Query\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default UpdateLessonFieldForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonRequirementsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridRequirements\">\n  <Form.Label>Requirements</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"requirement, requirement, requirement\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonRequirementsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonMaterialsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMaterials\">\n  <Form.Label>Materials</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"material, material, material\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonMaterialsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonTagsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTags\">\n  <Form.Label>Tags</Form.Label>\n  <Form.Control as=\"textarea\" rows=\"9\" placeholder=\"tags, tags, tags\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonTagsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonImageForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagename\">\n  <Form.Label>Filename</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filename\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagetype\">\n  <Form.Label>Filetype</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridImagepath\">\n  <Form.Label>Link Address</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"link address\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonImageForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonRequirementsForm = (props) => {\n// const {...user} = props.user;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilename\">\n  <Form.Label>Filename</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filename\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilesize\">\n  <Form.Label>Filesize</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filesize\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFiletype\">\n  <Form.Label>Filetype</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Filetype\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridFilepath\">\n  <Form.Label>Link Address</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"link address\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonRequirementsForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst AddLessonInstructorForm = (props) => {\n// const {...user} = props.user;\nconsole.log('props.selectedInstructor',props.selectedInstructor.role);\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n\n{props.selectedInstructor.role !== 'Instructor' && (\n<Form.Row>\n  <Form.Group as={Col} controlId=\"\">\n  <Form.Label> {props.selectedInstructor.username} is not an Instructor! </Form.Label>\n</Form.Group>\n</Form.Row>\n)}\n{props.selectedInstructor.role === 'Instructor' && (\n<Form.Row>\n  <Form.Group as={Col} controlId=\"\">\n  <Form.Label>Add Instructor: {props.selectedInstructor.username} to this lesson...?</Form.Label>\n</Form.Group>\n</Form.Row>\n)}\n<Form.Row>\n\n{props.selectedInstructor.role === 'Instructor' && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n{props.selectedInstructor.role === 'Instructor' && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n)}\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default AddLessonInstructorForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './Lessons/LessonList/LessonSessionList';\nimport LessonScheduleList from './Lessons/LessonList/LessonScheduleList';\nimport LessonInstructorList from './Lessons/LessonList/LessonInstructorList';\nimport LessonRequirementList from './Lessons/LessonList/LessonRequirementList';\nimport LessonMaterialList from './Lessons/LessonList/LessonMaterialList';\nimport LessonTagList from './Lessons/LessonList/LessonTagList';\nimport LessonImageList from './Lessons/LessonList/LessonImageList';\nimport LessonFileList from './Lessons/LessonList/LessonFileList';\nimport LessonReviewList from './Lessons/LessonList/LessonReviewList';\nimport CreateLessonSessionForm from './Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from './Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from './Forms/lesson/UpdateLessonFieldForm';\nimport UpdateSessionFieldForm from './Forms/lesson/UpdateSessionFieldForm';\n\nimport AddLessonRequirementsForm from './Forms/lesson/AddLessonRequirementsForm';\nimport AddLessonMaterialsForm from './Forms/lesson/AddLessonMaterialsForm';\nimport AddLessonTagsForm from './Forms/lesson/AddLessonTagsForm';\nimport AddLessonImageForm from './Forms/lesson/AddLessonImageForm';\nimport AddLessonFileForm from './Forms/lesson/AddLessonFileForm';\nimport AddLessonInstructorForm from './Forms/lesson/AddLessonInstructorForm';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './AttachmentViewer.css';\n\nconst ProfileLessonViewer = (props) => {\n\n  const lessonType = props.lessonType;\n  const {...lesson} = props.profileLesson;\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  let canDelete = false;\n  if (isInstructor === true ) {\n    canDelete = true\n  }\n  console.log(lesson);\n  return (\n\n      <div className=\"attachmentViewerBg\">\n      <div className=\"attachmentViewer\">\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n        <Tab eventKey=\"Basic\" title=\"Basic\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n          <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n          <Row className=\"detailCardRow\">\n            <Col className=\"detailCardCol\">\n            {isInstructor === true &&(\n              <Card.Text>\n              Your lesson\n              </Card.Text>\n            )}\n            <Card.Text>\n              <span className=\"bold\">ID:</span> {lesson._id}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Title:</span> {lesson.title}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Type:</span> {lesson.type}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Category:</span> {lesson.category}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Sku:</span> {lesson.sku}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Price:</span> {lesson.price}\n            </Card.Text>\n            <Card.Text>\n              <span className=\"bold\">Description:</span> {lesson.description}\n            </Card.Text>\n\n            </Col>\n\n            <Col className=\"detailCardCol\">\n            <Card.Text>\n              <span className=\"bold\">Main Instructor:</span>\n            </Card.Text>\n\n            <Card.Text>\n            ID: {lesson.instructors[0]._id}\n            </Card.Text>\n            <Card.Text>\n            Username: {lesson.instructors[0].username}\n            </Card.Text>\n            <Card.Text>\n              Contact\n            </Card.Text>\n            <Card.Text>\n              Email: {lesson.instructors[0].contact.email}\n            </Card.Text>\n\n            </Col>\n\n          </Row>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Schedule\n            </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleSchedule}>\n              show/hide\n            </Button>\n            {props.showScheduleState === true && (\n              <LessonScheduleList\n                lessonSchedule={lesson.schedule}\n              />\n            )}\n            </Col>\n          </Row>\n\n            <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.closeProfileLessonView}>\n                  x\n                </Button>\n              </Col>\n            </Row>\n\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"sessions\" title=\"sessions\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n        <Row className=\"detailCardRow\">\n\n          <Col>\n          <p>Sessions:</p>\n\n          {lesson.sessions !== [] && (\n          <Button variant=\"primary\" onClick={props.toggleSessions}>\n            Show/Hide\n          </Button>\n          )}\n          {lesson.sessions !== [] &&\n            props.showSessionState === true && (\n            <LessonSessionList\n            isInstructor={isInstructor}\n            lessonSessions={lesson.sessions}\n            editSessionField={props.startEditSessionField}\n            showSessionBooked={props.showSessionBooked}\n            showSessionAttended={props.showSessionAttended}\n            hideSessionBooked={props.hideSessionBooked}\n            hideSessionAttended={props.hideSessionAttended}\n            sessionBookedState={props.sessionBookedState}\n            sessionAttendedState={props.sessionAttendedState}\n            addSessionAttendance={props.addSessionAttendance}\n            />\n          )}\n          </Col>\n\n\n          {isInstructor === true &&\n            lessonType === 'booked' && (\n\n          <Col className=\"detailCardCol\">\n          {props.editingSessionField === true && (\n            <UpdateSessionFieldForm\n              authId={props.authId}\n              session={props.session}\n              onConfirm={props.editSessionField}\n              onCancel={props.cancelEditSessionField}\n            />\n          )}\n\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          {props.creatingSession === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n          )}\n\n        </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"reviews\" title=\"reviews\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Reviews\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleReviews}>\n                Show/Hide\n              </Button>\n              {props.showReviewsState === true && (\n                <LessonReviewList\n                  lessonReviews={lesson.reviews}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"materials/requirements\" title=\"materials/requirements\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Requirements\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleRequirements}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'requirements')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'requirements' && (\n                <AddLessonRequirementsForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonRequirements}\n                />\n              )}\n              {props.showRequirementsState === true && (\n                <LessonRequirementList\n                  lessonRequirements={lesson.requirements}\n                  canDelete\n                  onDelete={props.deleteLessonRequirement}\n                />\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Materials\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleMaterials}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'materials')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'materials' && (\n                <AddLessonMaterialsForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonMaterials}\n                />\n              )}\n              {props.showMaterialsState === true && (\n                <LessonMaterialList\n                  lessonMaterials={lesson.materials}\n                  canDelete\n                  onDelete={props.deleteLessonMaterial}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"images\" title=\"images\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Images\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleImages}>\n                Show/Hide\n              </Button>\n              {isInstructor === true && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'images')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'images' && (\n                <AddLessonImageForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonImage}\n                />\n              )}\n              {props.showImagesState === true && (\n                <LessonImageList\n                  lessonImages={lesson.gallery}\n                  canDelete\n                  onDelete={props.deleteLessonImage}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"files\" title=\"files\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Files\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleFiles}>\n                Show/Hide\n              </Button>\n              {isInstructor === true &&  (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'files')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'files' && (\n                <AddLessonFileForm\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonFile}\n                />\n              )}\n              {props.showFilesState === true && (\n                <LessonFileList\n                  lessonFiles={lesson.files}\n                  canDelete\n                  onDelete={props.deleteLessonFile}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"instructors\" title=\"instructors\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n          <Row>\n            <Col>\n            <Card.Text>\n            Instructors\n            </Card.Text>\n              <Button variant=\"danger\" onClick={props.toggleInstructors}>\n                Show/Hide\n              </Button>\n              {isInstructor === true &&\n                JSON.stringify(props.selectedInstructor) === \"{}\" && (\n              <Button variant=\"warning\">\n                Select an Instructor to Add\n              </Button>\n              )}\n              {isInstructor === true &&\n                JSON.stringify(props.selectedInstructor) !== \"{}\" && (\n              <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'instructors')}>\n                Add\n              </Button>\n              )}\n              {props.lessonAddField === 'instructors' &&  (\n                <AddLessonInstructorForm\n                selectedInstructor={props.selectedInstructor}\n                authId={props.authId}\n                onCancel={props.cancelLessonAdd}\n                onConfirm={props.addLessonInstructor}\n                />\n              )}\n              {props.showInstructorsState === true && (\n                <LessonInstructorList\n                  lessonInstructors={lesson.instructors}\n                  canDelete\n                  onDelete={props.deleteLessonInstructor}\n                />\n              )}\n            </Col>\n          </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"tags\" title=\"tags\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n        <Row>\n          <Col>\n          <Card.Text>\n          Tags\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleTags}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'tags')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'tags' && (\n              <AddLessonTagsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonTags}\n              />\n            )}\n            {props.showTagsState === true && (\n              <LessonTagList\n                lessonTags={lesson.tags}\n                canDelete\n                onDelete={props.deleteLessonTag}\n              />\n            )}\n          </Col>\n        </Row>\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n        <Tab eventKey=\"edit\" title=\"edit\">\n        <Card className=\"UserDetailCard\">\n        <Card.Body>\n\n            {isInstructor === true && (\n                <Row className=\"detailCardRow\">\n                <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n                  Edit Basic\n                </Button>\n                  {props.editingLesson === true && (\n                    <UpdateLessonBasicForm\n                    lesson={lesson}\n                    onCancel={props.cancelEditBasic}\n                    onConfirm={props.editLessonBasic}\n                    />\n                  )}\n                </Col>\n\n              </Row>\n            )}\n\n              {isInstructor === true && (\n                <Row className=\"detailCardRow\">\n                <Col className=\"detailCardCol\">\n                <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n                  Edit Field\n                </Button>\n                  {props.editingLessonField === true && (\n                    <UpdateLessonFieldForm\n                    lesson={lesson}\n                    onCancel={props.cancelEditField}\n                    onConfirm={props.editLessonField}\n                    />\n                  )}\n                </Col>\n\n              </Row>\n            )}\n\n        </Card.Body>\n        </Card>\n        </Tab>\n\n      </Tabs>\n      </div>\n      </div>\n\n  );\n}\n\nexport default ProfileLessonViewer;\n\n\n//   <div className=\"attachmentViewerBg\">\n//   <div className=\"attachmentViewer\">\n//\n// <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n//\n//   <Tab eventKey=\"Basic\" title=\"Basic\">\n//   <Card className=\"UserDetailCard\">\n//   <Card.Body>\n//     <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//       {isInstructor === true &&(\n//         <Card.Text>\n//         Your lesson\n//         </Card.Text>\n//       )}\n//       <Card.Text>\n//         <span className=\"bold\">ID:</span> {lesson._id}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Title:</span> {lesson.title}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Type:</span> {lesson.type}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Category:</span> {lesson.category}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Sku:</span> {lesson.sku}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Price:</span> {lesson.price}\n//       </Card.Text>\n//       <Card.Text>\n//         <span className=\"bold\">Description:</span> {lesson.description}\n//       </Card.Text>\n//\n//       </Col>\n//\n//       <Col className=\"detailCardCol\">\n//       <Card.Text>\n//         <span className=\"bold\">Main Instructor:</span>\n//       </Card.Text>\n//\n//       <Card.Text>\n//       ID: {lesson.instructors[0]._id}\n//       </Card.Text>\n//       <Card.Text>\n//       Username: {lesson.instructors[0].username}\n//       </Card.Text>\n//       <Card.Text>\n//         Contact\n//       </Card.Text>\n//       <Card.Text>\n//         Email: {lesson.instructors[0].contact.email}\n//       </Card.Text>\n//\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Instructors\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleInstructors}>\n//           Show/Hide\n//         </Button>\n//         {props.showInstructorsState === true && (\n//           <LessonInstructorList\n//             lessonInstructors={lesson.instructors}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Schedule\n//       </Card.Text>\n//       <Button variant=\"danger\" onClick={props.toggleSchedule}>\n//         show/hide\n//       </Button>\n//       {props.showScheduleState === true && (\n//         <LessonScheduleList\n//           lessonSchedule={lesson.schedule}\n//         />\n//       )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Requirements\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleRequirements}>\n//           Show/Hide\n//         </Button>\n//         {props.showRequirementsState === true && (\n//           <LessonRequirementList\n//             lessonRequirements={lesson.requirements}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Materials\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleMaterials}>\n//           Show/Hide\n//         </Button>\n//         {props.showMaterialsState === true && (\n//           <LessonMaterialList\n//             lessonMaterials={lesson.materials}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row>\n//       <Col>\n//       <Card.Text>\n//       Reviews\n//       </Card.Text>\n//         <Button variant=\"danger\" onClick={props.toggleReviews}>\n//           Show/Hide\n//         </Button>\n//         {props.showReviewsState === true && (\n//           <LessonReviewList\n//             lessonReviews={lesson.reviews}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//         <Button variant=\"danger\" onClick={props.closeProfileLessonView}>\n//           x\n//         </Button>\n//       </Col>\n//     </Row>\n//\n//\n// <Row className=\"detailCardRow\">\n//\n//   <Col>\n//   <p>Sessions:</p>\n//\n//   <Button variant=\"primary\" onClick={props.toggleSessions}>\n//     Show/Hide\n//   </Button>\n//   {lesson.sessions !== [] &&\n//     props.showSessionState === true && (\n//     <LessonSessionList\n//     isInstructor={isInstructor}\n//     lessonSessions={lesson.sessions}\n//     editSessionField={props.startEditSessionField}\n//     showSessionBooked={props.showSessionBooked}\n//     showSessionAttended={props.showSessionAttended}\n//     hideSessionBooked={props.hideSessionBooked}\n//     hideSessionAttended={props.hideSessionAttended}\n//     sessionBookedState={props.sessionBookedState}\n//     sessionAttendedState={props.sessionAttendedState}\n//     addSessionAttendance={props.addSessionAttendance}\n//     />\n//   )}\n//   </Col>\n//\n//\n//   {isInstructor === true && (\n//\n//   <Col className=\"detailCardCol\">\n//   {props.editingSessionField === true && (\n//     <UpdateSessionFieldForm\n//       authId={props.authId}\n//       session={props.session}\n//       onConfirm={props.editSessionField}\n//       onCancel={props.cancelEditSessionField}\n//     />\n//   )}\n//\n//   <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n//     New Session\n//   </Button>\n//   {props.creatingSession === true && (\n//     <CreateLessonSessionForm\n//       authId={props.authId}\n//       onCancel={props.cancelCreateSession}\n//       onConfirm={props.createLessonSession}\n//     />\n//   )}\n//   </Col>\n//\n//   )}\n//\n// </Row>\n//\n//     {isInstructor === true && (\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//\n//       <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n//         Edit Basic\n//       </Button>\n//         {props.editingLesson === true && (\n//           <UpdateLessonBasicForm\n//           lesson={lesson}\n//           onCancel={props.cancelEditBasic}\n//           onConfirm={props.editLessonBasic}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//     )}\n//\n//     {isInstructor === true && (\n//     <Row className=\"detailCardRow\">\n//       <Col className=\"detailCardCol\">\n//       <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n//         Edit Field\n//       </Button>\n//         {props.editingLessonField === true && (\n//           <UpdateLessonFieldForm\n//           lesson={lesson}\n//           onCancel={props.cancelEditField}\n//           onConfirm={props.editLessonField}\n//           />\n//         )}\n//       </Col>\n//     </Row>\n//     )}\n//\n//   </Card.Body>\n//   </Card>\n//   </Tab>\n//\n// </Tabs>\n//\n// </div>\n// </div>\n","// import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\n\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport Spinner from '../../components/Spinner/Spinner';\n// import AttachmentViewer from '../../components/AttachmentViewer';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\n\nimport ThisUserProfile from '../../components/Users/thisUserProfile';\nimport ProfileLessonViewer from '../../components/ProfileLessonViewer';\n\nimport './Users.css';\nimport io from 'socket.io-client';\n\nclass UserProfile extends Component {\n  state = {\n    user: null,\n    users: [],\n    updating: false,\n    adding: false,\n    deleting: false,\n    updatingField: false,\n    isLoading: false,\n    userUpdateField: null,\n    userAddField: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    canDelete: null,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    messagesLoaded: false,\n    userMessages: null,\n    finalConfirmation: false,\n    socketMsg: \"\",\n    activityA: null,\n    activityB: null,\n    activityC: null,\n    selectedFriendRequest: null,\n    requestingFriend: null,\n    userSelectedFriend: null,\n    orderBillingAddress: null,\n    orderShippingAddress: null,\n    profileLessonViewer: false,\n    profileLessonViewerData: null,\n    profileLessonType: null,\n    showSessionState: false,\n    showScheduleState: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    editingSessionField: false,\n    session: null,\n    sessionBookedState: false,\n    sessionAttendedState: false,\n    meetingsLoaded: false,\n    meetingSessions: [],\n    sessionDetailViewer: false,\n    showInstructorsState: false,\n    showRequirementsState: false,\n    showMaterialsState: false,\n    showTagsState: false,\n    showFilesState: false,\n    showImagesState: false,\n    showReviewsState: false,\n    creatingReview: false,\n    reviewLesson: null,\n    lessonAddField: null,\n  };\n\n  isActive = true;\n  static contextType = AuthContext;\n\n  constructor(props){\n      super(props);\n      this.socket = io('http://localhost:9099');\n    }\n\n  componentDidMount() {\n\n    this.getThisUser();\n\n\n    const conversationId = this.context.activityId;\n    this.socket.emit('msg_subscribe', {user: this.context.activityId, room:'msg'+this.context.activityId});\n    // this.socket.emit('msg_subscribe', 'msg'+conversationId);\n    console.log(\"listening for pms...\");\n    this.socket.on('conversation private post', function(data) {\n      console.log(\"you got a new message..\",data);\n      addMessage(data);\n    });\n    const addMessage = data => {\n      this.setState({\n        userAlert: `New Msg!!\n          Fr:   ${data.message.senderName},\n          Msg:   ${data.message.message}`})\n    };\n\n    this.userOnline();\n  };\n\n  onStartUpdate = () => {\n    this.setState({ updating: true, userAddField: 'basic' });\n  };\n  onStartUpdateField = () => {\n    this.setState({ updating: true, updatingField: true });\n  };\n  onStartAdd = (args) => {\n    this.setState({adding: true, userAddField: args})\n  };\n  addUserField = (args) => {\n    this.setState({adding: true, userAddField: args})\n  };\n  startCreateMessage = () => {\n    if (this.context.receiver === null) {\n      this.setState({userAlert: \"select a receiver 1st...\"});\n    }\n    this.setState({adding: true, userAddField: \"message\"})\n  };\n\n  startCartCheckout = () => {\n    this.setState({creatingOrder: true})\n  };\n  cancelCartCheckout = () => {\n    this.setState({creatingOrder: false})\n  };\n\n  userEditBasic = (event) => {\n    this.setState({ updating: false, userAlert: \"Updating selected Staff ...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    // let role = this.context.user.role;\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let bio = event.target.formGridBio.value;\n\n    if (contactEmail.trim().length === 0 ) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      contactEmail = this.context.user.contact.email;\n    }\n    if (password.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      password = this.context.user.password;\n    }\n    if (name.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      name = this.context.user.name;\n    }\n    if (username.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      username = this.context.user.username;\n    }\n    // if (role.trim().length === 0) {\n    //   console.log(\"blank fields detected!!!...filling w/ previous data...\");\n    //   role = this.state.user.role;\n    // }\n    if (dob.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      dob = this.context.user.dob;\n    }\n    if (bio.trim().length === 0) {\n      this.setState({ userAlert: \"blank fields detected!!!...filling w/ previous data...\"});\n      bio = this.context.user.bio;\n    }\n\n    const requestBody = {\n      query: `\n          mutation {updateUserBasic(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              name:\"${name}\",\n              password:\"${password}\",\n              username:\"${username}\",\n              dob:\"${dob}\",\n              contactEmail:\"${contactEmail}\",\n              contactPhone:\"${contactPhone}\",\n              contactPhone2:\"${contactPhone2}\",\n              bio:\"${bio}\"\n            })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const updatedUser = resData.data.updateUserBasic;\n        this.context.user = updatedUser;\n        const responseAlert = JSON.stringify(resData.data.updateUserBasic).slice(2,25);\n\n        this.setState({ userAlert: responseAlert, user: updatedUser, activityA: JSON.stringify(requestBody)})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    };\n  userEditField = (event) => {\n      this.setState({ updatingField: false, userAlert: \"Updating selected Staff by Field...\" });\n      const token = this.context.token;\n      const activityId = this.context.activityId;\n      let userId = activityId;\n      let field = null;\n      let query = event.target.formGridQuery.value;\n      if (event.target.formGridFieldSelect.value === \"select\") {\n        // field = event.target.formGridField.value;\n      } else {\n        field = event.target.formGridFieldSelect.value;\n      }\n\n      const requestBody = {\n        query:`\n          mutation {updateUserByField(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            field:\"${field}\",\n            query:\"${query}\")\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (res.status !== 200 && res.status !== 201) {\n            throw new Error('Failed!');\n            this.setState({userAlert: \"Failed!\"})\n          }\n          return res.json();\n        })\n        .then(resData => {\n          const responseAlert = JSON.stringify(resData.data.updateUserByField).slice(2,25);\n          this.setState({ userAlert: responseAlert, user: resData.data.updateUserByField, activityA: JSON.stringify(requestBody)})\n          this.context.user = this.state.user;\n          // this.logUserActivity();\n        })\n        .catch(err => {\n          this.setState({userAlert: err});\n        });\n    };\n  userAddPoints = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding points for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        let userId = activityId;\n        const points = event.target.formGridPoints.value;\n\n        const requestBody = {\n          query:`\n            mutation {addUserPoints(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              userInput:{\n                points:${points}\n              })\n              {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n        fetch('http://localhost:8088/graphql', {\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        })\n          .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n              throw new Error('Failed!');\n              this.setState({userAlert: 'Failed!'});\n            }\n            return res.json();\n          })\n          .then(resData => {\n\n            const responseAlert = JSON.stringify(resData.data.addUserPoints).slice(2,25);\n            this.setState({userAlert: responseAlert, user: resData.data.addUserPoints, activityA: JSON.stringify(requestBody)})\n            this.context.user = this.state.user;\n            // this.logUserActivity();\n          })\n          .catch(err => {\n            this.setState({userAlert: err});\n          });\n      };\n  userAddAddress = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = event.target.formGridAddressType.value;\n    const addressNumber = event.target.formGridAddressNumber.value;\n    const addressStreet = event.target.formGridAddressStreet.value;\n    const addressTown = event.target.formGridAddressTown.value;\n    const addressCity = event.target.formGridAddressCity.value;\n    const addressCountry = event.target.formGridAddressCountry.value;\n    const addressPostalCode = event.target.formGridAddressPostalCode.value;\n\n    if (\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0\n    ) {\n      console.log('blank fields detected.. please check your info and try again..');\n      this.setState({userAlert: 'blank fields detected.. please check your info and try again..'})\n      return\n    }\n\n    const requestBody = {\n      query:`\n        mutation {addUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserAddress).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserAddress, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAddress = (args) => {\n    console.log('userDeleteAddress...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserAddress(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n            addressPrimary:${addressPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserAddress).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserAddress, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  makeAddressPrimary = (args) => {\n    console.log('makeAddressPrimary...');\n    this.setState({ deleting: true, userAlert: \"deleting address for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const addressType = args.type;\n    const addressNumber = args.number;\n    const addressStreet = args.street;\n    const addressTown = args.town;\n    const addressCity = args.city;\n    const addressCountry = args.country;\n    const addressPostalCode = args.postalCode;\n    const addressPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {setUserAddressPrimary(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            addressType:\"${addressType}\",\n            addressNumber:${addressNumber},\n            addressStreet:\"${addressStreet}\",\n            addressTown:\"${addressTown}\",\n            addressCity:\"${addressCity}\",\n            addressCountry:\"${addressCountry}\",\n            addressPostalCode:\"${addressPostalCode}\",\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.setUserAddressPrimary).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.setUserAddressPrimary, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddProfileImage = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = event.target.formGridFilename.value;\n    const profileImageType = event.target.formGridFiletype.value;\n    const profileImagePath = event.target.formGridFilepath.value;\n    const requestBody = {\n      query:`\n        mutation {addUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserProfileImage).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserProfileImage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteProfileImage = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting profileImage for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const profileImageName = args.name;\n    const profileImageType = args.type;\n    const profileImagePath = args.path;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserProfileImage(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            profileImageName:\"${profileImageName}\",\n            profileImageType:\"${profileImageType}\",\n            profileImagePath:\"${profileImagePath}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserProfileImage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserProfileImage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddSocialMedia = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = event.target.formGridPlatform.value;\n    const socialMediaHandle = event.target.formGridHandle.value;\n    const socialMediaLink = event.target.formGridLink.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserSocialMedia).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserSocialMedia, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteSocialMedia = (args) => {\n    console.log('userDeleteSocialMedia');\n    this.setState({ deleting: true, userAlert: \"deleting socialMedia for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const socialMediaPlatform = args.platform;\n    const socialMediaHandle = args.handle;\n    const socialMediaLink = args.link\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserSocialMedia(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            socialMediaPlatform:\"${socialMediaPlatform}\",\n            socialMediaHandle:\"${socialMediaHandle}\",\n            socialMediaLink:\"${socialMediaLink}\"\n          })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserSocialMedia).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserSocialMedia, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPaymentInfo = (event) => {\n    console.log('userAddPaymentInfo');\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n\n    const paymentInfoDate = event.target.paymentInfoDate.value;\n    const paymentInfoType = event.target.formGridPaymentInfoType.value;\n    const paymentInfoDescription = event.target.formGridDescription.value;\n    const paymentInfoBody = event.target.formGridBody.value;\n    let paymentInfoPrimary = event.target.formGridPaymentInfoPrimaryCheckbox.checked;\n    const paymentInfoValid = true;\n\n    const requestBody = {\n      query:`\n        mutation {addUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary},\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserPaymentInfo).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserPaymentInfo, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeletePaymentInfo = (args) => {\n    console.log('userDeletePaymentInfo',JSON.stringify(args));\n    this.setState({ deleting: true, userAlert: \"deleting paymentInfo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const paymentInfoDate = args.date;\n    const paymentInfoType = args.type;\n    const paymentInfoDescription = args.description;\n    const paymentInfoBody = args.body;\n    const paymentInfoValid = args.valid;\n    const paymentInfoPrimary = args.primary;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserPaymentInfo(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            paymentInfoDate:\"${paymentInfoDate}\",\n            paymentInfoType:\"${paymentInfoType}\",\n            paymentInfoDescription:\"${paymentInfoDescription}\",\n            paymentInfoBody:\"${paymentInfoBody}\",\n            paymentInfoValid:${paymentInfoValid},\n            paymentInfoPrimary:${paymentInfoPrimary}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserPaymentInfo).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPaymentInfo, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddInterests = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interests = event.target.formGridInterests.value;\n\n    const requestBody = {\n      query:`\n        mutation {addUserInterests(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interests:\"${interests}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const activityLog = 'mutation_addUserInterests_origin_'+activityId+'_target_'+userId+'_body_'+interests+'';\n        const responseAlert = JSON.stringify(resData.data.addUserInterests).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserInterests, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteInterest = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting interest for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const interest = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserInterest(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            interest:\"${interest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserInterest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserInterest, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddTags = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding tags for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query:`\n      mutation {addUserTags(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tags:\"${tags}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserTags).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserTags, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteTag = (args) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"deleting tag for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const tag = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteUserTag(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        userInput:{\n          tag:\"${tag}\"\n        })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserTag).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.deleteUserTag, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddPerk  = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding perk for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        const perkId = this.context.selectedPerk._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('http://localhost:8088/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPerk).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPerk, activityA: JSON.stringify(requestBody)})\n        //     this.context.user = this.state.user;\n        //     // this.logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      };\n  userDeletePerk = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting perk for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.deleteUserPerk).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserPerk, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAddPromo  = (event) => {\n        this.setState({ adding: false, userAddField: null, userAlert: \"adding promo for user...\" });\n        const token = this.context.token;\n        const activityId = this.context.activityId;\n        const promoId = this.context.selectedPromo._id;\n\n        // const requestBody = {\n        //   query:`\n        //\n        //   `};\n        //\n        // fetch('http://localhost:8088/graphql', {\n        //   method: 'POST',\n        //   body: JSON.stringify(requestBody),\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //     Authorization: 'Bearer ' + token\n        //   }\n        // })\n        //   .then(res => {\n        //     if (res.status !== 200 && res.status !== 201) {\n        //       throw new Error('Failed!');\n        //       this.setState({userAlert: 'Failed!'});\n        //     }\n        //     return res.json();\n        //   })\n        //   .then(resData => {\n        //\n        //     const responseAlert = JSON.stringify(resData.data.addUserPromo).slice(2,25);\n        //     this.setState({userAlert: responseAlert, user: resData.data.addUserPromo, activityA: JSON.stringify(requestBody)})\n        //     this.context.user = this.state.user;\n        //     // this.logUserActivity();\n        //   })\n        //   .catch(err => {\n        //     this.setState({userAlert: err});\n        //   });\n\n      }\n  userDeletePromo = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n\n\n    // const requestBody = {\n    //   query:`\n    //\n    //   `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.userDeletePromo).slice(2,25);\n    //     this.setState({deleting: false, userAlert: responseAlert, user: resData.data.userDeletePromo, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userAcceptFriendRequest = (args) => {\n    console.log('userAcceptFriendRequest...');\n\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = args.receiver._id;\n    const friendId = args.sender._id;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n    // let requestingFriend = event;\n    // let requestingFriend = null;\n    // if (args.sender._id === this.context.activityId) {\n    //   requestingFriend = args.receiver;\n    // }\n    // if (args.receiver._id === this.context.activityId) {\n    //   requestingFriend = args.sender;\n    // }\n    // return\n    // this.setState({requestingFriend: requestingFriend});\n  };\n  userRejectFriendRequest = (args) => {\n    console.log('userRejectFriendRequest...');\n    this.setState({ deleting: true, userAlert: \"deleting friend request for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const senderId = args.sender._id;\n    const receiverId = args.receiver._id;\n    const date = args.date;\n\n    const requestBody = {\n      query:`\n      mutation {deleteFriendRequest(\n        activityId:\"${activityId}\",\n        senderId:\"${senderId}\",\n        receiverId:\"${receiverId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteFriendRequest).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteFriendRequest, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userAddFriend = (event) => {\n    this.setState({ adding: false, userAddField: null, userAlert: \"adding friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.requestingFriend;\n\n    const requestBody = {\n      query:`\n      mutation {addUserFriend(\n        activityId:\"${activityId}\",\n        userId:\"${userId}\",\n        friendId:\"${friendId}\"\n      )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.addUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userSelectFriend = (args) => {\n    this.setState({userSelectedFriend: args});\n    this.context.receiver = args;\n  };\n  userDeleteFriend = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting friend for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const friendId = this.state.userSelectedFriend._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserFriend(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          friendId:\"${friendId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserFriend).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserFriend, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteCartItem = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const lessonId = args.lesson;\n    const dateAdded = args.dateAdded;\n    const sessionDate = args.sessionDate;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserCartLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          dateAdded:\"${dateAdded}\",\n          sessionDate:\"${sessionDate}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserCartLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserCartLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteBookedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const date = args.date;\n    const lessonId = args.ref;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserBookedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          date:\"${date}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserBookedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserBookedLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteLikedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting likeLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = args._id;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserLikedLesson(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserLikedLesson).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserLikedLesson, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteAttendedLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting attendedLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n  };\n  userDeleteTaughtLesson = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting taughtLesson for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n  };\n  addAddressToOrder = (event) => {\n    event.preventDefault();\n    // const address = JSON.stringify(event);\n    console.log(event.target.value.slice(9,16));\n    let type = event.target.value.slice(9,16);\n    if (type === 'Billing') {\n      this.setState({orderBillingAddress: event.target.value})\n    }\n    if (type === 'Shipping') {\n      this.setState({orderShippingAddress: event.target.value})\n    }\n  };\n  // orderStripePayment = () => {\n    // const userCartLessonSkus = user.cart.map(x => x.lesson.sku)\n    // console.log(userCartLessonSkus);\n  // }\n  createOrder = (event) => {\n    event.preventDefault();\n    console.log(this.state.user.cart);\n    // this.setState({ creatingOrder: false, userAlert: \"creating order for user...\" });\n    //\n    // const token = this.context.token;\n    // const activityId = this.context.activityId;\n    // let userId = activityId;\n    // const buyerId = activityId;\n    // const receiverId = activityId;\n    //\n    // const type = event.target.formGridType.value;\n    // const totalA = event.target.formGridTotalA.value;\n    // const totalB = event.target.formGridTotalB.value;\n    // const taxDescription = event.target.formGridTaxDescription.value;\n    // const taxAmount = event.target.formGridTaxAmount.value;\n    // const description = event.target.formGridDescription.value;\n    // const notes = event.target.formGridNotes.value;\n    // const payment = event.target.formGridPayment.value;\n    // const shipping = event.target.formGridShipping.value;\n    // const billingAddressNumber = event.target.formGridBillingAddressNumber.value;\n    // const billingAddressStreet = event.target.formGridBillingAddressStreet.value;\n    // const billingAddressTown = event.target.formGridBillingAddressTown.value;\n    // const billingAddressCity = event.target.formGridBillingAddressCity.value;\n    // const billingAddressCountry = event.target.formGridBillingAddressCountry.value;\n    // const billingAddressPostalCode = event.target.formGridBillingAddressPostalCode.value;\n    // const shippingAddressNumber = event.target.formGridShippingAddressNumber.value;\n    // const shippingAddressStreet = event.target.formGridShippingAddressStreet.value;\n    // const shippingAddressTown = event.target.formGridShippingAddressTown.value;\n    // const shippingAddressCity = event.target.formGridShippingAddressCity.value;\n    // const shippingAddressCountry = event.target.formGridShippingAddressCountry.value;\n    // const shippingAddressPostalCode = event.target.formGridShippingAddressPostalCode.value;\n    //\n    // const requestBody = {\n    //   query:`\n    //     mutation {createOrder(\n    //       activityId:\"${activityId}\",\n    //       buyerId:\"${buyerId}\",\n    //       receiverId:\"${receiverId}\",\n    //       orderInput:{\n    //         type:\"${type}\",\n    //         totalA:${totalA},\n    //         totalB:${totalB},\n    //         taxDescription:\"${taxDescription}\",\n    //         taxAmount:${taxAmount},\n    //         description:\"${description}\",\n    //         notes:\"${notes}\",\n    //         payment:\"${payment}\",\n    //         shipping:\"${shipping}\",\n    //         billingAddressNumber:${billingAddressNumber},\n    //         billingAddressStreet:\"${billingAddressStreet}\",\n    //         billingAddressTown:\"${billingAddressTown}\",\n    //         billingAddressCity:\"${billingAddressCity}\",\n    //         billingAddressCountry:\"${billingAddressCountry}\",\n    //         billingAddressPostalCode:\"${billingAddressPostalCode}\",\n    //         shippingAddressNumber:${shippingAddressNumber},\n    //         shippingAddressStreet:\"${shippingAddressStreet}\",\n    //         shippingAddressTown:\"${shippingAddressTown}\",\n    //         shippingAddressCity:\"${shippingAddressCity}\",\n    //         shippingAddressCountry:\"${shippingAddressCountry}\",\n    //         shippingAddressPostalCode:\"${shippingAddressPostalCode}\"\n    //       })\n    //     {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n    //   `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: 'Bearer ' + token\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //       this.setState({userAlert: 'Failed!'});\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //\n    //     const responseAlert = JSON.stringify(resData.data.createOrder).slice(2,25);\n    //     this.setState({userAlert: responseAlert, user: resData.data.createOrder, activityA: JSON.stringify(requestBody)})\n    //     this.context.user = this.state.user;\n    //     // this.logUserActivity();\n    //   })\n    //   .catch(err => {\n    //     this.setState({userAlert: err});\n    //   });\n  };\n  userDeleteOrder = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting order for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const orderId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserOrder(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          orderId:\"${orderId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserOrder).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserOrder, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteReview = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const reviewId = args;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          reviewId:\"${reviewId}\"\n        )\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserReview).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserReview, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userCreateMessage = (event) => {\n    event.preventDefault();\n    this.setState({ adding: false });\n    const token = this.context.token;\n    const receiver = this.context.receiver;\n    const receiverId = this.context.receiver._id;\n    const receiverRole = this.context.receiver.role;\n    const role = this.context.role;\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const senderName = this.state.user.username;\n    const date = new Date();\n    const timeString1 = date.toLocaleDateString().slice(11,16);\n    const timeString2 = date.toLocaleDateString().slice(11,16);\n    const type = event.target.formGridTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n    const msgObject = {\n      date: date,\n      time: timeString2,\n      type: type,\n      senderName: senderName,\n      subject: subject,\n      message: message,\n    };\n\n    const requestBody = {\n      query:`\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n        {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    this.sendSocketMessage(msgObject);\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(\"createMessage\",resData.data.createMessage);\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(2,25);;\n        this.setState({ userAlert: responseAlert, activityA: JSON.stringify(requestBody), userAddField: null});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  userDeleteMessage = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting message for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const messageId = args;\n\n    const requestBody = {\n      query:`\n      mutation {deleteMessage(\n        activityId:\"${activityId}\",\n        messageId:\"${messageId}\",)\n      {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteMessage).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteMessage, activityA: JSON.stringify(requestBody)})\n        this.context.user = this.state.user;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  getThisUser() {\n    this.setState({ isLoading: true });\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,sessionTitle,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        let errors = null;\n        if (\n          resData.errors ||\n          JSON.stringify(resData).slice(2,7) === 'error'\n        ) {\n          errors = JSON.stringify({...resData.errors});\n          this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        }\n\n          const thisUser = resData.data.getThisUser;\n          // console.log(thisUser);\n          this.context.user = thisUser;\n          if (this.isActive) {\n          this.setState({ user: thisUser, isLoading: false, activityA: JSON.stringify(requestBody) });\n          }\n          if (sessionStorage.getItem('token')) {\n            this.setState({userAlert: \"Welcome Back...\"})\n          }\n          if (thisUser.name === \"Lord-of-the-Manor\"){\n            this.setState({canDelete: true, userAlert: \"Mi'Lord!!\"})\n          }\n          // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    const today = new Date().toLocaleDateString();\n    const request = this.state.activityA;\n    // console.log(activityId,userId,request);\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  sendSocketMessage (msgObject) {\n    const message = msgObject;\n    console.log(\"sending socket message  \",'message',message,'this.socket',this.socket);\n    this.setState({userAlert: \"sending socket message  \"+'message'+message+'this.socket'+this.socket})\n    let conversationId = null;\n    if (this.context.receiver === null || this.context.receiver === undefined) {\n      console.log(\"select someone to msg 1st...\");\n      this.setState({userAlert: \"select someone to msg 1st...\"});\n      return\n    }\n    else {\n      conversationId = this.context.receiver._id;\n    }\n\n    this.socket.emit('send message', {\n      room: 'msg'+conversationId,\n      message: message\n    });\n    this.socket.on(\"MESSAGE_SENT\", function(data) {\n\n      addMessage(data)\n    })\n\n    const addMessage = data => {\n      this.setState({ userAlert: data.msg})\n    };\n  };\n  userOnline () {\n    console.log('...bringing user online...');\n    this.setState({userAlert: 'bringing user online...'})\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        mutation{userOnline(\n          activityId:\"${activityId}\",\n          userId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.userOnline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  userDeleteActivity = (args) => {\n    this.setState({ deleting: true, userAlert: \"deleting promo for user...\" });\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let userId = activityId;\n    const activityDate = args.date;\n    const activityRequest = args.request;\n\n    const requestBody = {\n      query:`\n        mutation {deleteUserActivity(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          userInput:{\n            activityDate:\"${activityDate}\",\n            activityRequest:\"${activityRequest}\"\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.deleteUserActivity).slice(2,25);\n        this.setState({deleting: false, userAlert: responseAlert, user: resData.data.deleteUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  modalCancelHandler = () => {\n    this.setState({ updating: false, updatingField: false, adding: false, userAddField: null  });\n  };\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  };\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  };\n  viewLessonDetails = (args) => {\n    console.log('retriving lesson details',args.lesson);\n    this.setState({useAlert: 'retriving lesson details', isLoading: true})\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    let lessonId = null;\n    if (args.lesson._id) {\n      lessonId = args.lesson._id;\n    }\n    if (args.lesson.ref) {\n      lessonId = args.lesson.ref._id;\n    }\n\n    const requestBody = {\n      query:`\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},sessions{title,date,time,limit,amount,booked{_id,username,bio,profileImages{name,type,path},socialMedia{platform,handle,link}},bookedAmount,attended{_id,username,bio,profileImages{name,type,path},socialMedia{platform,handle,link}},attendedAmount,inProgress,full,url},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonById).slice(2,25);\n        this.setState({isLoading: false, profileLessonViewer: true, profileLessonViewerData: resData.data.getLessonById, profileLessonType: args.type})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  closeProfileLessonView = () => {\n    this.setState({profileLessonViewer: false, profileLessonViewerData: null})\n  };\n\n  toggleSessions = () => {\n    if (this.state.showSessionState === false) {\n      this.setState({showSessionState: true})\n    } else {\n      this.setState({showSessionState: false})\n    }\n  }\n  toggleInstructors = () => {\n    if (this.state.showInstructorsState === false) {\n      this.setState({showInstructorsState: true})\n    } else {\n      this.setState({showInstructorsState: false})\n    }\n  }\n  toggleSchedule = () => {\n    if (this.state.showScheduleState === false) {\n      this.setState({showScheduleState: true})\n    } else {\n      this.setState({showScheduleState: false})\n    }\n  }\n  toggleRequirements = () => {\n    if (this.state.showRequirementsState === false) {\n      this.setState({showRequirementsState: true})\n    } else {\n      this.setState({showRequirementsState: false})\n    }\n  }\n  toggleMaterials = () => {\n    if (this.state.showMaterialsState === false) {\n      this.setState({showMaterialsState: true})\n    } else {\n      this.setState({showMaterialsState: false})\n    }\n  }\n  toggleReviews = () => {\n    if (this.state.showReviewsState === false) {\n      this.setState({showReviewsState: true})\n    } else {\n      this.setState({showReviewsState: false})\n    }\n  }\n  toggleTags = () => {\n    if (this.state.showTagsState === false) {\n      this.setState({showTagsState: true})\n    } else {\n      this.setState({showTagsState: false})\n    }\n  }\n  toggleImages = () => {\n    if (this.state.showImagesState === false) {\n      this.setState({showImagesState: true})\n    } else {\n      this.setState({showImagesState: false})\n    }\n  }\n  toggleFiles = () => {\n    if (this.state.showFilesState === false) {\n      this.setState({showFilesState: true})\n    } else {\n      this.setState({showFilesState: false})\n    }\n  }\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toLocaleDateString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonBooking, isLoading: false});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  };\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  };\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    this.setState({editingLesson: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ profileLessonViewerData: resData.data.updateLessonBasic, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  onStartEditLessonField = () => {\n    this.setState({editingLessonField: true})\n  };\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  };\n  editLessonField = (event) => {\n    event.preventDefault();\n    this.setState({editingLessonField: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ profileLessonViewer: resData.data.updateLessonByField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  startEditSessionField = (args) => {\n    this.setState({editingSessionField: true, session: args})\n  };\n  cancelEditSessionField = () => {\n    this.setState({editingSessionField: false})\n  };\n  editSessionField = (event) => {\n    event.preventDefault();\n    console.log(event, 'updating session by field');\n    this.setState({editingSessionField: false, userAlert: 'updating session by field'})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    // const lessonId = this.state.session.lessonId;\n    let lessonId = null;\n    if (this.state.sessionDetailViewer === true ) {\n      lessonId = this.state.session.lessonId;\n    } else {\n      lessonId = this.state.profileLessonViewerData._id;\n    }\n    const token = this.context.token;\n\n    const sessionTitle = this.state.session.title;\n    const sessionDate = this.state.session.date;\n\n    const sessionField = event.target.formGridFieldSelect.value;\n    const sessionQuery = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n        mutation {updateSessionField(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\",\n            sessionField:\"${sessionField}\",\n            sessionQuery:\"${sessionQuery}\"\n          })\n         {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n          `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const lesson = resData.data.updateSessionField;\n        const sessions = resData.data.updateSessionField.sessions;\n        const session = sessions.filter(x => x.title === sessionTitle)\n        const session2 = session[0];\n        console.log(session);\n        const newSession = {\n            title: session2.title,\n            date: session2.date,\n            time: session2.time,\n            limit: session2.limit,\n            amount: session2.amount,\n            bookedAmount: session2.bookedAmount,\n            booked: session2.booked,\n            attended: session2.attended,\n            attendedAmount: session2.attendedAmount,\n            inProgress: session2.inProgress,\n            full: session2.full,\n            url: session2.url,\n            lessonId: lesson._id,\n            lessonTitle: lesson.title,\n            lessonInstructors: lesson.instructors,\n          };\n        const responseAlert = JSON.stringify(resData.data.updateSessionField).slice(0,8);\n        this.setState({ sessionDetailViewer: true, session: newSession, profileLessonViewerData: resData.data.updateSessionField, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n\n  };\n\n  showSessionBooked = () => {\n    this.setState({sessionBookedState: true})\n  };\n  showSessionAttended = () => {\n    console.log(\"...attended session attendance...\");\n    this.setState({sessionAttendedState: true})\n  };\n  hideSessionBooked = () => {\n    this.setState({sessionBookedState: false})\n  };\n  hideSessionAttended = () => {\n    this.setState({sessionAttendedState: false})\n  };\n  addSessionAttendance = (attendance) => {\n\n    this.setState({userAlert: '...adding session attendance...'})\n    const activityId = this.context.activityId;\n    const userId = attendance.user._id;\n    let lessonId = null;\n    if (this.state.sessionDetailViewer === true ) {\n      lessonId = this.state.session.lessonId;\n    } else {\n      lessonId = this.state.profileLessonViewerData._id;\n    }\n\n    const sessionDate = attendance.sessionDate;\n    const sessionTitle = attendance.sessionTitle;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonAttendance(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            userId:\"${userId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\"\n            })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonAttendance});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  loadMeetings = () => {\n    this.setState({userAlert: '...retriving todays sessions'})\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getUserBookedSessionsToday(\n            activityId:\"${activityId}\"\n          )\n          {title,date,time,limit,amount,bookedAmount,attendedAmount,inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.getUserBookedSessionsToday);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, meetingSessions: resData.data.getUserBookedSessionsToday, meetingsLoaded: true});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  hideMeetings = () => {\n    this.setState({ meetingsLoaded: false, meetingSessions: []})\n  };\n  viewSessionDetails = (session) => {\n    // console.log('...rerieving session details...',session);\n    this.setState({userAlert: '...retriving todays sessions'})\n    const activityId = this.context.activityId;\n    const lessonId = session.lessonId;\n    const sessionTitle = session.title;\n    const sessionDate = session.date;\n\n      const requestBody = {\n        query: `\n          query {getLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\"\n            })\n            {title,date,time,limit,amount,bookedAmount,booked{_id,username},attendedAmount,attended{_id,username},inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n        `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.getLessonSession);\n        const newSession = {\n          title: resData.data.getLessonSession.title,\n          date: resData.data.getLessonSession.date,\n          time: resData.data.getLessonSession.time,\n          limit: resData.data.getLessonSession.limit,\n          amount: resData.data.getLessonSession.amount,\n          bookedAmount: resData.data.getLessonSession.bookedAmount,\n          booked: resData.data.getLessonSession.booked,\n          attended: resData.data.getLessonSession.attended,\n          attendedAmount: resData.data.getLessonSession.attendedAmount,\n          inProgress: resData.data.getLessonSession.inProgress,\n          full: resData.data.getLessonSession.full,\n          url: resData.data.getLessonSession.url,\n          lessonId: session.lessonId,\n          lessonTitle: session.lessonTitle,\n          lessonInstructors: session.lessonInstructors,\n        };\n        console.log('beep',newSession);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, session: newSession, sessionDetailViewer: true});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n  hideSessionDetails = () => {\n    this.setState({session: null, sessionDetailViewer: false})\n  };\n\n  startCreateReview = (args) => {\n    console.log('startCreateReview', args);\n    this.setState({creatingReview: true, reviewLesson: args.ref})\n  }\n  cancelCreateReview = () => {\n    this.setState({creatingReview: false, reviewLesson: null})\n  }\n  createReview = (event) => {\n    event.preventDefault();\n    console.log('...createing review...');\n    this.setState({userAlert: '...createing review...', creatingReview: false})\n    const lessonId = this.state.reviewLesson._id;\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const type = event.target.formGridTypeSelect.value;\n    const title = event.target.formGridTitle.value;\n    const body = event.target.formGridBody.value;\n    const rating = event.target.formGridRating.value;\n    //\n    const requestBody = {\n      query: `\n        mutation {createReview(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\",\n          lessonId:\"${lessonId}\",\n          reviewInput:{\n            type:\"${type}\",\n            title:\"${title}\",\n            body:\"${body}\",\n            rating:${rating}\n          })\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData.data.createReview);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, user: resData.data.createReview, reviewLesson: null});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startLessonAdd = (args) => {\n    // console.log(args);\n    this.setState({lessonAddField: args})\n  }\n  cancelLessonAdd = (args) => {\n    this.setState({lessonAddField: null})\n  }\n\n  addLessonMaterials = (event) => {\n    event.preventDefault();\n    this.setState({userAlert: '...adding lesson materials...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const materials = event.target.formGridMaterials.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonMaterials(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              materials: \"${materials}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonMaterials});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonTags = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson tags...');\n    this.setState({userAlert: '...adding lesson tags...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonTags(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tags:\"${tags}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonTags});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonRequirements = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson requirements ...');\n    this.setState({userAlert: '...adding lesson requirements ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const requirements = event.target.formGridRequirements.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonRequirements(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirements: \"${requirements}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonRequirements});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonImage = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Image ...');\n    this.setState({userAlert: '...adding lesson Images ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const imageName = event.target.formGridImagename.value;\n    const imageType = event.target.formGridImagetype.value;\n    const imagePath = event.target.formGridImagepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName:\"${imageName}\",\n              imageType:\"${imageType}\",\n              imagePath:\"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log('resData.data.addLessonImage',resData.data.addLessonImage);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.addLessonImage, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n        // this.getThisUser();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonFile = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Files ...');\n    this.setState({userAlert: '...adding lesson Files ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const fileName = event.target.formGridFilename.value;\n    const fileType = event.target.formGridFilesize.value;\n    const fileSize = event.target.formGridFiletype.value;\n    const filePath = event.target.formGridFilepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\"\n              fileType: \"${fileType}\"\n              fileSize: \"${fileSize}\"\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonFile});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonInstructor = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson instructor ...');\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const instructorId = this.context.selectedUser._id;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\"\n            instructorId: \"${instructorId}\")\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody, profileLessonViewerData: resData.data.addLessonInstructor});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n  deleteLessonTag = (args) => {\n    console.log('...deleting lesson tag...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const tag = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonTag(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tag:\"${tag}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.deleteLessonTag);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonTag, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonRequirement = (args) => {\n    console.log('...deleting lesson requirement...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const requirement = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonRequirement(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirement:\"${requirement}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonRequirement, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonMaterial = (args) => {\n    console.log('...deleting lesson material...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const material = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonMaterial(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              material:\"${material}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonMaterial, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonImage = (args) => {\n    console.log('...deleting lesson image...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const imageName = args.name;\n    const imageType = args.type;\n    const imagePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\",\n              imageType: \"${imageType}\",\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonImage, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonFile = (args) => {\n    console.log('...deleting lesson file...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n\n    const fileName = args.name;\n    const fileType = args.type;\n    const fileSize = args.size;\n    const filePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\",\n              fileType: \"${fileType}\",\n              fileSize: \"${fileSize}\",\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonFile, activityA: requestBody});\n        // this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonInstructor = (args) => {\n    console.log('...deleting lesson instructor...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.profileLessonViewerData._id;\n    const instructorId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            instructorId: \"${instructorId}\"\n          )\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, profileLessonViewerData: resData.data.deleteLessonInstructor, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AlertBox\n          authId={this.context.activityId}\n          alert={this.state.userAlert}\n        />\n\n        {this.state.overlay === true && (\n          <LoadingOverlay\n            status={this.state.overlayStatus}\n          />\n        )}\n\n        <SidebarControl\n          onShowSidebar={this.showSidebar}\n          onHideSidebar={this.hideSidebar}\n        />\n\n        <Row>\n        {this.state.sidebarShow === true &&\n          this.state.user !== null && (\n          <Col md={2} className=\"MasterCol1\">\n          <SidebarPage\n            you={this.state.user}\n            authId={this.context.activityId}\n          />\n          </Col>\n        )}\n\n        {this.state.profileLessonViewer === true &&\n          this.state.profileLessonViewerData !== null && (\n          <ProfileLessonViewer\n            authId={this.context.activityId}\n            lessonType={this.state.profileLessonType}\n            profileLesson={this.state.profileLessonViewerData}\n            closeProfileLessonView={this.closeProfileLessonView}\n\n            toggleSessions={this.toggleSessions}\n            showSessionState={this.state.showSessionState}\n\n            showScheduleState={this.state.showScheduleState}\n            toggleSchedule={this.toggleSchedule}\n\n            toggleInstructors={this.toggleInstructors}\n            showInstructorsState={this.state.showInstructorsState}\n            toggleRequirements={this.toggleRequirements}\n            showRequirementsState={this.state.showRequirementsState}\n            toggleMaterials={this.toggleMaterials}\n            showMaterialsState={this.state.showMaterialsState}\n            toggleReviews={this.toggleReviews}\n            showReviewsState={this.state.showReviewsState}\n\n            toggleTags={this.toggleTags}\n            showTagsState={this.state.showTagsState}\n            toggleImages={this.toggleImages}\n            showImagesState={this.state.showImagesState}\n            toggleFiles={this.toggleFiles}\n            showFilesState={this.state.showFilesState}\n\n            startCreateSession={this.startCreateSession}\n            creatingSession={this.state.creatingSession}\n            cancelCreateSession={this.cancelCreateSession}\n            createLessonSession={this.createLessonSession}\n\n            startEditSessionField={this.startEditSessionField}\n            editingSessionField={this.state.editingSessionField}\n            editSessionField={this.editSessionField}\n            cancelEditSessionField={this.cancelEditSessionField}\n            session={this.state.session}\n\n            showSessionBooked={this.showSessionBooked}\n            showSessionAttended={this.showSessionAttended}\n            hideSessionBooked={this.hideSessionBooked}\n            hideSessionAttended={this.hideSessionAttended}\n            sessionBookedState={this.state.sessionBookedState}\n            sessionAttendedState={this.state.sessionAttendedState}\n            addSessionAttendance={this.addSessionAttendance}\n\n            editingLesson={this.state.editingLesson}\n            onStartEditLessonBasic={this.onStartEditLessonBasic}\n            editLessonBasic={this.editLessonBasic}\n            cancelEditBasic={this.cancelEditBasic}\n\n            editingLessonField={this.state.editingLessonField}\n            onStartEditLessonField={this.onStartEditLessonField}\n            editLessonField={this.editLessonField}\n            cancelEditField={this.cancelEditField}\n\n            startLessonAdd={this.startLessonAdd}\n            cancelLessonAdd={this.cancelLessonAdd}\n            lessonAddField={this.state.lessonAddField}\n            addLessonMaterials={this.addLessonMaterials}\n            addLessonRequirements={this.addLessonRequirements}\n            addLessonTags={this.addLessonTags}\n            addLessonInstructor={this.addLessonInstructor}\n            addLessonImage={this.addLessonImage}\n            addLessonFile={this.addLessonFile}\n            selectedInstructor={this.context.selectedUser}\n            addLessonInstructor={this.addLessonInstructor}\n\n            deleteLessonTag={this.deleteLessonTag}\n            deleteLessonRequirement={this.deleteLessonRequirement}\n            deleteLessonMaterial={this.deleteLessonMaterial}\n            deleteLessonImage={this.deleteLessonImage}\n            deleteLessonFile={this.deleteLessonFile}\n            deleteLessonInstructor={this.deleteLessonInstructor}\n          />\n        )}\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n          <div className=\"containerProfile\">\n          {this.state.isLoading ? (\n            <Spinner />\n          ) : (\n            <Row>\n              <Col>\n              {this.state.user !== null && (\n                  <ThisUserProfile\n                    user={this.state.user}\n                    authId={this.context.activityId}\n                    onCancel={this.modalCancelHandler}\n                    canDelete={this.state.canDelete}\n\n                    onStartUpdate={this.onStartUpdate}\n                    onStartUpdateField={this.onStartUpdateField}\n                    onStartAdd={this.onStartAdd}\n\n                    userEditBasic={this.userEditBasic}\n                    userEditField={this.userEditField}\n                    userAddPoints={this.userAddPoints}\n                    userAddAddress={this.userAddAddress}\n                    makeAddressPrimary={this.makeAddressPrimary}\n                    userDeleteAddress={this.userDeleteAddress}\n                    userAddProfileImage={this.userAddProfileImage}\n                    userDeleteProfileImage={this.userDeleteProfileImage}\n\n                    userAddSocialMedia={this.userAddSocialMedia}\n                    userDeleteSocialMedia={this.userDeleteSocialMedia}\n\n                    userAddPaymentInfo={this.userAddPaymentInfo}\n                    userDeletePaymentInfo={this.userDeletePaymentInfo}\n\n                    selectedPerk={this.context.selectedPerk}\n                    userAddPerk={this.userAddPerk}\n                    userDeletePerk={this.userDeletePerk}\n\n                    selectedPromo={this.context.selectedPromo}\n                    userAddPromo={this.userAddPromo}\n                    userDeletePromo={this.userDeletePromo}\n\n                    userAddInterests={this.userAddInterests}\n                    userDeleteInterest={this.userDeleteInterest}\n\n                    userAddTags={this.userAddTags}\n                    userDeleteTag={this.userDeleteTag}\n\n                    userRejectFriendRequest={this.userRejectFriendRequest}\n                    userAcceptFriendRequest={this.userAcceptFriendRequest}\n                    userDeleteFriend={this.userDeleteFriend}\n                    userSelectFriend={this.userSelectFriend}\n                    userAddFriend={this.userAddFriend}\n                    userDeleteFriend={this.userDeleteFriend}\n\n                    userDeleteCartItem={this.userDeleteCartItem}\n                    userDeleteLikedLesson={this.userDeleteLikedLesson}\n                    userDeleteBookedLesson={this.userDeleteBookedLesson}\n                    userDeleteAttendedLesson={this.userDeleteAttendedLesson}\n                    userDeleteTaughtLesson={this.userDeleteTaughtLesson}\n\n                    addAddressToOrder={this.addAddressToOrder}\n                    orderBillingAddress={this.state.orderBillingAddress}\n                    orderShippingAddress={this.state.orderShippingAddress}\n                    startCartCheckout={this.startCartCheckout}\n                    cancelCartCheckout={this.cancelCartCheckout}\n                    createOrder={this.createOrder}\n                    userDeleteOrder={this.userDeleteOrder}\n                    userDeleteReview={this.userDeleteReview}\n                    userDeleteActivity={this.userDeleteActivity}\n\n                    userCreateMessage={this.userCreateMessage}\n                    userDeleteMessage={this.userDeleteMessage}\n\n                    updating={this.state.updating}\n                    updatingField={this.state.updatingField}\n                    userAddField={this.state.userAddField}\n                    creatingOrder={this.state.creatingOrder}\n\n                    selectedUser={this.context.selectedUser}\n                    messageReceiver={this.context.receiver}\n                    requestingFriend={this.state.requestingFriend}\n                    onStartCreateMessage={this.startCreateMessage}\n\n                    viewLessonDetails={this.viewLessonDetails}\n\n                    loadMeetings={this.loadMeetings}\n                    hideMeetings={this.hideMeetings}\n                    meetingsLoaded={this.state.meetingsLoaded}\n                    meetingSessions={this.state.meetingSessions}\n                    viewSessionDetails={this.viewSessionDetails}\n                    hideSessionDetails={this.hideSessionDetails}\n                    sessionDetailViewer={this.state.sessionDetailViewer}\n\n                    startEditSessionField={this.startEditSessionField}\n                    editingSessionField={this.state.editingSessionField}\n                    editSessionField={this.editSessionField}\n                    cancelEditSessionField={this.cancelEditSessionField}\n                    session={this.state.session}\n\n                    showSessionBooked={this.showSessionBooked}\n                    showSessionAttended={this.showSessionAttended}\n                    hideSessionBooked={this.hideSessionBooked}\n                    hideSessionAttended={this.hideSessionAttended}\n                    sessionBookedState={this.state.sessionBookedState}\n                    sessionAttendedState={this.state.sessionAttendedState}\n                    addSessionAttendance={this.addSessionAttendance}\n\n                    startCreateReview={this.startCreateReview}\n                    cancelCreateReview={this.cancelCreateReview}\n                    creatingReview={this.state.creatingReview}\n                    reviewLesson={this.state.reviewLesson}\n                    createReview={this.createReview}\n                  />\n                )}\n\n              </Col>\n            </Row>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\n\nimport './Auth.css';\nimport AuthContext from '../../context/auth-context';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport SidebarControl from '../../components/SidebarControl';\nimport VerifyUserForm from '../../components/Forms/user/VerifyUserForm';\n\nimport UserProfile from '../user/UserProfile';\n\nclass AuthPage extends Component {\n  state = {\n    verifying: false,\n    role: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    activeTab: \"choose\",\n    userSeshStore: false,\n    user: {},\n    model: {},\n    activityA: null,\n  };\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    if (sessionStorage.getItem('token')) {\n      this.setState({userAlert: \"sessionStorage found...\",userSeshStore: true });\n      this.getThisUser();\n    }\n  }\n\n  retrieveLogin = () => {\n    // this.logUserActivity();\n    // const activityId = sessionStorage.getItem('activityId');\n    // const token = sessionStorage.getItem('token');\n    //\n    // let requestBody = null;\n    //   requestBody = {\n    //     query: `\n    //       mutation {userOnline(\n    //         activityId:\"${activityId}\",\n    //         userId:\"${activityId}\"\n    //       )\n    //       {_id,password,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n    //     `};\n    //\n    // fetch('http://localhost:8088/graphql', {\n    //   method: 'POST',\n    //   body: JSON.stringify(requestBody),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //\n    //   }\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       throw new Error('Failed!');\n    //     }\n    //     return res.json();\n    //   })\n    //   .then(resData => {\n    //     console.log(resData.data);\n    //     this.context.user = resData.data.userOnline\n    //     console.log(\"retrieving login\");\n    //     this.context.login(\n    //       sessionStorage.getItem('token'),\n    //       sessionStorage.getItem('activityId'),\n    //       sessionStorage.getItem('role'),\n    //       sessionStorage.getItem('tokenExpiration'),\n    //     );\n    //   })\n    //   .catch(err => {\n    //     if (this.isActive) {\n    //       this.setState({userAlert: err});\n    //     }\n    //   });\n\n      console.log(\"retrieving login\");\n      this.context.login(\n        sessionStorage.getItem('token'),\n        sessionStorage.getItem('activityId'),\n        sessionStorage.getItem('role'),\n        sessionStorage.getItem('tokenExpiration'),\n      );\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    console.log('...User Login...');\n    this.setState({ userAlert: \"Logging you in...\"})\n    const email = event.target.formBasicEmail.value;\n    const password = event.target.formBasicPassword.value;\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n    let requestBody = null;\n      requestBody = {\n        query: `\n          query {login(email:\"${email}\",password:\"${password}\")\n          {activityId,role,token,tokenExpiration,error}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          // let foo = res.json();\n          // console.log(res,res.body,foo);\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        // this.setState({ activityA: JSON.stringify(requestBody)})\n        // this.logUserActivity();\n        // this.logUserActivity();\n        // let errors = null;\n        // if (\n        //   resData.errors ||\n        //   JSON.stringify(resData).slice(2,7) === 'error'\n        // ) {\n        //   errors = JSON.stringify({...resData.errors});\n        //   this.setState({userAlert: \"Something went wrong!!!\"+errors+\"\"})\n        // }\n        // console.log('*',resData);\n        // console.log('*',resData.data.login.error);\n        let responseAlert = JSON.stringify(resData.data).slice(2,25);\n        let error = null;\n        if (resData.data.login.error) {\n          error = resData.data.login.error;\n          responseAlert = error;\n        }\n\n        this.setState({userAlert: responseAlert})\n        let sessionStorageLoginInfo = null;\n\n        if (resData.data.login.token !== \"\") {\n\n\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.activityId,\n            resData.data.login.role,\n            resData.data.login.tokenExpiration\n          );\n         sessionStorage.setItem('token', resData.data.login.token);\n         sessionStorage.setItem('activityId', resData.data.login.activityId);\n         sessionStorage.setItem('role', resData.data.login.role);\n         sessionStorage.setItem('tokenExpiration', resData.data.login.tokenExpiration);\n         // this.setState({ activityA: JSON.stringify(requestBody)})\n         // this.logUserActivity();\n        }\n      })\n      .catch(err => {\n        if (this.isActive) {\n          this.setState({userAlert: err});\n        }\n        // this.context.userAlert = err;\n        // console.log(`\n        //   err: ${this.context.userAlert}\n        //   `);\n      });\n  };\n\n  showSidebar = () => {\n        this.setState({\n          sidebarShow: true,\n          mCol2Size: 9\n        })\n    }\n\n  hideSidebar = () => {\n        this.setState({\n          sidebarShow: false,\n          mCol2Size: 11\n        })\n    }\n\n  getThisUser() {\n    console.log(\"get this user...\");\n    const activityId = sessionStorage.getItem('activityId');\n    const token = sessionStorage.getItem('token');\n    const requestBody = {\n      query: `\n        query {getThisUser(activityId:\"${activityId}\")\n        {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,lesson{_id},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const thisUser = resData.data.getThisUser;\n        this.context.user = thisUser;\n        this.setState({ activityA: '...autoLogin by '+thisUser._id+''})\n        // this.logUserActivity();\n        this.retrieveLogin();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  logUserActivity() {\n    console.log('logUserActivity...',sessionStorage.getItem('activityId'),this.state.activityA);\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = sessionStorage.getItem('activityId');\n    const token = sessionStorage.getItem('token');\n    const userId = activityId;\n    const today = new Date().toLocaleDateString();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,lesson{_id},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        // this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        // this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  verifyUser = (event) => {\n    event.preventDefault();\n    console.log('...verify user...');\n    const contactEmail = event.target.formGridEmail.value;\n    const verificationType = event.target.formGridType.value;\n    const verificationCode = event.target.formGridCode.value;\n\n    const requestBody = {\n      query: `\n      mutation {verifyUser(\n        userInput:{\n          contactEmail:\"${contactEmail}\",\n          verificationType:\"${verificationType}\",\n          verificationCode:\"$verificationCode{}\"\n        })\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n      console.log(JSON.stringify(requestBody));\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }})\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.verifyUser);\n        this.setState({userAlert: 'Verified...Please try loggin in again..'});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startVerification = () => {\n    this.setState({verifying: true})\n  };\n  closeVerification = () => {\n    this.setState({verifying: false})\n  };\n\n\n  render() {\n    return (\n      <Container className=\"loginPageContainer\">\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n        <Row className=\"loginPageContainerRow2\">\n        <Col className=\"loginPageContainerCol2\">\n          <Form className=\"auth-form\" onSubmit={this.submitHandler}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n              <Form.Text className=\"text-muted\">\n                User Login\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Button variant=\"outline-success\" type=\"submit\" className=\"loginButton\" size=\"lg\">\n              Login\n            </Button>\n\n            <Button variant=\"outline-warning\" className=\"loginButton\" size=\"lg\">\n              <NavLink to=\"/signup\">Signup</NavLink>\n            </Button>\n          </Form>\n        </Col>\n        </Row>\n        <Row className=\"loginPageContainerRow2\">\n          <Col className=\"loginPageContainerCol2\">\n            <Button variant=\"outline-primary\" onClick={this.startVerification}>Verify</Button>\n            {this.state.verifying === true && (\n              <VerifyUserForm\n                canCancel\n                canConfirm\n                onCancel={this.closeVerification}\n                onConfirm={this.verifyUser}\n              />\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default AuthPage;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\nconst CreateUserForm = (props) => {\n\n  const [dob, setDob] = useState(new Date());\n\n  const handleChangeDob = date => {\n    setDob(date);\n    console.log(`Dob ${dob}`);\n   }\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridRole\">\n  <Form.Label>Role</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Instructor</option>\n  <option>User</option>\n\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridName\">\n  <Form.Label>Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridUsername\">\n  <Form.Label>Username</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Name\" />\n</Form.Group>\n\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPhone\">\n  <Form.Label>Phone</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridPhone2\">\n  <Form.Label>Phone2</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"phone2\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDob\">\n  <Form.Label>D.O.B</Form.Label>\n  <Form.Control type=\"date\" placeholder=\"Date of Birth\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridPublicCheckbox\">\n  <Form.Label>Public ?</Form.Label>\n  <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n</Form.Group>\n</Form.Row>\n\n{\n  // <Form.Group as={Col} controlId=\"formGridRole\">\n  //   <Form.Label>Role</Form.Label>\n  //   <Form.Control as=\"select\">\n  //   <option>guest</option>\n  //   <option>nurse</option>\n  //   <option>doctor</option>\n  //   <option>staff</option>\n  //\n  //   </Form.Control>\n  // </Form.Group>\n  // </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"\">\n//   <Form.Label>Fancy D.O.B</Form.Label>\n//   <DatePicker className=\"\" id=\"staffCalendarDob\"\n//     selected={dob}\n//     onChange={handleChangeDob}\n//   />\n// </Form.Group>\n// </Form.Row>\n\n// <Form.Row>\n// <Form.Group as={Col} controlId=\"formGridEmploymentDateTodayCheckbox\">\n//   <Form.Label>Today ?</Form.Label>\n//   <Form.Control type=\"checkbox\" onChange={(e) => {console.log(e.target.checked)}}/>\n// </Form.Group>\n// </Form.Row>\n}\n\n\n<Form.Row>\n\n<Form.Group as={Col} controlId=\"formGridAddressType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>Billing</option>\n  <option>Shipping</option>\n\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressNumber\">\n  <Form.Label>Street No.</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"addressNumber\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressStreet\">\n  <Form.Label>Street Name</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressStreet\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressTown\">\n  <Form.Label>Town</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressTown\"/>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridAddressCity\">\n  <Form.Label>City</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCity\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressCountry\">\n  <Form.Label>Country</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addressCountry\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridAddressPostalCode\">\n  <Form.Label>postalCode</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"addresspostalCode\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridBio\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Bio\"/>\n</Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateUserForm;\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nimport AlertBox from '../../components/AlertBox';\nimport CreateUserForm from '../../components/Forms/user/CreateUserForm';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport './Auth.css';\n\nclass SignupPage extends Component {\n  state = {\n    role: null,\n    success: \"Signup!!\",\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    creating: false,\n  };\n\n  modalConfirmUserHandler = (event) => {\n    event.preventDefault();\n\n    this.setState({ creating: false, userAlert: \"Signing you up....\" });\n    let contactEmail = event.target.formGridEmail.value;\n    let password = event.target.formGridPassword.value;\n    let name = event.target.formGridName.value;\n    let username = event.target.formGridUsername.value;\n    let role = event.target.formGridRole.value;\n    let publicProfile = false;\n    if (event.target.formGridPublicCheckbox.checked === true) {\n      publicProfile = true;\n    }\n    let dob = event.target.formGridDob.value;\n    let contactPhone = event.target.formGridPhone.value;\n    let contactPhone2 = event.target.formGridPhone2.value;\n    let addressType = event.target.formGridAddressType.value;\n    let addressNumber = event.target.formGridAddressNumber.value;\n    let addressStreet = event.target.formGridAddressStreet.value;\n    let addressTown = event.target.formGridAddressTown.value;\n    let addressCity = event.target.formGridAddressCity.value;\n    let addressCountry = event.target.formGridAddressCountry.value;\n    let addressPostalCode = event.target.formGridAddressPostalCode.value;\n    let bio = event.target.formGridBio.value;\n\n    if (\n      contactEmail.trim().length === 0 ||\n      password.trim().length === 0 ||\n      name.trim().length === 0 ||\n      username.trim().length === 0 ||\n      role.trim().length === 0 ||\n      dob.trim().length === 0 ||\n      contactPhone.trim().length === 0 ||\n      contactPhone2.trim().length === 0 ||\n      addressType.trim().length === 0 ||\n      addressNumber.trim().length === 0 ||\n      addressStreet.trim().length === 0 ||\n      addressTown.trim().length === 0 ||\n      addressCity.trim().length === 0 ||\n      addressCountry.trim().length === 0 ||\n      addressPostalCode.trim().length === 0 ||\n      bio.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"});\n      return;\n    }\n\n    const token = this.context.token;\n    const requestBody = {\n      query: `\n            mutation {createUser(\n              userInput:{\n                role:\"${role}\",\n                name:\"${name}\",\n                password:\"${password}\",\n                username:\"${username}\",\n                dob:\"${dob}\",\n                public:${publicProfile},\n                contactEmail:\"${contactEmail}\",\n                contactPhone:\"${contactPhone}\",\n                contactPhone2:\"${contactPhone2}\",\n                addressType:\"${addressType}\",\n                addressNumber:${addressNumber},\n                addressStreet:\"${addressStreet}\",\n                addressTown:\"${addressTown}\",\n                addressCity:\"${addressCity}\",\n                addressCountry:\"${addressCountry}\",\n                addressPostalCode:\"${addressPostalCode}\",\n                bio:\"${bio}\"\n              })\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n          `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const newUser = resData.data.createUser;\n        const errors = JSON.stringify({...resData.errors});\n        if (JSON.stringify(resData).slice(2,7) === 'error') {\n          this.setState({success: \"Something went wrong!!!\", userAlert: \"Something went wrong!!!\"+errors+\"\"  });\n        } else {\n          this.setState({success: \"Signup success...Proceed to login\", userAlert: \"Signup success...Proceed to login... your verification code is..\"+newUser.verification.code+\"\" });\n        }\n\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  cancelSignup = () => {\n    this.setState({creating: false, role: null})\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <AlertBox\n        authUserId={this.context.userId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n      <Container className=\"loginPageContainer\">\n\n      <Row className=\"loginPageContainerRow2\">\n      <Col className=\"loginPageContainerCol2\">\n\n        <CreateUserForm\n          canCancel\n          canConfirm\n          onConfirm={this.modalConfirmUserHandler}\n          onSubmit={this.modalConfirmUserHandler}\n          confirmText=\"Confirm\"\n          successText={this.state.success}\n          onCancel={this.cancelSignup}\n        />\n\n      </Col>\n      </Row>\n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport './UserItem.css';\n\nexport default function userItem (props) {\n  return (\n    <Router>\n    <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n      <Card style={{ width: '18rem' }}>\n\n      <Card.Body>\n        <Card.Text>\n          ID: {props._id}\n        </Card.Text>\n        <Card.Text>\n          username: {props.username}\n        </Card.Text>\n        <Card.Text>\n          role: {props.role}\n        </Card.Text>\n        <Link to={'users/'+props.user.username+''}>\n          <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n            Details\n          </Button>\n        </Link>\n\n          <Button variant=\"secondary\" onClick={props.onSelectNoDetail.bind(this, props.user)}>\n          Select\n        </Button>\n\n\n      </Card.Body>\n      </Card>\n\n    </li>\n    <Switch>\n      <Route path=\"users/:id\" children={<Child />} />\n    </Switch>\n    </Router>\n  )\n};\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    id\n  );\n}\n","import React from 'react';\n\nimport UserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst userList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <UserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default userList;\n","import React from 'react';\n\nimport SearchUserItem from './UserItem/UserItem';\nimport './UserList.css';\n\nconst searchUserList = props => {\n\n  const users = props.users.map(user => {\n    return (\n      <SearchUserItem\n        key={user._id}\n        user={user}\n        authId={props.authId}\n        _id={user._id}\n        username={user.username}\n        role={user.role}\n        public={user.public}\n        clientConnected={user.clientConnected}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onSelectMessageReceiver={props.onSelectMessageReceiver}\n        onFriendRequest={props.onFriendRequest}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{users}</ul>;\n};\n\nexport default searchUserList;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport './CreateUserForm.css';\n\nconst MessageUserListForm = (props) => {\nconst {...receiver} = props.receiver;\n\nreturn (\n<div className=\"UpdateFormContainer\">\n<Form onSubmit={props.onConfirm}>\n<Form.Row>\n  <p>Recipient: {receiver.username}</p>\n</Form.Row>\n\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicTypeSelect\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type j</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group as={Col} controlId=\"formGridSubject\">\n    <Form.Label>Subject </Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Subject\"/>\n  </Form.Group>\n</Form.Row>\n\n  <Form.Row>\n  <Form.Group as={Col} controlId=\"formGridMessage\">\n    <Form.Label>Message </Form.Label>\n    <Form.Control as=\"textarea\" rows=\"7\" placeholder=\"Message\"/>\n  </Form.Group>\n</Form.Row>\n\n\n<Form.Row>\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Submit\n  </Button>\n</Form.Row>\n\n</Form>\n</div>\n\n)};\n\nexport default MessageUserListForm;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport MessageUserListForm from '../Forms/user/MessageUserListForm';\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst UserDetail = (props) => {\n\n  const {...user} = props.user;\n  const profileImages = user.profileImages;\n  console.log(profileImages);\n  console.log('user.clientConnected',user.clientConnected,'user.loggedIn',user.loggedIn);\n  const interests = user.interests;\n\n  // let userDob = new Date(user.dob.substr(0,9) * 1000).toLocaleDateString().slice(0,10);\n\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Demographics\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Demographics\" title=\"Demographics\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">User Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {profileImages.length !== 0 && (\n            <Card.Img variant=\"top\" src={profileImages[0].path} />\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {user._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Username:</span> {user.username}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Role:</span> {user.role}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Bio:</span> {user.bio}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">loggedIn:</span> {user.loggedIn.toString()}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">online:</span> {user.clientConnected.toString()}\n          </Card.Text>\n          </Col>\n\n          <Col className=\"detailCardCol\">\n\n\n\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n        <Button variant=\"secondary\" onClick={props.onFriendRequest.bind(this, props.user)}>\n          RequsetFriend\n        </Button>\n        <Button variant=\"info\" onClick={props.onStartSendMessage.bind(this, props.user)}>\n          Message\n        </Button>\n        <Button variant=\"danger\" onClick={props.onHideUserDetail}>\n          x\n        </Button>\n          <Col className=\"detailCardCol\">\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, user._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, user._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n\n      {props.creatingMessage === true &&\n        props.messageReceiver !== null && (\n        <MessageUserListForm\n          receiver={props.messageReceiver}\n          onCancel={props.cancelMessage}\n          onConfirm={props.sendMessage}\n        />\n      )}\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport \"./AttachmentViewer.css\"\n\nconst AttachmentViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <h5 className=\"attachmentViewerTitle\">AttachmentViewer</h5>\n    <Button variant=\"danger\" className=\"attachmentViewerCloseButton\" onClick={props.onCloseAttachmentView}>\n      close\n    </Button>\n\n    <a href={props.attachmentFile}>\n    <Button variant=\"success\">\n      View the Attachment\n    </Button>\n    </a>\n    </div>\n  </div>\n)\n\n}\n\n\nexport default AttachmentViewer;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport UserDetail from './Users/UserDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst UserDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n\n    <UserDetail\n      authId={props.authId}\n      user={props.user}\n      canReport={props.canReport}\n      onReport={props.onReport}\n      canDelete={props.canDelete}\n      onDelete={props.onDelete}\n      onFriendRequest={props.onFriendRequest}\n      onStartSendMessage={props.onStartSendMessage}\n      onHideUserDetail={props.onHideUserDetail}\n      creatingMessage={props.creatingMessage}\n      messageReceiver={props.messageReceiver}\n      cancelMessage={props.cancelMessage}\n      sendMessage={props.sendMessage}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default UserDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserFieldBasicForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n\n  <Form.Row>\n  {\n    <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n    <Form.Label>Basic Field</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>public</option>\n    <option>loggedIn</option>\n    <option>clientConnected</option>\n    <option>dob</option>\n    <option>age</option>\n    <option>points</option>\n    <option>friends</option>\n    <option>bookedLessons.ref</option>\n    <option>likedLessons.ref</option>\n    <option>attendedLessons.ref</option>\n    </Form.Control>\n    <Form.Text className=\"text-muted\">\n    </Form.Text>\n    </Form.Group>\n}\n\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Basic Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserFieldBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchUserFieldRegexForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n\n  <Form.Row>\n  {\n    <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n    <Form.Label>Regex Field</Form.Label>\n    <Form.Control as=\"select\">\n    <option>select</option>\n    <option>_id</option>\n    <option>username</option>\n    <option>role</option>\n    <option>contact.phone</option>\n    <option>contact.phone2</option>\n    <option>contact.email</option>\n    <option>socialMedia.platform</option>\n    <option>socialMedia.handle</option>\n    <option>tags</option>\n    <option>interests</option>\n    <option>bookedLessons.session.title</option>\n    </Form.Control>\n    <Form.Text className=\"text-muted\">\n    </Form.Text>\n    </Form.Group>\n}\n\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchUserFieldRegexForm;\n","import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport UserList from '../../components/Users/UserList/UserList';\nimport SearchUserList from '../../components/Users/UserList/SearchUserList';\nimport UserDetail from '../../components/Users/UserDetail';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport UserDetailViewer from '../../components/UserDetailViewer';\n\nimport SearchUserFieldBasicForm from '../../components/Forms/user/SearchUserFieldBasicForm';\nimport SearchUserFieldRegexForm from '../../components/Forms/user/SearchUserFieldRegexForm';\n\nimport './Users.css';\n\nclass UsersPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    searchUsers: [],\n    isLoading: false,\n    isSorting: false,\n    selectedUser: null,\n    detailsLoaded: false,\n    creatingMessage: false,\n    messageReceiver: null,\n    userUpdateField: null,\n    userSearchField: null,\n    userSearchQuery: null,\n    canDelete: null,\n    canReport: false,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    activityA: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    console.log('...users component mounted...');\n    if (this.context.user.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedUser) !== \"{}\") {\n      this.setState({ selectedUser: this.context.selectedUser })\n    }\n\n    this.fetchUsersBasic();\n  }\n\n\n\n  modalConfirmSearchBasicHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const search = { field, query };\n    const requestBody = {\n      query: `\n        query {getUsersByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,role,username,public,clientConnected}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByField).slice(0,8);\n        const searchUsers = resData.data.getUsersByField;\n        this.setState({ searchUsers: searchUsers, userAlert: responseAlert, activityA: requestBody})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchRegexHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for User...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const search = { field, query };\n    const requestBody = {\n      query: `\n        query {getUsersByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,role,username,public,clientConnected}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getUsersByFieldRegex).slice(0,8);\n        const searchUsers = resData.data.getUsersByFieldRegex;\n        if (searchUsers === [] ) {\n          this.setState({ userAlert: '... nothing found soz...', activityA: requestBody})\n        } else {\n          this.setState({ searchUsers: searchUsers, userAlert: responseAlert, activityA: requestBody})\n        }\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchUsersBasic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching User Master List...\" });\n    const activityId = this.context.activityId;\n\n    const requestBody = {\n      query: `\n          query {getAllUsers(\n            activityId:\"${activityId}\"\n          )\n          {_id,role,username,public,clientConnected,loggedIn}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getAllUsers).slice(0,8);\n        this.setState({userAlert: responseAlert, users: resData.data.getAllUsers, isLoading: false, activityA: requestBody});\n        this.context.users = this.state.users;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteListUser = (userId) => {\n    console.log(\"delete listed user\", userId);\n  }\n\n  reportUser = (userId) => {\n    console.log(\"reporting user\", userId);\n  }\n\n  startSendMessage = (args) => {\n    console.log(\"opening message form...\");\n    this.setState({creatingMessage: true, messageReceiver: {_id: args._id, username: args.username}})\n  }\n  cancelMessage = () => {\n    this.setState({creatingMessage: false})\n  }\n  sendMessage = (event) => {\n    event.preventDefault();\n    console.log(this.state.messageReceiver,event.target);\n    this.setState({creatingMessage: false, userAlert: \"sending message...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = this.state.messageReceiver._id;\n    const type = event.target.formBasicTypeSelect.value;\n    const subject = event.target.formGridSubject.value;\n    const message = event.target.formGridMessage.value;\n\n    const requestBody = {\n      query: `\n        mutation {createMessage(\n          activityId:\"${activityId}\",\n          senderId:\"${senderId}\",\n          receiverId:\"${receiverId}\",\n          messageInput:{\n            type:\"${type}\",\n            subject:\"${subject}\",\n            message:\"${message}\"\n          })\n          {_id,date,time,type,subject,sender{_id,username},receiver{_id,username},message,read}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(JSON.stringify(resData.data.createMessage));\n        const responseAlert = JSON.stringify(resData.data.createMessage).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody});\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = userId => {\n  this.setState({ isLoading: true, userAlert: \"Fetching User Details...\", showDetail: true });\n  const activityId = this.context.activityId;\n\n  const requestBody = {\n    query: `\n        query {getUserById(\n          activityId:\"${activityId}\",\n          userId:\"${userId}\"\n        )\n        {_id,role,username,public,clientConnected,loggedIn,age,bio,socialMedia{platform,handle,link},profileImages{name,type,path},interests,tags}}\n      `};\n\n  fetch('http://localhost:8088/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.context.token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        this.setState({userAlert: 'Failed!'});\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      const responseAlert = JSON.stringify(resData.data.getUserById).slice(0,8);\n      this.setState({userAlert: responseAlert, selectedUser: resData.data.getUserById, detailsLoaded:true, isLoading: false, activityA: requestBody});\n      this.context.selectedUser = this.state.selectedUser;\n      // this.logUserActivity();\n    })\n    .catch(err => {\n      this.setState({userAlert: err});\n      if (this.isActive) {\n        this.setState({ isLoading: false });\n      }\n    });\n};\n  selectUserNoDetail = (user) => {\n  this.setState({selectedUser: user});\n  this.context.selectedUser = user;\n}\n\nhideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n}\n\n\nonFriendRequest = (args) => {\n    console.log(\"sending friend request...\",args._id);\n    this.setState({ userAlert: \"sending friend request...\"});\n    const activityId = this.context.activityId;\n    const senderId = activityId;\n    const receiverId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {sendFriendRequest(\n            activityId:\"${activityId}\",\n            senderId:\"${senderId}\",\n            receiverId:\"${receiverId}\"\n          )\n          {_id,role,username,public,clientConnected,friendRequests{date,sender{_id},receiver{_id}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(JSON.stringify(resData.data.sendFriendRequest.friendRequests));\n        const responseAlert = JSON.stringify(resData.data.sendFriendRequest).slice(0,8);\n        this.setState({userAlert: responseAlert, activityA: requestBody});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n\n  }\n\nonViewAttachment = (attachment) => {\n\n      this.setState({showAttachment: true})\n\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  }\n\ncloseAttachmentView = () => {\n\n      this.setState({showAttachment: false})\n  }\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price,requirementsg}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true &&\n        this.state.detailsLoaded === true && (\n        <UserDetailViewer\n          user={this.state.selectedUser}\n          onHideUserDetail={this.hideDetailHandler}\n          canDelete={this.state.canDelete}\n          onDelete={this.deleteListUser}\n          canReport={this.state.canReport}\n          onReport={this.reportUser}\n          onFriendRequest={this.onFriendRequest}\n          onStartSendMessage={this.startSendMessage}\n          creatingMessage={this.state.creatingMessage}\n          messageReceiver={this.state.messageReceiver}\n          cancelMessage={this.cancelMessage}\n          sendMessage={this.sendMessage}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <UserList\n                            canReport={this.state.canReport}\n                            onReport={this.reportUser}\n                             users={this.state.users}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectUserNoDetail}\n\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchUserFieldRegexForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchRegexHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                          <SearchUserFieldBasicForm\n                          authUserId={this.context.userId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchBasicHandler}\n                            confirmText=\"Search\"\n                            user={this.context.selectedUser}\n                          />\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.userSearchField}  ,   Query: {this.state.userSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchUsers !== [] && (\n                          <SearchUserList\n                          canReport={this.state.canReport}\n                          onReport={this.reportUser}\n                           users={this.state.searchUsers}\n                           authId={this.context.activityId}\n                           onViewDetail={this.showDetailHandler}\n                           onSelectNoDetail={this.selectUserNoDetail}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default UsersPage;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport './UserItem.css';\n\nexport default function lesssonItem (props) {\n  return (\n  <Router>\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n\n    <Card style={{ width: '18rem' }}>\n\n    <Card.Body>\n      <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        _id: {props._id}\n      </Card.Text>\n      <Card.Text>\n        subtitle: {props.subtitle}\n      </Card.Text>\n      <Card.Text>\n        category: {props.category}\n      </Card.Text>\n      <Card.Text>\n        leadInstructorId: {props.instructors[0]._id}\n      </Card.Text>\n\n      <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n        Details\n      </Button>\n\n      {props.onSelectNoDetail && (\n      <Button variant=\"primary\" onClick={props.onSelectNoDetail.bind(this, props.lesson)}>\n        Select\n      </Button>\n      )}\n      {props.canReport === true && (\n        <Button variant=\"danger\" onClick={props.onReport.bind(this, props._id)}>\n        Report\n        </Button>\n      )}\n    </Card.Body>\n    </Card>\n\n  </li>\n  </Router>\n);\n}\n","import React from 'react';\n\nimport LessonItem from './LessonItem/LessonItem';\nimport './UserList.css';\n\nconst lessonList = props => {\n\n  const lessons = props.lessons.map(lesson => {\n    return (\n      <LessonItem\n        key={lesson._id}\n        lesson={lesson}\n        authId={props.authId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onSelectNoDetail={props.onSelectNoDetail}\n        onDetail={props.onViewDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n        puplic={props.public}\n      />\n    );\n  });\n\n  return <ul className=\"user__list1_master\">{lessons}</ul>;\n};\n\nexport default lessonList;\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport './UserItem.css';\n\nconst searchLessonItem = props => (\n  <li key={props.authId} className=\"users__list-item_master\">\n    <div>\n      <p className=\"userItemHeading\"> ID:</p>\n      <p className=\"userItemText\">\n        {props._id}\n      </p>\n      <p className=\"userItemHeading\"> Title:</p>\n      <p className=\"userItemText\">\n        {props.title}\n      </p>\n      <p className=\"userItemHeading\"> Category:</p>\n      <p className=\"userItemText\">\n        {props.category}\n      </p>\n    </div>\n    <div>\n    <Button variant=\"primary\" onClick={props.onDetail.bind(this, props._id)}>\n          Details\n        </Button>\n        {props.onSelectNoDetail && (<Button variant=\"primary\" onClick={props.onSelectNoDetail.bind(this, props.lesson)}>\n          Select\n        </Button>)}\n    </div>\n  </li>\n);\n\nexport default searchLessonItem;\n","import React from 'react';\n// import Accordion from 'react-bootstrap/Accordion';\n// import Button from 'react-bootstrap/Button';\n\nimport SearchLessonItem from './LessonItem/SearchLessonItem';\nimport './UserList.css';\n\nconst searchLessonList = props => {\n\n  const searchLessons = props.lessons.map(lesson => {\n    return (\n      <React.Fragment>\n      <SearchLessonItem\n        key={lesson._id}\n        lesson={lesson}\n        userId={props.authUserId}\n        _id={lesson._id}\n        title={lesson.title}\n        subtitle={lesson.subtitle}\n        category={lesson.category}\n        instructors={lesson.instructors}\n        gallery={lesson.gallery}\n        schedule={lesson.schedule}\n        sessions={lesson.sessions}\n        onDetail={props.onViewDetail}\n        onSelectNoDetail={props.onSelectNoDetail}\n        canReport={props.canReport}\n        onReport={props.onReport}\n      />\n      </React.Fragment>\n    );\n  });\n  return <ul className=\"user__list1_master\">{searchLessons}</ul>;\n};\n\nexport default searchLessonList;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonSessionList from './LessonList/LessonSessionList';\nimport LessonScheduleList from './LessonList/LessonScheduleList';\nimport LessonInstructorList from './LessonList/LessonInstructorList';\nimport LessonRequirementList from './LessonList/LessonRequirementList';\nimport LessonMaterialList from './LessonList/LessonMaterialList';\nimport LessonTagList from './LessonList/LessonTagList';\nimport LessonImageList from './LessonList/LessonImageList';\nimport LessonFileList from './LessonList/LessonFileList';\nimport LessonReviewList from './LessonList/LessonReviewList';\nimport CreateLessonSessionForm from '../Forms/lesson/CreateLessonSessionForm';\nimport UpdateLessonBasicForm from '../Forms/lesson/UpdateLessonBasicForm';\nimport UpdateLessonFieldForm from '../Forms/lesson/UpdateLessonFieldForm';\n\nimport AddLessonRequirementsForm from '../Forms/lesson/AddLessonRequirementsForm';\nimport AddLessonMaterialsForm from '../Forms/lesson/AddLessonMaterialsForm';\nimport AddLessonTagsForm from '../Forms/lesson/AddLessonTagsForm';\nimport AddLessonImageForm from '../Forms/lesson/AddLessonImageForm';\nimport AddLessonFileForm from '../Forms/lesson/AddLessonFileForm';\nimport AddLessonInstructorForm from '../Forms/lesson/AddLessonInstructorForm';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst LessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  const {...user} = props.user;\n  \n  let userLikedLessons = [];\n  let hasLiked = false;\n  if (user.likedLessons !== []) {\n    userLikedLessons = user.likedLessons.map(x => x._id);\n    hasLiked = userLikedLessons.includes(lesson._id.toString());\n  }\n\n  const instructorIds = lesson.instructors.map(x => x._id)\n  const isInstructor = instructorIds.includes(props.authId);\n  let canDelete = false;\n  if (isInstructor === true ) {\n    canDelete = true\n  }\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          {isInstructor === true &&(\n            <Card.Text>\n            Your lesson\n            </Card.Text>\n          )}\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Sku:</span> {lesson.sku}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n          </Card.Text>\n\n          <Card.Text>\n          ID: {lesson.instructors[0]._id}\n          </Card.Text>\n          <Card.Text>\n          Username: {lesson.instructors[0].username}\n          </Card.Text>\n          <Card.Text>\n            Contact\n          </Card.Text>\n          <Card.Text>\n            Email: {lesson.instructors[0].contact.email}\n          </Card.Text>\n\n          </Col>\n\n        </Row>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Schedule\n          </Card.Text>\n          <Button variant=\"danger\" onClick={props.toggleSchedule}>\n            show/hide\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n          </Col>\n        </Row>\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n\n            {hasLiked !== true && (\n            <Button variant=\"danger\" onClick={props.onLikeLesson.bind(this, lesson._id)}>\n              Like\n            </Button>\n            )}\n\n            { props.canDelete === true && (\n              <Button variant=\"danger\" onClick={props.onDelete.bind(this, lesson._id)}>\n                Delete !!??\n              </Button>\n            )}\n            { props.canReport === true && (\n              <Button variant=\"danger\" onClick={props.onReport.bind(this, lesson._id)}>\n                Report!!??\n              </Button>\n            )}\n          </Col>\n          </Row>\n\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"sessions\" title=\"sessions\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n      <Row className=\"detailCardRow\">\n\n        <Col className=\"detailCardCol\">\n        <Card.Text>\n        Sessions:\n        </Card.Text>\n        <Button variant=\"primary\" onClick={props.onSessionLoad.bind(this, lesson._id)}>\n          See Sessions\n        </Button>\n        <Button variant=\"danger\" onClick={props.onHideSessions}>\n          x\n        </Button>\n        {props.sessionsLoaded === true && (\n          <LessonSessionList\n          isInstructor={isInstructor}\n          lessonSessions={lesson.sessions}\n          onBookSession={props.onBookSession}\n          onAddCartLesson={props.onAddCartLesson}\n          showSessionBooked={props.showSessionBooked}\n          showSessionAttended={props.showSessionAttended}\n          hideSessionBooked={props.hideSessionBooked}\n          hideSessionAttended={props.hideSessionAttended}\n          sessionBookedState={props.sessionBookedState}\n          sessionAttendedState={props.sessionAttendedState}\n\n        />\n      )}\n\n          {isInstructor === true && (\n          <Button variant=\"primary\" onClick={props.startCreateSession.bind(this, lesson._id)}>\n            New Session\n          </Button>\n          )}\n          {props.creatingSession === true &&\n            isInstructor === true && (\n            <CreateLessonSessionForm\n              authId={props.authId}\n              onCancel={props.cancelCreateSession}\n              onConfirm={props.createLessonSession}\n            />\n          )}\n          </Col>\n\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"materials/requirements\" title=\"materials/requirements\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Requirements\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleRequirements}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'requirements')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'requirements' && (\n              <AddLessonRequirementsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonRequirements}\n              />\n            )}\n            {props.showRequirementsState === true && (\n              <LessonRequirementList\n                lessonRequirements={lesson.requirements}\n                canDelete\n                onDelete={props.deleteLessonRequirement}\n              />\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Materials\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleMaterials}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'materials')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'materials' && (\n              <AddLessonMaterialsForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonMaterials}\n              />\n            )}\n            {props.showMaterialsState === true && (\n              <LessonMaterialList\n                lessonMaterials={lesson.materials}\n                canDelete\n                onDelete={props.deleteLessonMaterial}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n\n      <Tab eventKey=\"images\" title=\"images\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Images\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleImages}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'images')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'images' && (\n              <AddLessonImageForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonImage}\n              />\n            )}\n            {props.showImagesState === true && (\n              <LessonImageList\n                lessonImages={lesson.gallery}\n                canDelete\n                onDelete={props.deleteLessonImage}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"files\" title=\"files\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Files\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleFiles}>\n              Show/Hide\n            </Button>\n            {isInstructor === true && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'files')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'files' && (\n              <AddLessonFileForm\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonFile}\n              />\n            )}\n            {props.showFilesState === true && (\n              <LessonFileList\n                lessonFiles={lesson.files}\n                canDelete\n                onDelete={props.deleteLessonFile}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n\n      <Tab eventKey=\"instructors\" title=\"instructors\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Instructors\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleInstructors}>\n              Show/Hide\n            </Button>\n            {isInstructor === true &&\n              JSON.stringify(props.selectedInstructor) === \"{}\" && (\n            <Button variant=\"warning\">\n              Select an Instructor to Add\n            </Button>\n            )}\n            {isInstructor === true &&\n              JSON.stringify(props.selectedInstructor) !== \"{}\" && (\n            <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'instructors')}>\n              Add\n            </Button>\n            )}\n            {props.lessonAddField === 'instructors' &&  (\n              <AddLessonInstructorForm\n              selectedInstructor={props.selectedInstructor}\n              authId={props.authId}\n              onCancel={props.cancelLessonAdd}\n              onConfirm={props.addLessonInstructor}\n              />\n            )}\n            {props.showInstructorsState === true && (\n              <LessonInstructorList\n              canDelete\n              onDelete={props.deleteLessonInstructor}\n                lessonInstructors={lesson.instructors}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"tags\" title=\"tags\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n      <Row>\n        <Col>\n        <Card.Text>\n        Tags\n        </Card.Text>\n          <Button variant=\"danger\" onClick={props.toggleTags}>\n            Show/Hide\n          </Button>\n          {isInstructor === true && (\n          <Button variant=\"danger\" onClick={props.startLessonAdd.bind(this, 'tags')}>\n            Add\n          </Button>\n          )}\n          {props.lessonAddField === 'tags' && (\n            <AddLessonTagsForm\n            authId={props.authId}\n            onCancel={props.cancelLessonAdd}\n            onConfirm={props.addLessonTags}\n            />\n          )}\n          {props.showTagsState === true && (\n            <LessonTagList\n              lessonTags={lesson.tags}\n              canDelete\n              onDelete={props.deleteLessonTag}\n            />\n          )}\n        </Col>\n      </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"reviews\" title=\"reviews\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n        <Row>\n          <Col>\n          <Card.Text>\n          Reviews\n          </Card.Text>\n            <Button variant=\"danger\" onClick={props.toggleReviews}>\n              Show/Hide\n            </Button>\n            {props.showReviewsState === true && (\n              <LessonReviewList\n                lessonReviews={lesson.reviews}\n              />\n            )}\n          </Col>\n        </Row>\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n      <Tab eventKey=\"edit\" title=\"edit\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n\n          {isInstructor === true && (\n              <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n              <Button variant=\"danger\" onClick={props.onStartEditLessonBasic}>\n                Edit Basic\n              </Button>\n                {props.editingLesson === true && (\n                  <UpdateLessonBasicForm\n                  lesson={lesson}\n                  onCancel={props.cancelEditBasic}\n                  onConfirm={props.editLessonBasic}\n                  />\n                )}\n              </Col>\n\n            </Row>\n          )}\n\n            {isInstructor === true && (\n              <Row className=\"detailCardRow\">\n              <Col className=\"detailCardCol\">\n              <Button variant=\"danger\" onClick={props.onStartEditLessonField}>\n                Edit Field\n              </Button>\n                {props.editingLessonField === true && (\n                  <UpdateLessonFieldForm\n                  lesson={lesson}\n                  onCancel={props.cancelEditField}\n                  onConfirm={props.editLessonField}\n                  />\n                )}\n              </Col>\n\n            </Row>\n          )}\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default LessonDetail;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport './UserItem.css';\n\nexport default function searchSession (props) {\n  console.log('boop', props.session);\n  return (\n  <li key={props.authId} className=\"users__list-item_detail users__list-item_detail4\">\n    <Card style={{ width: '18rem' }}>\n    <p>here</p>\n    <Card.Body>\n      <Card.Title>{props.session.title}</Card.Title>\n      <Card.Text>\n        date: {props.session.date}\n      </Card.Text>\n      <Card.Text>\n        time: {props.session.time}\n      </Card.Text>\n    </Card.Body>\n    </Card>\n\n  </li>\n);\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport LessonDetail from './Lessons/LessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst LessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <LessonDetail\n      authId={props.authId}\n      user={props.user}\n      lesson={props.lesson}\n\n      sessionsLoaded={props.sessionsLoaded}\n      onSessionLoad={props.onSessionLoad}\n      onHideSessions={props.onHideSessions}\n      onBookSession={props.onBookSession}\n\n      onAddCartLesson={props.onAddCartLesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n\n      startCreateSession={props.startCreateSession}\n      creatingSession={props.creatingSession}\n      cancelCreateSession={props.cancelCreateSession}\n      createLessonSession={props.createLessonSession}\n\n      onStartEditLessonBasic={props.onStartEditLessonBasic}\n      onStartEditLessonField={props.onStartEditLessonField}\n      editingLesson={props.editingLesson}\n      editingLessonField={props.editingLessonField}\n      cancelEditBasic={props.cancelEditBasic}\n      editLessonBasic={props.editLessonBasic}\n      cancelEditField={props.cancelEditField}\n      editLessonField={props.editLessonField}\n\n      toggleSchedule={props.toggleSchedule}\n      showScheduleState={props.showScheduleState}\n\n      showSessionBooked={props.showSessionBooked}\n      showSessionAttended={props.showSessionAttended}\n      hideSessionBooked={props.hideSessionBooked}\n      hideSessionAttended={props.hideSessionAttended}\n      sessionBookedState={props.sessionBookedState}\n      sessionAttendedState={props.sessionAttendedState}\n      addSessionAttendance={props.addSessionAttendance}\n\n      toggleInstructors={props.toggleInstructors}\n      showInstructorsState={props.showInstructorsState}\n      toggleRequirements={props.toggleRequirements}\n      showRequirementsState={props.showRequirementsState}\n      toggleMaterials={props.toggleMaterials}\n      showMaterialsState={props.showMaterialsState}\n      toggleReviews={props.toggleReviews}\n      showReviewsState={props.showReviewsState}\n      toggleTags={props.toggleTags}\n      showTagsState={props.showTagsState}\n      toggleImages={props.toggleImages}\n      showImagesState={props.showImagesState}\n      toggleFiles={props.toggleFiles}\n      showFilesState={props.showFilesState}\n\n      lessonAddField={props.lessonAddField}\n      startLessonAdd={props.startLessonAdd}\n      cancelLessonAdd={props.cancelLessonAdd}\n      selectedInstructor={props.selectedInstructor}\n      addLessonInstructor={props.addLessonInstructor}\n      addLessonMaterials={props.addLessonMaterials}\n      addLessonTags={props.addLessonTags}\n      addLessonRequirements={props.addLessonRequirements}\n      addLessonImage={props.addLessonImage}\n      addLessonFile={props.addLessonFile}\n\n      onLikeLesson={props.onLikeLesson}\n      deleteLessonTag={props.deleteLessonTag}\n      deleteLessonRequirement={props.deleteLessonRequirement}\n      deleteLessonMaterial={props.deleteLessonMaterial}\n      deleteLessonImage={props.deleteLessonImage}\n      deleteLessonFile={props.deleteLessonFile}\n      deleteLessonInstructor={props.deleteLessonInstructor}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default LessonDetailViewer;\n","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CreateUserForm.css';\n\n\nconst CreateLessonForm = (props) => {\n\nreturn (\n<div className=\"CreateFormContainer\">\n{props.title && (\n  <h4 className=\"signupTitle\">{props.title}</h4>\n)}\n<Form onSubmit={props.onConfirm}>\n\n<Form.Row>\n  <Form.Group as={Col} controlId=\"formGridTitle\">\n    <Form.Label>Title</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Title\"/>\n  </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridSubtitle\">\n    <Form.Label>Subtitle</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Subtitle\"/>\n  </Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDuration\">\n  <Form.Label>Duration</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Enter Duration\"/>\n</Form.Group>\n<Form.Group as={Col} controlId=\"formGridType\">\n  <Form.Label>Type</Form.Label>\n  <Form.Control as=\"select\">\n  <option>type a</option>\n  <option>type b</option>\n  </Form.Control>\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridCategory\">\n  <Form.Label>Category</Form.Label>\n  <Form.Control as=\"select\">\n  <option>a_b_c_d</option>\n  <option>a_b_c_x</option>\n  <option>a_b_z</option>\n  <option>a_b_c_y</option>\n  </Form.Control>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridSku\">\n  <Form.Label>Sku</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"Sku\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPrice\">\n  <Form.Label>Price</Form.Label>\n  <Form.Control type=\"number\" step='0.01' placeholder=\"Price\" />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridPoints\">\n  <Form.Label>Points</Form.Label>\n  <Form.Control type=\"number\" placeholder=\"Points\" />\n</Form.Group>\n\n</Form.Row>\n\n\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridDescription\">\n  <Form.Label>Description</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"7\" placeholder=\"Description\"/>\n</Form.Group>\n</Form.Row>\n<Form.Row>\n<Form.Group as={Col} controlId=\"formGridNotes\">\n  <Form.Label>Notes</Form.Label>\n  <Form.Control as=\"textarea\"rows=\"5\" placeholder=\"Notes\"/>\n</Form.Group>\n</Form.Row>\n\n<Form.Row>\n{props.canCancel && (\n  <Button variant=\"danger\" className=\"formButton\" onClick={props.onCancel}>Cancel</Button>\n)}\n\n{props.canConfirm && (\n  <Button variant=\"primary\" className=\"formButton\" type=\"submit\">\n  Create\n  </Button>\n)}\n<p>{props.successText}</p>\n</Form.Row>\n\n\n</Form>\n</div>\n\n)};\n\nexport default CreateLessonForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonFieldRegexForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Regex Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>title</option>\n  <option>subtitle</option>\n  <option>type</option>\n  <option>category</option>\n  <option>sku</option>\n  <option>description</option>\n  <option>notes</option>\n  <option>duration</option>\n  <option>requirements</option>\n  <option>tags</option>\n  <option>materials</option>\n  <option>files.name</option>\n  <option>sessions.title</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonFieldRegexForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonFieldBasicForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Basic Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>select</option>\n  <option>price</option>\n  <option>points</option>\n  <option>schedule.date</option>\n  <option>schedule.time</option>\n  <option>instructors</option>\n  <option>attendees</option>\n  <option>sessions.booked</option>\n  <option>sessions.attended</option>\n  <option>sessions.bookedAmount</option>\n  <option>sessions.attendedAmount</option>\n  <option>sessions.date</option>\n  <option>sessions.full</option>\n  <option>sessions.inProgress</option>\n  <option>sessions.limit</option>\n  <option>sessions.amount</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Basic Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonFieldBasicForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchLessonSessionForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Label>Lesson: {props.lesson._id}</Form.Label>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridSessionDate\">\n  <Form.Label>SessionDate</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"SessionDate\"/>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formGridSessionTitle\">\n  <Form.Label>SessionTitle</Form.Label>\n  <Form.Control type=\"text\" placeholder=\"SessionTitle\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchLessonSessionForm;\n","import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\nimport LessonDetail from '../../components/Lessons/LessonDetail';\nimport SearchSession from '../../components/Lessons/LessonList/LessonItem/SearchSession';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport SidebarPage from '../Sidebar';\nimport SidebarControl from '../../components/SidebarControl';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport AttachmentViewer from '../../components/AttachmentViewer';\nimport LessonDetailViewer from '../../components/LessonDetailViewer';\n\nimport CreateLessonForm from '../../components/Forms/lesson/CreateLessonForm';\nimport SearchLessonFieldRegexForm from '../../components/Forms/lesson/SearchLessonFieldRegexForm';\nimport SearchLessonFieldBasicForm from '../../components/Forms/lesson/SearchLessonFieldBasicForm';\nimport SearchLessonSessionForm from '../../components/Forms/lesson/SearchLessonSessionForm';\n\n\nimport './Users.css';\n\nclass LessonsPage extends Component {\n  state = {\n    creating: false,\n    updating: false,\n    deleting: false,\n    searching: false,\n    user: null,\n    users: [],\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    searchSession: null,\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonUpdateField: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    sessionsLoaded: false,\n    creatingSession: false,\n    editingLesson: false,\n    editingLessonField: false,\n    showScheduleState: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    showAttachment: false,\n    showThisAttachmentFile: null,\n    showThisAttachmentType: null,\n    sidebarShow: true,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    sessionBookedState: false,\n    sessionAttendedState: false,\n    activityA: null,\n    showInstructorsState: false,\n    showRequirementsState: false,\n    showMaterialsState: false,\n    showTagsState: false,\n    showFilesState: false,\n    showImagesState: false,\n    showReviewsState: false,\n    lessonAddField: null,\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n\n    if (this.context.role === \"Admin\"){\n      this.setState({canDelete: true})\n    }\n\n    if (JSON.stringify(this.context.selectedLesson) !== '{}') {\n      this.setState({ selectedLesson: this.context.selectedLesson })\n    }\n\n    this.fetchLessonsBasic();\n  }\n\n  modalConfirmSearchRegexHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const search = { field, query };\n    const requestBody = {\n      query: `\n        query {getLessonsByFieldRegex(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\")\n          {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},attendees{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonsByFieldRegex).slice(0,8);\n        const searchLessons = resData.data.getLessonsByFieldRegex;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchBasicHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    let field = null;\n    let query = event.target.formBasicQuery.value;\n    if (event.target.formBasicFieldSelect.value === \"select\") {\n      field = event.target.formBasicField.value;\n    } else {\n      field = event.target.formBasicFieldSelect.value;\n    }\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const search = { field, query };\n    const requestBody = {\n      query: `\n        query {getLessonsByField(\n          activityId:\"${activityId}\",\n          field:\"${field}\",\n          query:\"${query}\")\n          {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},attendees{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonsByField).slice(0,8);\n        const searchLessons = resData.data.getLessonsByField;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalConfirmSearchSessionHandler = (event) => {\n    event.preventDefault();\n    let activityId = this.context.activityId;\n    const token = this.context.token;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionDate = event.target.formGridSessionDate.value;\n    const sessionTitle = event.target.formGridSessionTitle.value;\n\n    const requestBody = {\n      query: `\n        query {getLessonSession(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\",\n          lessonInput:{\n            sessionTitle:\"${sessionTitle}\",\n            sessionDate:\"${sessionDate}\"\n          })\n          {title,date,time,limit,amount,bookedAmount,booked{_id,username},attendedAmount,attended{_id,username},inProgress,full,url,lessonId,lessonTitle,lessonInstructors,userId}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getLessonSession).slice(0,8);\n        const searchSession = resData.data.getLessonSession;\n        // console.log('baap',resData,searchSession);\n        this.setState({ searchSession: searchSession, userAlert: responseAlert, activityId: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  startCreateLesson = () => {\n    this.setState({creating: true})\n  }\n  createLessonHandler = (event) => {\n    this.setState({creating: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n    const duration = event.target.formGridDuration.value;\n\n    const requestBody = {\n      query: `\n        mutation {createLesson(\n          activityId:\"${activityId}\",\n          creatorId:\"${creatorId}\",\n          lessonInput:{\n            title:\"${title}\",\n            subtitle:\"${subtitle}\",\n            type:\"${type}\",\n            category:\"${category}\",\n            price:${price},\n            points:${points},\n            description:\"${description}\",\n            notes:\"${notes}\",\n            duration:\"${duration}\",\n            sku:\"${sku}\"\n          })\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.createLesson).slice(0,8);\n        this.setState({ lesson: resData.data.createLesson, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  onStartEditLessonBasic = () => {\n    this.setState({editingLesson: true})\n  }\n  onStartEditLessonField = () => {\n    this.setState({editingLessonField: true})\n  }\n  cancelEditBasic = () => {\n    this.setState({editingLesson: false})\n  }\n  cancelEditField = () => {\n    this.setState({editingLessonField: false})\n  }\n  editLessonBasic = (event) => {\n    event.preventDefault();\n    this.setState({editingLesson: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const title = event.target.formGridTitle.value;\n    const subtitle = event.target.formGridSubtitle.value;\n    const duration = event.target.formGridDuration.value;\n    const type = event.target.formGridType.value;\n    const category = event.target.formGridCategory.value;\n    const sku = event.target.formGridSku.value;\n    const price = event.target.formGridPrice.value;\n    const points = event.target.formGridPoints.value;\n    const description = event.target.formGridDescription.value;\n    const notes = event.target.formGridNotes.value;\n\n    const requestBody = {\n      query: `\n       mutation {updateLessonBasic(\n         activityId:\"${activityId}\",\n         lessonId:\"${lessonId}\",\n         lessonInput:{\n           title:\"${title}\",\n           subtitle:\"${subtitle}\",\n           type:\"${type}\",\n           category:\"${category}\",\n           price:${price},\n           sku:\"${sku}\",\n           points:${points},\n           description:\"${description}\",\n           notes:\"${notes}\",\n           duration:\"${duration}\"\n         })\n    {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags}}\n    `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonBasic).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonBasic, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  editLessonField = (event) => {\n    event.preventDefault();\n    this.setState({editingLessonField: false})\n    let activityId = this.context.activityId;\n    const creatorId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const token = this.context.token;\n\n    const field = event.target.formGridFieldSelect.value;\n    const query = event.target.formGridQuery.value;\n    const requestBody = {\n      query: `\n         mutation {updateLessonByField(\n           activityId:\"${activityId}\",\n           lessonId:\"${lessonId}\",\n           field:\"${field}\",\n           query:\"${query}\"\n         )\n         {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id,title,author{_id}},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full},promos{_id}}}\n          `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.updateLessonByField).slice(0,8);\n        this.setState({ lesson: resData.data.updateLessonByField, userAlert: responseAlert, activityA: requestBody})\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n  modalCancelHandler = () => {\n    this.setState({ creating: false, updating: false, deleting: false, searching: false});\n  };\n\n  fetchLessonsBasic() {\n    const activityId = this.context.activityId;\n    this.setState({ isLoading: true, userAlert: \"Fetching Lesson Master List...\" });\n    const requestBody = {\n      query: `\n        query {getAllLessons(activityId:\"${activityId}\")\n        {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllLessons, isLoading: false, activityId: requestBody});\n        this.context.lessons = this.state.lessons;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  loadSessions = (args) => {\n    console.log('retriving sessions for this lesson');\n    this.setState({userAlert: 'retriving sessions for this lesson'})\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requestBody = {\n      query: `\n        query {getLessonById(\n          activityId:\"${activityId}\",\n          lessonId:\"${lessonId}\"\n        )\n        {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{email,phone,phone2}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id,username},bookedAmount,attended{_id,username},attendedAmount,inProgress,full,url},promos{_id}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.getLessonById, isLoading: false, sessionsLoaded: true, activityId: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  };\n  hideSessions = () => {\n    this.setState({sessionsLoaded: false})\n  };\n  addCartLesson = (args) => {\n    console.log('adding lesson to cart');\n    this.setState({userAlert: 'adding lesson to cart'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n\n    const requestBody = {\n      query: `\n            mutation {addUserCartLesson(\n              activityId:\"${activityId}\",\n              userId:\"${userId}\",\n              lessonId:\"${lessonId}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTitle:\"${sessionTitle}\"\n            )\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n        // console.log(JSON.stringify(requestBody));\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, isLoading: false, activityA: requestBody});\n        this.context.selectedUser = resData.data.addUserCartLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n  bookSession = (args) => {\n    console.log('booking lesson session');\n    this.setState({userAlert: 'booking lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const sessionTitle = args.title;\n    // const sessionDate = args.date;\n    const sessionDate = new Date (args.date.substr(0,10)*1000).toISOString().slice(0,10);\n    const sessionTime = args.time;\n// console.log(sessionDate);\n    const requestBody = {\n      query: `\n            mutation {addLessonBooking(\n              activityId:\"${activityId}\",\n              lessonId:\"${lessonId}\",\n              userId:\"${userId}\",\n              lessonInput:{\n                sessionTitle:\"${sessionTitle}\",\n                sessionDate:\"${sessionDate}\",\n                sessionTime:\"${sessionTime}\"\n              })\n            {_id,title,subtitle,type,category,price,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},gallery{name,type,path},requirements,materials,files{name,type,size,path},reviews{_id},tags,sessions{title,date,time,limit,amount,booked{_id},bookedAmount,attended{_id},attendedAmount,inProgress,full},promos{_id}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        let responseAlert = null;\n        if (resData.errors !== []) {\n          responseAlert = resData.errors[0].message;\n          // console.log(responseAlert);\n          this.setState({userAlert: responseAlert})\n        }\n        if (resData.data.addLessonBooking !== null) {\n          responseAlert = JSON.stringify(resData.data).slice(0,8);\n          this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonBooking, isLoading: false, activityA: requestBody});\n          this.context.selectedLesson = this.state.selectedLesson;\n        }\n\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  startCreateSession = (args) => {\n    this.setState({creatingSession: true})\n  };\n  cancelCreateSession = () => {\n    this.setState({creatingSession: false})\n  };\n  createLessonSession = (event) => {\n    event.preventDefault();\n    console.log('creating new lesson session');\n    this.setState({userAlert: 'creating new lesson session'});\n\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const sessionTitle = event.target.formGridTitle.value;\n    // const sessionDate = new Date (event.target.patientReferralCalendarVisitDate.value.substr(0,10)*1000).toLocaleDateString().slice(0,10);\n    let sessionDate = event.target.CalendarDate.value;\n    sessionDate = new Date(sessionDate).toLocaleDateString().slice(0,10);\n    const sessionTime = event.target.formGridTime.value;\n    const sessionLimit = event.target.formGridLimit.value;\n    const sessionAmount = 0;\n    console.log(sessionDate);\n\n    const requestBody = {\n      query: `\n          mutation {addLessonSession(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              sessionTitle:\"${sessionTitle}\",\n              sessionDate:\"${sessionDate}\",\n              sessionTime:\"${sessionTime}\",\n              sessionLimit:${sessionLimit},\n              sessionAmount:${sessionAmount}\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,duration,schedule{date,time},instructors{_id,username,contact{phone,phone2,email}},tags,sessions{title,date,time,limit,inProgress,full}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonSession, isLoading: false, creatingSession: false, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  };\n\n  showSessionBooked = () => {\n    this.setState({sessionBookedState: true})\n  }\n  hideSessionBooked = () => {\n    this.setState({sessionBookedState: false})\n  }\n  hideSessionAttended = () => {\n    this.setState({sessionAttendedState: false})\n  }\n\n  deleteListLesson = (lessonId) => {\n    console.log(\"delete listed lesson\", lessonId);\n  };\n  reportLesson = (lessonId) => {\n    console.log(\"reporting lesson\", lessonId);\n  };\n\n  showDetailHandler = lessonId => {\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  selectLessonNoDetail = (lesson) => {\n    this.setState({selectedLesson: lesson});\n    this.context.selectedLesson = lesson;\n  };\n\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n  onViewAttachment = (attachment) => {\n      this.setState({showAttachment: true})\n      const file = \"https://ent-emr-bucket.s3-us-east-2.amazonaws.com/\"+attachment.path+\"/\"+attachment.name;\n      const type = attachment.format;\n\n      this.setState({showThisAttachmentFile: file, showThisAttachmentType: type, })\n  };\n  closeAttachmentView = () => {\n      this.setState({showAttachment: false})\n  };\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing user search results\"});\n  }\n\n  showSidebar = () => {\n      this.setState({\n        sidebarShow: true,\n        mCol2Size: 9\n      })\n  }\n  hideSidebar = () => {\n      this.setState({\n        sidebarShow: false,\n        mCol2Size: 11\n      })\n  }\n\n  logUserActivity() {\n    console.log('logUserActivity...');\n    this.setState({userAlert: 'logUserActivity...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const token = this.context.token;\n    const today = new Date();\n    const request = this.state.activityA;\n\n    const requestBody = {\n      query:`\n          mutation {addUserActivity(\n            activityId:\"${activityId}\",\n            userId:\"${userId}\",\n            userInput:{\n              activityRequest:\"${request}\"\n            })\n          {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price,requirementsg}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username}},orders{_id,date,time,type,buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.addUserActivity).slice(2,25);\n        this.setState({userAlert: responseAlert, user: resData.data.addUserActivity})\n        this.context.user = this.state.user;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  };\n\n  toggleInstructors = () => {\n    if (this.state.showInstructorsState === false) {\n      this.setState({showInstructorsState: true})\n    } else {\n      this.setState({showInstructorsState: false})\n    }\n  }\n  toggleSchedule = () => {\n    if (this.state.showScheduleState === false) {\n      this.setState({showScheduleState: true})\n    } else {\n      this.setState({showScheduleState: false})\n    }\n  }\n  toggleRequirements = () => {\n    if (this.state.showRequirementsState === false) {\n      this.setState({showRequirementsState: true})\n    } else {\n      this.setState({showRequirementsState: false})\n    }\n  }\n  toggleMaterials = () => {\n    if (this.state.showMaterialsState === false) {\n      this.setState({showMaterialsState: true})\n    } else {\n      this.setState({showMaterialsState: false})\n    }\n  }\n  toggleTags = () => {\n    if (this.state.showTagsState === false) {\n      this.setState({showTagsState: true})\n    } else {\n      this.setState({showTagsState: false})\n    }\n  }\n  toggleImages = () => {\n    if (this.state.showImagesState === false) {\n      this.setState({showImagesState: true})\n    } else {\n      this.setState({showImagesState: false})\n    }\n  }\n  toggleFiles = () => {\n    if (this.state.showFilesState === false) {\n      this.setState({showFilesState: true})\n    } else {\n      this.setState({showFilesState: false})\n    }\n  }\n  toggleReviews = () => {\n    if (this.state.showReviewsState === false) {\n      this.setState({showReviewsState: true})\n    } else {\n      this.setState({showReviewsState: false})\n    }\n  }\n\n  startLessonAdd = (args) => {\n    // console.log(args);\n    this.setState({lessonAddField: args})\n  }\n  cancelLessonAdd = (args) => {\n    this.setState({lessonAddField: null})\n  }\n\n  addLessonMaterials = (event) => {\n    event.preventDefault();\n    this.setState({userAlert: '...adding lesson materials...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const materials = event.target.formGridMaterials.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonMaterials(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              materials: \"${materials}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonMaterials, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonTags = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson tags...');\n    this.setState({userAlert: '...adding lesson tags...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const tags = event.target.formGridTags.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonTags(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tags: \"${tags}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonTags, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonRequirements = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson requirements ...');\n    this.setState({userAlert: '...adding lesson requirements ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requirements = event.target.formGridRequirements.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonRequirements(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirements: \"${requirements}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonRequirements, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  addLessonImage = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson Images ...');\n    this.setState({userAlert: '...adding lesson Images ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const imageName = event.target.formGridImagename.value;\n    const imageType = event.target.formGridImagetype.value;\n    const imagePath = event.target.formGridImagepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\"\n              imageType: \"${imageType}\"\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonImage, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonFile = (event) => {\n    event.preventDefault();\n    // console.log('...adding lesson Files ...');\n    this.setState({userAlert: '...adding lesson Files ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const fileName = event.target.formGridFilename.value;\n    const fileType = event.target.formGridFilesize.value;\n    const fileSize = event.target.formGridFiletype.value;\n    const filePath = event.target.formGridFilepath.value;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\"\n              fileType: \"${fileType}\"\n              fileSize: \"${fileSize}\"\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonFile, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n  addLessonInstructor = (event) => {\n    event.preventDefault();\n    console.log('...adding lesson instructor ...');\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const instructorId = this.context.selectedUser._id;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requestBody = {\n      query: `\n          mutation {addLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\"\n            instructorId: \"${instructorId}\")\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.addLessonInstructor, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n\n  }\n\n  likeLesson = (args) => {\n    // console.log('...adding lesson like...',args);\n    this.setState({userAlert: '...adding lesson like...'})\n    const activityId = this.context.activityId;\n    const userId = activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const requestBody = {\n      query: `\n          mutation {addUserLikedLesson(\n            activityId:\"${activityId}\",\n            userId: \"${userId}\",\n            lessonId:\"${lessonId}\",)\n            {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode,primary},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle,link},interests,perks{_id},promos{_id},friends{_id,name,username,loggedIn,clientConnected,contact{phone,phone2,email},profileImages{name,type,path},socialMedia{platform,handle,link}},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id,title,category,price},bookedLessons{date,session{date,title,time},ref{_id,title,category,price}},attendedLessons{date,ref{_id,title,category,price}},taughtLessons{date,ref{_id,title,category,price}},wishlist{date,ref{_id,title,category,price},booked},cart{dateAdded,sessionDate,lesson{_id,title,sku,price}},reviews{_id,date,type,title,author{_id,username},lesson{_id,title},body,rating},comments{_id},messages{_id,date,time,type,sender{_id,username},receiver{_id,username},subject,message,read},orders{_id,date,time,type,totals{a,b,c},buyer{_id},receiver{_id},lessons{price,ref{_id}}},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.context.user = resData.data.addUserLikedLesson;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  deleteLessonTag = (args) => {\n    console.log('...deleting lesson tag...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const tag = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonTag(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              tag:\"${tag}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.deleteLessonTag);\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonTag, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonRequirement = (args) => {\n    console.log('...deleting lesson requirement...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const requirement = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonRequirement(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              requirement:\"${requirement}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonRequirement, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonMaterial = (args) => {\n    console.log('...deleting lesson material...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const material = args;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonMaterial(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              material:\"${material}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonMaterial, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonImage = (args) => {\n    console.log('...deleting lesson image...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const imageName = args.name;\n    const imageType = args.type;\n    const imagePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonImage(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              imageName: \"${imageName}\",\n              imageType: \"${imageType}\",\n              imagePath: \"${imagePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonImage, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonFile = (args) => {\n    console.log('...deleting lesson file...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n\n    const fileName = args.name;\n    const fileType = args.type;\n    const fileSize = args.size;\n    const filePath = args.path;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonFile(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            lessonInput:{\n              fileName: \"${fileName}\",\n              fileType: \"${fileType}\",\n              fileSize: \"${fileSize}\",\n              filePath: \"${filePath}\"\n            })\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonFile, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n  deleteLessonInstructor = (args) => {\n    console.log('...deleting lesson instructor...',args);\n    this.setState({userAlert: '...adding lesson instructor ...', lessonAddField: null });\n    const activityId = this.context.activityId;\n    const lessonId = this.state.selectedLesson._id;\n    const instructorId = args._id;\n\n    const requestBody = {\n      query: `\n          mutation {deleteLessonInstructor(\n            activityId:\"${activityId}\",\n            lessonId:\"${lessonId}\",\n            instructorId: \"${instructorId}\"\n          )\n            {_id,title,subtitle,type,category,price,sku,points,description,notes,requirements,materials,duration,files{name,type,size,path},gallery{name,type,path},schedule{date,time},gallery{name,type,path},instructors{_id,username,contact{phone,phone2,email},socialMedia{platform,handle,link},profileImages{name,type,path}},tags,reviews{_id,title,type,author{_id,username},lesson{_id,title},body,rating}}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, selectedLesson: resData.data.deleteLessonInstructor, activityA: requestBody});\n        this.context.selectedLesson = this.state.selectedLesson;\n        // this.logUserActivity();\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      {this.state.showAttachment === true && (\n        <AttachmentViewer\n          onCloseAttachmentView={this.closeAttachmentView}\n          attachmentFile={this.state.showThisAttachmentFile}\n          attachmentType={this.state.showThisAttachmentType}\n        />\n      )}\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.userAlert}\n      />\n\n      {this.state.showDetail === true && (\n        <LessonDetailViewer\n          authId={this.context.activityId}\n          user={this.context.user}\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n\n          sessionsLoaded={this.state.sessionsLoaded}\n          onSessionLoad={this.loadSessions}\n          onHideSessions={this.hideSessions}\n          onBookSession={this.bookSession}\n\n          onAddCartLesson={this.addCartLesson}\n\n          startCreateSession={this.startCreateSession}\n          creatingSession={this.state.creatingSession}\n          cancelCreateSession={this.cancelCreateSession}\n          createLessonSession={this.createLessonSession}\n\n          onStartEditLessonBasic={this.onStartEditLessonBasic}\n          onStartEditLessonField={this.onStartEditLessonField}\n          editingLesson={this.state.editingLesson}\n          editingLessonField={this.state.editingLessonField}\n          cancelEditBasic={this.cancelEditBasic}\n          cancelEditField={this.cancelEditField}\n          editLessonBasic={this.editLessonBasic}\n          editLessonField={this.editLessonField}\n\n          showScheduleState={this.state.showScheduleState}\n          toggleSchedule={this.toggleSchedule}\n\n          showSessionBooked={this.showSessionBooked}\n          showSessionAttended={this.showSessionAttended}\n          hideSessionBooked={this.hideSessionBooked}\n          hideSessionAttended={this.hideSessionAttended}\n          sessionBookedState={this.state.sessionBookedState}\n          sessionAttendedState={this.state.sessionAttendedState}\n\n          toggleInstructors={this.toggleInstructors}\n          showInstructorsState={this.state.showInstructorsState}\n          toggleRequirements={this.toggleRequirements}\n          showRequirementsState={this.state.showRequirementsState}\n          toggleMaterials={this.toggleMaterials}\n          showMaterialsState={this.state.showMaterialsState}\n          toggleReviews={this.toggleReviews}\n          showReviewsState={this.state.showReviewsState}\n\n          toggleTags={this.toggleTags}\n          showTagsState={this.state.showTagsState}\n          toggleImages={this.toggleImages}\n          showImagesState={this.state.showImagesState}\n          toggleFiles={this.toggleFiles}\n          showFilesState={this.state.showFilesState}\n\n          startLessonAdd={this.startLessonAdd}\n          cancelLessonAdd={this.cancelLessonAdd}\n          lessonAddField={this.state.lessonAddField}\n          addLessonMaterials={this.addLessonMaterials}\n          addLessonRequirements={this.addLessonRequirements}\n          addLessonTags={this.addLessonTags}\n          addLessonImage={this.addLessonImage}\n          addLessonFile={this.addLessonFile}\n          selectedInstructor={this.context.selectedUser}\n          addLessonInstructor={this.addLessonInstructor}\n\n          onLikeLesson={this.likeLesson}\n          deleteLessonTag={this.deleteLessonTag}\n          deleteLessonRequirement={this.deleteLessonRequirement}\n          deleteLessonMaterial={this.deleteLessonMaterial}\n          deleteLessonImage={this.deleteLessonImage}\n          deleteLessonFile={this.deleteLessonFile}\n          deleteLessonInstructor={this.deleteLessonInstructor}\n        />\n      )}\n      <SidebarControl\n        onShowSidebar={this.showSidebar}\n        onHideSidebar={this.hideSidebar}\n      />\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n        <Col md={2} className=\"MasterCol1\">\n        <SidebarPage\n          you={this.context.user}\n          authId={this.context.activityId}\n        />\n        </Col>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"MasterList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"Create\">+ Lesson</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      {this.state.lessons !== [] && (\n                      <Tab.Pane eventKey=\"MasterList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n                      )}\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchLessonFieldRegexForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchRegexHandler}\n                            confirmText=\"Search\"\n                          />\n                          <SearchLessonFieldBasicForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchBasicHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n\n                        <Tab eventKey=\"Session\" title=\"Search Session\">\n\n                          {this.state.selectedLesson === null && (\n                            <p>Select a lesson 1st</p>\n                          )}\n\n                          {this.state.selectedLesson !== null && (\n                            <SearchLessonSessionForm\n                          authId={this.context.activityId}\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmSearchSessionHandler}\n                            lesson={this.state.selectedLesson}\n                            confirmText=\"Search\"\n                          />)}\n\n                          {this.state.searchSession !== null && (\n                            <SearchSession\n                            authId={this.context.activityId}\n                            session={this.state.searchSession}\n                            />\n                          )}\n                        </Tab>\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}  ,   Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            lessons={this.state.searchLessons}\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             authId={this.context.activityId}\n                             onViewDetail={this.showDetailHandler}\n                             onSelectNoDetail={this.selectLessonNoDetail}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"Create\">\n                        <Button variant=\"outline-primary\" size=\"lg\" className=\"confirmEditButton\" onClick={this.startCreateLesson}>+ Lesson</Button>\n\n                        <Row className=\"userListRow\">\n                          {this.state.creating === true && (\n                            <CreateLessonForm\n                              authId={this.context.activityId}\n                              creator={this.context.user}\n                              canCancel\n                                canConfirm\n                                onCancel={this.modalCancelHandler}\n                                onConfirm={this.createLessonHandler}\n                            />\n                          )}\n                        </Row>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default LessonsPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport LessonScheduleList from './LessonList/LessonScheduleList';\n\n// import AuthContext from '../../context/auth-context';\n\nimport './UserDetail.css';\n\nconst PublicLessonDetail = (props) => {\n\n  const {...lesson} = props.lesson;\n  return (\n    <div className={\"UserDetailBox1\"}>\n\n    <Tabs defaultActiveKey=\"Basic\" id=\"uncontrolled-tab-example\" className=\"tab\">\n\n      <Tab eventKey=\"Basic\" title=\"Basic\">\n      <Card className=\"UserDetailCard\">\n      <Card.Body>\n        <Card.Title><span className=\"ul\">Lesson Details</span></Card.Title>\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">ID:</span> {lesson._id}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Title:</span> {lesson.title}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Subtitle:</span> {lesson.subtitle}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Type:</span> {lesson.type}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Category:</span> {lesson.category}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Price:</span> {lesson.price}\n          </Card.Text>\n          <Card.Text>\n            <span className=\"bold\">Description:</span> {lesson.description}\n          </Card.Text>\n\n          </Col>\n\n          <Col className=\"detailCardCol\">\n          <Card.Text>\n            <span className=\"bold\">Main Instructor:</span>\n            {lesson.instructors[0]._id}\n            {lesson.instructors[0].username}\n          </Card.Text>\n\n          <Button variant=\"danger\" onClick={props.showSchedule}>\n            See dates\n          </Button>\n          <Button variant=\"danger\" onClick={props.hideSchedule}>\n            Hide dates\n          </Button>\n          {props.showScheduleState === true && (\n            <LessonScheduleList\n              lessonSchedule={lesson.schedule}\n            />\n          )}\n\n          </Col>\n\n        </Row>\n\n        <Row className=\"detailCardRow\">\n          <Col className=\"detailCardCol\">\n            <Button variant=\"danger\" onClick={props.onHideLessonDetail}>\n              x\n            </Button>\n          </Col>\n          </Row>\n\n\n      </Card.Body>\n      </Card>\n      </Tab>\n\n    </Tabs>\n\n    </div>\n\n  );\n}\n\nexport default PublicLessonDetail;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport PublicLessonDetail from './Lessons/PublicLessonDetail';\n\nimport \"./AttachmentViewer.css\"\n\nconst PublicLessonDetailViewer = (props) =>{\n\nreturn (\n  <div className=\"attachmentViewerBg\">\n    <div className=\"attachmentViewer\">\n    <PublicLessonDetail\n      lesson={props.lesson}\n      onHideLessonDetail={props.onHideLessonDetail}\n      showSchedule={props.showSchedule}\n      showScheduleState={props.showScheduleState}\n      hideSchedule={props.hideSchedule}\n    />\n\n    </div>\n  </div>\n)\n\n}\n\n\nexport default PublicLessonDetailViewer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './CreateUserForm.css';\n\nconst SearchPublicLessonForm = (props) => {\n\nreturn (\n<div className=\"SearchFormContainer\">\n  <Form onSubmit={props.onConfirm}>\n\n  <Form.Row>\n  <Form.Group className=\"searchInput\" controlId=\"formBasicFieldSelect\">\n  <Form.Label>Regex Field</Form.Label>\n  <Form.Control as=\"select\">\n  <option>title</option>\n  <option>type</option>\n  <option>category</option>\n  <option>description</option>\n  <option>duration</option>\n  <option>tags</option>\n  </Form.Control>\n  <Form.Text className=\"text-muted\">\n  </Form.Text>\n  </Form.Group>\n\n  <Form.Group className=\"searchInput\" controlId=\"formBasicQuery\">\n  <Form.Label>Regex Query</Form.Label>\n  <Form.Control type=\"textarea\" rows=\"5\" placeholder=\"Query\"/>\n  </Form.Group>\n\n  {props.canCancel && (\n    <Button variant=\"danger\" className=\"searchFormBtn\" onClick={props.onCancel}>Cancel</Button>\n  )}\n\n  {props.canConfirm && (\n    <Button variant=\"primary\" className=\"searchFormBtn\" type=\"submit\">\n    Submit\n    </Button>\n  )}\n  </Form.Row>\n\n\n\n</Form>\n</div>\n\n\n)};\n\nexport default SearchPublicLessonForm;\n","import S3 from 'react-aws-s3';\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\n\nimport AuthContext from '../../context/auth-context';\nimport LessonList from '../../components/Lessons/LessonList/LessonList';\nimport SearchLessonList from '../../components/Lessons/LessonList/SearchLessonList';\nimport SearchSession from '../../components/Lessons/LessonList/LessonItem/SearchSession';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport AlertBox from '../../components/AlertBox';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport PublicLessonDetailViewer from '../../components/PublicLessonDetailViewer';\n\nimport SearchPublicLessonForm from '../../components/Forms/lesson/SearchPublicLessonForm';\n\nimport './Users.css';\n\nclass PublicLessonsPage extends Component {\n  state = {\n    searching: false,\n    lesson: null,\n    lessons: [],\n    searchLessons: [],\n    searchSession: null,\n    isLoading: false,\n    isSorting: false,\n    selectedLesson: null,\n    lessonSearchField: null,\n    lessonSearchQuery: null,\n    showSchedule: false,\n    canDelete: null,\n    canReport: null,\n    userAlert: null,\n    overlay: false,\n    overlayStatus: \"test\",\n    file: null,\n    showDetail: false,\n    mCol1Size: 3,\n    mCol2Size: 9,\n    guestId: '5eGe76Ed7e3Ue422aSb2T60b',\n  };\n  isActive = true;\n  static contextType = AuthContext;\n\n  componentDidMount() {\n\n    this.fetchLessonsPublic();\n  }\n\n  modalConfirmPublicSearchHandler = (event) => {\n    event.preventDefault();\n    const token = this.context.token;\n    let field = event.target.formBasicFieldSelect.value;\n    let query = event.target.formBasicQuery.value;\n\n    this.setState({\n      userSearchField: field,\n      userSearchQuery: query,\n      searching: false,\n      userAlert: \"Searching for Lesson...\"\n    })\n\n    if (\n      field.trim().length === 0 ||\n      query.trim().length === 0\n    ) {\n      this.setState({userAlert: \"blank fields detected!!!...Please try again...\"})\n      return;\n    }\n\n    const search = { field, query };\n    const requestBody = {\n      query: `\n        query {getPublicLessonsByField(\n          field:\"${field}\",\n          query:\"${query}\"\n        )\n        {_id,title,subtitle,type,category,price,points,description,duration,schedule{date,time},gallery{name,type,path},instructors{_id,username},tags}}\n      `}\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data.getPublicLessonsByField).slice(0,8);\n        const searchLessons = resData.data.getPublicLessonsByField;\n        this.setState({ searchLessons: searchLessons, userAlert: responseAlert})\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  modalCancelHandler = () => {\n    this.setState({ searching: false, selectedLesson: null});\n  };\n\n  fetchLessonsPublic() {\n    this.setState({ isLoading: true, userAlert: \"Fetching Public Lesson Master List...\" });\n    const requestBody = {\n      query: `\n          query {getAllPublicLessons\n            {_id,title,subtitle,type,category,price,points,description,duration,schedule{date,time},gallery{name,type,path},instructors{_id,username},tags}}\n        `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          this.setState({userAlert: 'Failed!'});\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const responseAlert = JSON.stringify(resData.data).slice(0,8);\n        this.setState({userAlert: responseAlert, lessons: resData.data.getAllPublicLessons, isLoading: false});\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showSchedule = () => {\n    this.setState({showSchedule: true})\n  };\n  hideSchedule = () => {\n    this.setState({showSchedule: false})\n  };\n\n  showDetailHandler = lessonId => {\n    console.log('beep',lessonId);\n  this.setState(prevState => {\n    const selectedLesson = prevState.lessons.find(e => e._id === lessonId);\n    // this.context.selectedLesson = selectedLesson;\n    this.setState({selectedLesson: selectedLesson, showDetail: true});\n    return { selectedLesson: selectedLesson };\n  });\n};\n  hideDetailHandler = () => {\n  this.setState({showDetail: false, overlay: false})\n};\n\n  userSearchClearlHandler () {\n    this.setState({searchUsers: [], userAlert: \"clearing lesson search results\"});\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n    <React.Fragment>\n      <AlertBox\n        authId={this.context.activityId}\n        alert={this.state.guestId}\n      />\n      {this.state.showDetail === true && (\n        <PublicLessonDetailViewer\n          lesson={this.state.selectedLesson}\n          onHideLessonDetail={this.hideDetailHandler}\n          showScheduleState={this.state.showSchedule}\n          showSchedule={this.showSchedule}\n          hideSchedule={this.hideSchedule}\n        />\n      )}\n\n      {this.state.overlay === true && (\n        <LoadingOverlay\n          status={this.state.overlayStatus}\n        />\n      )}\n\n      <Accordion>\n\n        <Row>\n\n        <Col md={this.state.mCol2Size} className=\"MasterCol2\">\n            <Container className=\"containerCombinedDetail1\">\n            <h1>Visitor lesson list</h1>\n            \n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"MasterList\">\n                <Row>\n                  <Col sm={2} className=\"userListSubMenuCol\">\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"FeaturedList\">List</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"SearchInput\">Search</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>\n\n                  <Col sm={10} className=\"userListMainCol\">\n                    <Tab.Content>\n\n                      <Tab.Pane eventKey=\"FeaturedList\">\n                        <Row className=\"userListRow\">\n\n                         {this.state.isLoading ? (\n                           <Spinner />\n                         ) : (\n                           <LessonList\n                           public\n                            canReport={this.state.canReport}\n                            onReport={this.reportLesson}\n                             lessons={this.state.lessons}\n                             onViewDetail={this.showDetailHandler}\n                           />\n                         )}\n                        </Row>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"SearchInput\">\n                        <Container className=\"containerSearchUserInput1\">\n\n                        <Row className=\"searchUserRowForm1\">\n                        <Col md={10} className=\"searchUserColForm\">\n                        <Tabs defaultActiveKey=\"Field\" id=\"uncontrolled-tab-example\">\n\n                        <Tab eventKey=\"Field\" title=\"Search by Field:\">\n                          <SearchPublicLessonForm\n                          canCancel\n                            canConfirm\n                            onCancel={this.modalCancelHandler}\n                            onConfirm={this.modalConfirmPublicSearchHandler}\n                            confirmText=\"Search\"\n                          />\n                        </Tab>\n\n                        </Tabs>\n                        </Col>\n                        </Row>\n\n                        <Row>\n                          <Card className=\"searchCard\">\n                            <Card.Body className=\"searchCardBody\">\n                              <Card.Title>This Search</Card.Title>\n                              <Card.Text>\n                                Field: {this.state.lessonSearchField}, Query: {this.state.lessonSearchQuery}\n                              </Card.Text>\n                            </Card.Body>\n                          </Card>\n                        </Row>\n                        <Row className=\"searchListRow1\">\n\n                        {this.state.searchLessons !== [] && (\n                          <SearchLessonList\n                            lessons={this.state.searchLessons}\n                            onViewDetail={this.showDetailHandler}\n                          />\n                        )}\n                        </Row>\n\n                        </Container>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Container>\n        </Col>\n      </Row>\n  </Accordion>\n</React.Fragment>\n    );\n  }\n}\n\nexport default PublicLessonsPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>My Couch Coach 0.0.1</h1>\n\n          </div>\n          <nav className=\"main-navigation__items\">\n\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Login</NavLink>\n                </li>\n              )}\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/signup\">Signup</NavLink>\n                </li>\n              )}\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/userProfile\">My Profile</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/users\">Users</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/lessons\">Lessons</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n              {!context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/lessons/public\">Lessons</NavLink>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/auth/Auth';\nimport SignupPage from './pages/auth/Signup';\n\nimport UserProfile from './pages/user/UserProfile';\nimport UsersPage from './pages/user/Users';\nimport LessonsPage from './pages/lesson/Lessons';\nimport PublicLessonsPage from './pages/lesson/PublicLessons';\nimport ProfileLessonViewer from './components/ProfileLessonViewer';\n\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    activityId: null,\n    role: null,\n    context: this.context,\n    sessionCookiePresent: false,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.sessionStorageAuth = null;\n    this.socket = io('http://localhost:9099');\n  }\n\n  login = (token, activityId, role, tokenExpiration) => {\n    this.setState({\n      token: token,\n      activityId: activityId,\n      role: role\n    });\n    this.context.token = token;\n    this.context.activityId = activityId;\n    this.context.role = role;\n    // this.socket.emit('msg_subscribe', {user: activityId, room:'msg'+activityId});\n  };\n\n  logout = () => {\n      this.logout2();\n  };\n\n\n  componentDidMount() {\n    // console.log(this.socket.connected);\n\n    if (sessionStorage.getItem('login info')) {\n\n      let seshStore = sessionStorage.getItem('login info');\n      this.context.token = seshStore.token;\n      this.context.activityId = seshStore.activityId;\n      this.context.role = seshStore.role;\n      this.setState({\n        sessionCookiePresent: true,\n        token: seshStore.token,\n        });\n    };\n\n    const conversationId = this.context.activityId;\n    this.socket.emit('unauthorizedClientConnect');\n    console.log(\"socket listening....\");\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  logout2 () {\n    console.log('...logging you out...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n        query{logout(\n          activityId:\"${activityId}\")\n        {_id,loggedIn}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        this.setState({\n           token: null,\n           activityId: null,\n           role: null,\n           sessionCookiePresent: null\n          });\n        sessionStorage.clear();\n        this.context = {\n          token: null,\n          activityId: null,\n          activityA: null,\n          activityB: null,\n          activityC: null,\n          role: null,\n          userId: null,\n          user: {},\n          users:[],\n          selectedUser: null,\n          lesson: {},\n          lessons: [],\n          selectedLesson: null,\n          selectedPerk: null,\n          selectedPromo: null,\n          selectedReview: null,\n          sender: null,\n          receiver: null,\n          userAlert: \"...\",\n          file: null,\n          fancyDate: null,\n          login: this.login,\n          logout: this.logout,\n        };\n\n      })\n      .catch(err => {\n        console.log(err);\n        // this.setState({userAlert: err});\n      });\n  }\n\n  userOffline () {\n    console.log('...taking user offline...');\n    const token = this.context.token;\n    const activityId = this.context.activityId;\n    const requestBody = {\n      query:`\n      mutation{userOffline(\n        activityId:\"${activityId}\",\n        userId:\"${activityId}\")\n      {_id,name,role,username,dob,public,age,addresses{type,number,street,town,city,country,postalCode},contact{phone,phone2,email},bio,profileImages{name,type,path},socialMedia{platform,handle},interests,perks{_id},promos{_id},friends{_id,username},points,tags,loggedIn,clientConnected,verification{verified,type,code},activity{date,request},likedLessons{_id},bookedLessons{date,ref{_id,title}},attendedLessons{date,ref{_id,title}},taughtLessons{date,ref{_id,title}},wishlist{date,ref{_id,title},booked},cart{dateAdded,sessionDate,lesson{_id,title}},comments{_id},messages{_id},orders{_id},paymentInfo{date,type,description,body,valid,primary},friendRequests{date,sender{_id,username},receiver{_id,username}}}}\n      `};\n\n    fetch('http://localhost:8088/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n          this.setState({userAlert: 'Failed!'});\n        }\n        return res.json();\n      })\n      .then(resData => {\n\n        const responseAlert = JSON.stringify(resData.data.userOffline).slice(2,25);\n        // this.context.user = ;\n      })\n      .catch(err => {\n        this.setState({userAlert: err});\n      });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              activityId: this.state.activityId,\n              activityA: null,\n              activityB: null,\n              activityC: null,\n              role: this.state.role,\n              userId: null,\n              user: {},\n              users:[],\n              selectedUser: {},\n              lesson: {},\n              lessons: [],\n              selectedLesson: {},\n              selectedPerk: {},\n              selectedPromo: {},\n              selectedReview: {},\n              sender: null,\n              receiver: null,\n              userAlert: \"...\",\n              file: null,\n              fancyDate: null,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <MainNavigation\n              role={this.state.role}\n            />\n            <main className=\"main-content\">\n              <Switch>\n                  {this.state.token && (<Redirect from=\"/\" to=\"/userProfile\" exact />)}\n\n                  {this.state.token && (<Route path=\"/userProfile\" component={UserProfile} />)}\n                  {this.state.token && (<Route path=\"/userProfile/LessonDetailViewer\" component={ProfileLessonViewer} />)}\n\n                  {this.state.token && (<Redirect from=\"/login\" to=\"/userProfile\" exact />)}\n\n                  {this.state.token && (<Route path=\"/users\" component={UsersPage} />)}\n                  {this.state.token && (<Route path=\"/lessons\" component={LessonsPage} />)}\n\n                  {!this.state.token && (<Route path=\"/lessons/public\" component={PublicLessonsPage} />)}\n                  {!this.state.token && (<Route path=\"/login\" component={AuthPage} />)}\n                  {!this.state.token && (<Route path=\"/signup\" component={SignupPage} />)}\n                  {!this.state.token && (<Redirect to=\"/login\" exact />)}\n              </Switch>\n            </main>\n\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}